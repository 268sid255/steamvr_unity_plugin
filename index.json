{
  "api/Valve.VR.InteractionSystem.Hand.AttachmentFlags.html": {
    "href": "api/Valve.VR.InteractionSystem.Hand.AttachmentFlags.html",
    "title": "Enum Hand.AttachmentFlags | SteamVR Unity Plugin",
    "keywords": "Enum Hand.AttachmentFlags Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [Flags] public enum AttachmentFlags Fields Name Description AllowSidegrade DetachFromOtherHand DetachOthers ParentToHand SnapOnAttach TurnOffGravity TurnOnKinematic VelocityMovement"
  },
  "api/Valve.VR.InteractionSystem.Hand.AttachedObject.html": {
    "href": "api/Valve.VR.InteractionSystem.Hand.AttachedObject.html",
    "title": "Struct Hand.AttachedObject | SteamVR Unity Plugin",
    "keywords": "Struct Hand.AttachedObject Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public struct AttachedObject Fields attachedObject Declaration public GameObject attachedObject Field Value Type Description UnityEngine.GameObject attachedOffsetTransform Declaration public Transform attachedOffsetTransform Field Value Type Description UnityEngine.Transform attachedRigidbody Declaration public Rigidbody attachedRigidbody Field Value Type Description UnityEngine.Rigidbody attachedRigidbodyUsedGravity Declaration public bool attachedRigidbodyUsedGravity Field Value Type Description System.Boolean attachedRigidbodyWasKinematic Declaration public bool attachedRigidbodyWasKinematic Field Value Type Description System.Boolean attachmentFlags Declaration public Hand.AttachmentFlags attachmentFlags Field Value Type Description Hand.AttachmentFlags attachTime Declaration public float attachTime Field Value Type Description System.Single collisionDetectionMode Declaration public CollisionDetectionMode collisionDetectionMode Field Value Type Description UnityEngine.CollisionDetectionMode easeSourcePosition Declaration public Vector3 easeSourcePosition Field Value Type Description UnityEngine.Vector3 easeSourceRotation Declaration public Quaternion easeSourceRotation Field Value Type Description UnityEngine.Quaternion grabbedWithType Declaration public GrabTypes grabbedWithType Field Value Type Description GrabTypes handAttachmentPointTransform Declaration public Transform handAttachmentPointTransform Field Value Type Description UnityEngine.Transform initialPositionalOffset Declaration public Vector3 initialPositionalOffset Field Value Type Description UnityEngine.Vector3 initialRotationalOffset Declaration public Quaternion initialRotationalOffset Field Value Type Description UnityEngine.Quaternion interactable Declaration public Interactable interactable Field Value Type Description Interactable isParentedToHand Declaration public bool isParentedToHand Field Value Type Description System.Boolean originalParent Declaration public GameObject originalParent Field Value Type Description UnityEngine.GameObject Methods HasAttachFlag(Hand.AttachmentFlags) Declaration public bool HasAttachFlag(Hand.AttachmentFlags flag) Parameters Type Name Description Hand.AttachmentFlags flag Returns Type Description System.Boolean"
  },
  "api/Valve.VR.InteractionSystem.DestroyOnParticleSystemDeath.html": {
    "href": "api/Valve.VR.InteractionSystem.DestroyOnParticleSystemDeath.html",
    "title": "Class DestroyOnParticleSystemDeath | SteamVR Unity Plugin",
    "keywords": "Class DestroyOnParticleSystemDeath Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DestroyOnParticleSystemDeath Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(ParticleSystem))] public class DestroyOnParticleSystemDeath : MonoBehaviour"
  },
  "api/Valve.VR.InteractionSystem.DestroyOnDetachedFromHand.html": {
    "href": "api/Valve.VR.InteractionSystem.DestroyOnDetachedFromHand.html",
    "title": "Class DestroyOnDetachedFromHand | SteamVR Unity Plugin",
    "keywords": "Class DestroyOnDetachedFromHand Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DestroyOnDetachedFromHand Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class DestroyOnDetachedFromHand : MonoBehaviour"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.StateDownHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.StateDownHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.StateDownHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.StateDownHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateDownHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean newState"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.TrackingChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.TrackingChangeHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.TrackingChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.TrackingChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void TrackingChangeHandler(SteamVR_Action_Skeleton fromAction, ETrackingResult trackingState); Parameters Type Name Description SteamVR_Action_Skeleton fromAction ETrackingResult trackingState"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.DeviceConnectedChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.DeviceConnectedChangeHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.DeviceConnectedChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.DeviceConnectedChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void DeviceConnectedChangeHandler(SteamVR_Action_Skeleton fromAction, bool deviceConnected); Parameters Type Name Description SteamVR_Action_Skeleton fromAction System.Boolean deviceConnected"
  },
  "api/Valve.VR.SteamVR_Input_ActionSet_buggy.html": {
    "href": "api/Valve.VR.SteamVR_Input_ActionSet_buggy.html",
    "title": "Class SteamVR_Input_ActionSet_buggy | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input_ActionSet_buggy Inheritance System.Object SteamVR_ActionSet SteamVR_Input_ActionSet_buggy Implements System.IEquatable < SteamVR_ActionSet > ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_ActionSet.setData SteamVR_ActionSet.allActions SteamVR_ActionSet.nonVisualInActions SteamVR_ActionSet.visualActions SteamVR_ActionSet.poseActions SteamVR_ActionSet.skeletonActions SteamVR_ActionSet.outActionArray SteamVR_ActionSet.fullPath SteamVR_ActionSet.usage SteamVR_ActionSet.handle SteamVR_ActionSet.initialized SteamVR_ActionSet.Create<CreateType>(String) SteamVR_ActionSet.CreateFromName<CreateType>(String) SteamVR_ActionSet.PreInitialize(String) SteamVR_ActionSet.FinishPreInitialize() SteamVR_ActionSet.Initialize(Boolean, Boolean) SteamVR_ActionSet.GetPath() SteamVR_ActionSet.IsActive(SteamVR_Input_Sources) SteamVR_ActionSet.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.Activate(SteamVR_Input_Sources, Int32, Boolean) SteamVR_ActionSet.Deactivate(SteamVR_Input_Sources) SteamVR_ActionSet.GetShortName() SteamVR_ActionSet.ReadRawSetActive(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetPriority(SteamVR_Input_Sources) SteamVR_ActionSet.GetActionSetData() SteamVR_ActionSet.GetCopy<CreateType>() SteamVR_ActionSet.Equals(SteamVR_ActionSet) SteamVR_ActionSet.Equals(Object) SteamVR_ActionSet.GetHashCode() SteamVR_ActionSet.ISerializationCallbackReceiver.OnBeforeSerialize() SteamVR_ActionSet.ISerializationCallbackReceiver.OnAfterDeserialize() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Input_ActionSet_buggy : SteamVR_ActionSet, IEquatable<SteamVR_ActionSet>, ISteamVR_ActionSet, ISerializationCallbackReceiver Properties Brake Declaration public virtual SteamVR_Action_Boolean Brake { get; } Property Value Type Description SteamVR_Action_Boolean Reset Declaration public virtual SteamVR_Action_Boolean Reset { get; } Property Value Type Description SteamVR_Action_Boolean Steering Declaration public virtual SteamVR_Action_Vector2 Steering { get; } Property Value Type Description SteamVR_Action_Vector2 Throttle Declaration public virtual SteamVR_Action_Single Throttle { get; } Property Value Type Description SteamVR_Action_Single Implements System.IEquatable<T> ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector3.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector3.AxisHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector3.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector3.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Behaviour_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 newAxis, Vector3 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 newAxis UnityEngine.Vector3 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_BooleanEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_BooleanEvent.html",
    "title": "Class SteamVR_Behaviour_BooleanEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_BooleanEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Boolean , SteamVR_Input_Sources , System.Boolean > SteamVR_Behaviour_BooleanEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean>.Invoke(Valve.VR.SteamVR_Behaviour_Boolean, Valve.VR.SteamVR_Input_Sources, System.Boolean) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_BooleanEvent : UnityEvent<SteamVR_Behaviour_Boolean, SteamVR_Input_Sources, bool>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Source_Map.html",
    "title": "Class SteamVR_Action_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map<SourceElement> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class SteamVR_Action_Source_Map Fields action The base SteamVR_Action this map corresponds to Declaration public SteamVR_Action action Field Value Type Description SteamVR_Action Properties actionSet The ActionSet this action is contained within Declaration public SteamVR_ActionSet actionSet { get; protected set; } Property Value Type Description SteamVR_ActionSet direction The action direction of this action (in for input - most actions, out for output - haptics) Declaration public SteamVR_ActionDirections direction { get; protected set; } Property Value Type Description SteamVR_ActionDirections fullPath The full string path for this action (from the action manifest) Declaration public string fullPath { get; protected set; } Property Value Type Description System.String handle The underlying handle for this action used for native SteamVR Input calls. Retrieved on Initialization from SteamVR. Declaration public ulong handle { get; protected set; } Property Value Type Description System.UInt64 Methods Initialize() [Should not be called by user code] Initializes the handle for the action and any other related SteamVR data. Declaration public virtual void Initialize() PreInitialize(SteamVR_Action, String, Boolean) Declaration public virtual void PreInitialize(SteamVR_Action wrappingAction, string actionPath, bool throwErrors = true) Parameters Type Name Description SteamVR_Action wrappingAction System.String actionPath System.Boolean throwErrors PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration protected abstract void PreinitializeMap(SteamVR_Input_Sources inputSource, SteamVR_Action wrappingAction) Parameters Type Name Description SteamVR_Input_Sources inputSource SteamVR_Action wrappingAction"
  },
  "api/Valve.VR.SteamVR_Render.html": {
    "href": "api/Valve.VR.SteamVR_Render.html",
    "title": "Class SteamVR_Render | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Render Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Render Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Render : MonoBehaviour Fields externalCamera Declaration public SteamVR_ExternalCamera externalCamera Field Value Type Description SteamVR_ExternalCamera externalCameraConfigPath Declaration public string externalCameraConfigPath Field Value Type Description System.String gamePoses Declaration public TrackedDevicePose_t[] gamePoses Field Value Type Description TrackedDevicePose_t [] poses Declaration public TrackedDevicePose_t[] poses Field Value Type Description TrackedDevicePose_t [] Properties eye Declaration public static EVREye eye { get; } Property Value Type Description EVREye instance Declaration public static SteamVR_Render instance { get; } Property Value Type Description SteamVR_Render pauseRendering Declaration public static bool pauseRendering { get; set; } Property Value Type Description System.Boolean Methods Add(SteamVR_Camera) Declaration public static void Add(SteamVR_Camera vrcam) Parameters Type Name Description SteamVR_Camera vrcam Remove(SteamVR_Camera) Declaration public static void Remove(SteamVR_Camera vrcam) Parameters Type Name Description SteamVR_Camera vrcam Top() Declaration public static SteamVR_Camera Top() Returns Type Description SteamVR_Camera UpdatePoses() Declaration public void UpdatePoses()"
  },
  "api/Valve.VR.SteamVR_PlayArea.html": {
    "href": "api/Valve.VR.SteamVR_PlayArea.html",
    "title": "Class SteamVR_PlayArea | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_PlayArea Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_PlayArea Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] [RequireComponent(typeof(MeshRenderer), typeof(MeshFilter))] public class SteamVR_PlayArea : MonoBehaviour Fields borderThickness Declaration public float borderThickness Field Value Type Description System.Single color Declaration public Color color Field Value Type Description UnityEngine.Color drawInGame Declaration public bool drawInGame Field Value Type Description System.Boolean drawWireframeWhenSelectedOnly Declaration public bool drawWireframeWhenSelectedOnly Field Value Type Description System.Boolean size Declaration public SteamVR_PlayArea.Size size Field Value Type Description SteamVR_PlayArea.Size vertices Declaration [HideInInspector] public Vector3[] vertices Field Value Type Description UnityEngine.Vector3 [] wireframeHeight Declaration public float wireframeHeight Field Value Type Description System.Single Methods BuildMesh() Declaration public void BuildMesh() DrawWireframe() Declaration public void DrawWireframe() GetBounds(SteamVR_PlayArea.Size, ref HmdQuad_t) Declaration public static bool GetBounds(SteamVR_PlayArea.Size size, ref HmdQuad_t pRect) Parameters Type Name Description SteamVR_PlayArea.Size size HmdQuad_t pRect Returns Type Description System.Boolean OnEnable() Declaration public void OnEnable()"
  },
  "api/Valve.VR.IVRIOBuffer.html": {
    "href": "api/Valve.VR.IVRIOBuffer.html",
    "title": "Struct IVRIOBuffer | SteamVR Unity Plugin",
    "keywords": "Struct IVRIOBuffer Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRIOBuffer"
  },
  "api/Valve.VR.InteractionSystem.UIElementEditor.html": {
    "href": "api/Valve.VR.InteractionSystem.UIElementEditor.html",
    "title": "Class UIElementEditor | SteamVR Unity Plugin",
    "keywords": "Class UIElementEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor UIElementEditor Inherited Members UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.Repaint() UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.serializedObject UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [CustomEditor(typeof(UIElement))] public class UIElementEditor : Editor, IPreviewable Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/Valve.VR.InteractionSystem.ArrowheadRotation.html": {
    "href": "api/Valve.VR.InteractionSystem.ArrowheadRotation.html",
    "title": "Class ArrowheadRotation | SteamVR Unity Plugin",
    "keywords": "Class ArrowheadRotation Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ArrowheadRotation Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ArrowheadRotation : MonoBehaviour"
  },
  "api/Valve.VR.EVRTrackedCameraFrameLayout.html": {
    "href": "api/Valve.VR.EVRTrackedCameraFrameLayout.html",
    "title": "Enum EVRTrackedCameraFrameLayout | SteamVR Unity Plugin",
    "keywords": "Enum EVRTrackedCameraFrameLayout Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRTrackedCameraFrameLayout Fields Name Description HorizontalLayout Mono Stereo VerticalLayout"
  },
  "api/Valve.VR.Compositor_OverlaySettings.html": {
    "href": "api/Valve.VR.Compositor_OverlaySettings.html",
    "title": "Struct Compositor_OverlaySettings | SteamVR Unity Plugin",
    "keywords": "Struct Compositor_OverlaySettings Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct Compositor_OverlaySettings Fields alpha Declaration public float alpha Field Value Type Description System.Single antialias Declaration public bool antialias Field Value Type Description System.Boolean curved Declaration public bool curved Field Value Type Description System.Boolean distance Declaration public float distance Field Value Type Description System.Single gridDivs Declaration public float gridDivs Field Value Type Description System.Single gridScale Declaration public float gridScale Field Value Type Description System.Single gridWidth Declaration public float gridWidth Field Value Type Description System.Single scale Declaration public float scale Field Value Type Description System.Single size Declaration public uint size Field Value Type Description System.UInt32 transform Declaration public HmdMatrix44_t transform Field Value Type Description HmdMatrix44_t uOffset Declaration public float uOffset Field Value Type Description System.Single uScale Declaration public float uScale Field Value Type Description System.Single vOffset Declaration public float vOffset Field Value Type Description System.Single vScale Declaration public float vScale Field Value Type Description System.Single"
  },
  "api/Valve.VR.EVRApplicationError.html": {
    "href": "api/Valve.VR.EVRApplicationError.html",
    "title": "Enum EVRApplicationError | SteamVR Unity Plugin",
    "keywords": "Enum EVRApplicationError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRApplicationError Fields Name Description AppKeyAlreadyExists ApplicationAlreadyRunning ApplicationAlreadyStarting BufferTooSmall InvalidApplication InvalidIndex InvalidManifest InvalidParameter IPCFailed IsTemplate LaunchFailed LaunchInProgress NoApplication NoManifest None OldApplicationQuitting PropertyNotSet SteamVRIsExiting TransitionAborted UnknownApplication UnknownProperty"
  },
  "api/Valve.VR.ETrackedControllerRole.html": {
    "href": "api/Valve.VR.ETrackedControllerRole.html",
    "title": "Enum ETrackedControllerRole | SteamVR Unity Plugin",
    "keywords": "Enum ETrackedControllerRole Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackedControllerRole Fields Name Description Invalid LeftHand Max OptOut RightHand Treadmill"
  },
  "api/Valve.VR.EHiddenAreaMeshType.html": {
    "href": "api/Valve.VR.EHiddenAreaMeshType.html",
    "title": "Enum EHiddenAreaMeshType | SteamVR Unity Plugin",
    "keywords": "Enum EHiddenAreaMeshType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EHiddenAreaMeshType Fields Name Description k_eHiddenAreaMesh_Inverse k_eHiddenAreaMesh_LineLoop k_eHiddenAreaMesh_Max k_eHiddenAreaMesh_Standard"
  },
  "api/Valve.VR.ECollisionBoundsStyle.html": {
    "href": "api/Valve.VR.ECollisionBoundsStyle.html",
    "title": "Enum ECollisionBoundsStyle | SteamVR Unity Plugin",
    "keywords": "Enum ECollisionBoundsStyle Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ECollisionBoundsStyle Fields Name Description COLLISION_BOUNDS_STYLE_ADVANCED COLLISION_BOUNDS_STYLE_BEGINNER COLLISION_BOUNDS_STYLE_COUNT COLLISION_BOUNDS_STYLE_INTERMEDIATE COLLISION_BOUNDS_STYLE_NONE COLLISION_BOUNDS_STYLE_SQUARES"
  },
  "api/Valve.VR.D3D12TextureData_t.html": {
    "href": "api/Valve.VR.D3D12TextureData_t.html",
    "title": "Struct D3D12TextureData_t | SteamVR Unity Plugin",
    "keywords": "Struct D3D12TextureData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct D3D12TextureData_t Fields m_nNodeMask Declaration public uint m_nNodeMask Field Value Type Description System.UInt32 m_pCommandQueue Declaration public IntPtr m_pCommandQueue Field Value Type Description System.IntPtr m_pResource Declaration public IntPtr m_pResource Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.MirrorType.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.MirrorType.html",
    "title": "Enum SteamVR_Behaviour_Skeleton.MirrorType | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Behaviour_Skeleton.MirrorType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum MirrorType Fields Name Description LeftToRight None RightToLeft"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void DeviceConnectedChangeHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource, bool deviceConnected); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource System.Boolean deviceConnected"
  },
  "api/Valve.VR.SteamVR_Action_Vibration.ExecuteHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vibration.ExecuteHandler.html",
    "title": "Delegate SteamVR_Action_Vibration.ExecuteHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vibration.ExecuteHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ExecuteHandler(SteamVR_Action_Vibration fromAction, SteamVR_Input_Sources fromSource, float secondsFromNow, float durationSeconds, float frequency, float amplitude); Parameters Type Name Description SteamVR_Action_Vibration fromAction SteamVR_Input_Sources fromSource System.Single secondsFromNow System.Single durationSeconds System.Single frequency System.Single amplitude"
  },
  "api/Valve.VR.SteamVR_Action_Vibration.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vibration.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Vibration.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vibration.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Vibration fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Vibration fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Vector3_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3_Source_Map.html",
    "title": "Class SteamVR_Action_Vector3_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector3_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Vector3_Source > SteamVR_Action_In_Source_Map < SteamVR_Action_Vector3_Source > SteamVR_Action_Vector3_Source_Map Inherited Members SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>.updatingSources SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>.UpdateValues() SteamVR_Action_Source_Map<SteamVR_Action_Vector3_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Vector3_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Vector3_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Vector3_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SteamVR_Action_Vector3_Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vector3_Source_Map : SteamVR_Action_In_Source_Map<SteamVR_Action_Vector3_Source>"
  },
  "api/Valve.VR.SteamVR_Action_Vector3_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3_Source.html",
    "title": "Class SteamVR_Action_Vector3_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector3_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Vector3_Source Implements ISteamVR_Action_Vector3 ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vector3_Source : SteamVR_Action_In_Source, ISteamVR_Action_Vector3, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields actionData Declaration protected InputAnalogActionData_t actionData Field Value Type Description InputAnalogActionData_t actionData_size Declaration protected static uint actionData_size Field Value Type Description System.UInt32 changeTolerance The amount the axis needs to change before a change is detected Declaration public float changeTolerance Field Value Type Description System.Single lastActionData Declaration protected InputAnalogActionData_t lastActionData Field Value Type Description InputAnalogActionData_t vector3Action Declaration protected SteamVR_Action_Vector3 vector3Action Field Value Type Description SteamVR_Action_Vector3 Properties active Returns true if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding activeOrigin The handle to the origin of the component that was used to update the value for this action Declaration public override ulong activeOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.activeOrigin axis The current Vector3 value of the action. Note: Will only return non-zero if the action is also active. Declaration public Vector3 axis { get; protected set; } Property Value Type Description UnityEngine.Vector3 changed If the Vector3 value of this action has changed more than the changeTolerance since the last update Declaration public override bool changed { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.changed delta The Vector3 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector3 delta { get; protected set; } Property Value Type Description UnityEngine.Vector3 lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding Returns true if the action was bound during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding lastActiveOrigin The handle to the origin of the component that was used to update the value for this action (for the previous update) Declaration public override ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.lastActiveOrigin lastAxis The Vector3 value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector3 lastAxis { get; protected set; } Property Value Type Description UnityEngine.Vector3 lastChanged If the Vector3 value of this action has changed more than the changeTolerance between the previous update and the update before that Declaration public override bool lastChanged { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.lastChanged lastDelta The Vector3 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public Vector3 lastDelta { get; protected set; } Property Value Type Description UnityEngine.Vector3 Methods Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_In_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_In_Source.UpdateValue() Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Vector3.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vector3.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Vector3.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vector3.ActiveChangeHandler onAxis Event fires when the value of the action is non-zero Declaration public event SteamVR_Action_Vector3.AxisHandler onAxis Event Type Type Description SteamVR_Action_Vector3.AxisHandler onChange This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Vector3.ChangeHandler onChange Event Type Type Description SteamVR_Action_Vector3.ChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Vector3.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Vector3.UpdateHandler Implements ISteamVR_Action_Vector3 ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Single.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Single.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Single.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Action_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.SteamVR_Action_Single.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single.AxisHandler.html",
    "title": "Delegate SteamVR_Action_Single.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Single.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Action_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.SteamVR_Action_Single.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Single.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Single.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Single fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Pose_Source_Map-1.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose_Source_Map-1.html",
    "title": "Class SteamVR_Action_Pose_Source_Map<Source> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Pose_Source_Map<Source> Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map <Source> SteamVR_Action_In_Source_Map <Source> SteamVR_Action_Pose_Source_Map<Source> SteamVR_Action_Skeleton_Source_Map Inherited Members SteamVR_Action_In_Source_Map<Source>.updatingSources SteamVR_Action_In_Source_Map<Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<Source>.UpdateValues() SteamVR_Action_Source_Map<Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<Source>.sources SteamVR_Action_Source_Map<Source>.Initialize() SteamVR_Action_Source_Map<Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Pose_Source_Map<Source> : SteamVR_Action_In_Source_Map<Source> where Source : SteamVR_Action_Pose_Source, new() Type Parameters Name Description Source Methods SetTrackingUniverseOrigin(ETrackingUniverseOrigin) Sets all pose (and skeleton) actions to use the specified universe origin without going through the sourcemap indexer Declaration public void SetTrackingUniverseOrigin(ETrackingUniverseOrigin newOrigin) Parameters Type Name Description ETrackingUniverseOrigin newOrigin UpdateValues(Boolean) Declaration public virtual void UpdateValues(bool skipStateAndEventUpdates) Parameters Type Name Description System.Boolean skipStateAndEventUpdates"
  },
  "api/Valve.VR.SteamVR_Action.html": {
    "href": "api/Valve.VR.SteamVR_Action.html",
    "title": "Class SteamVR_Action | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action Inheritance System.Object SteamVR_Action SteamVR_Action<SourceMap, SourceElement> Implements System.IEquatable < SteamVR_Action > ISteamVR_Action ISteamVR_Action_Source Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public abstract class SteamVR_Action : IEquatable<SteamVR_Action>, ISteamVR_Action, ISteamVR_Action_Source Constructors SteamVR_Action() Declaration public SteamVR_Action() Fields actionPath Declaration [SerializeField] protected string actionPath Field Value Type Description System.String needsReinit Declaration [SerializeField] protected bool needsReinit Field Value Type Description System.Boolean startUpdatingSourceOnAccess Not recommended. Determines if we should do a lazy-loading style of updating actions where we don't check for their data until the code asks for it. Note: You will have to manually activate actions otherwise. Not recommended. Declaration public static bool startUpdatingSourceOnAccess Field Value Type Description System.Boolean Properties actionSet The actionset this action is contained within Declaration public abstract SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet active [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action is bound and the actionset is active Declaration public abstract bool active { get; } Property Value Type Description System.Boolean activeBinding [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action is bound Declaration public abstract bool activeBinding { get; } Property Value Type Description System.Boolean direction The action direction of this action (in for input - most actions, out for output - mainly haptics) Declaration public abstract SteamVR_ActionDirections direction { get; } Property Value Type Description SteamVR_ActionDirections fullPath The full string path for this action Declaration public abstract string fullPath { get; } Property Value Type Description System.String handle The underlying handle for this action used for native SteamVR Input calls Declaration public abstract ulong handle { get; } Property Value Type Description System.UInt64 lastActive [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action was bound and the actionset was active at the previous update Declaration public abstract bool lastActive { get; } Property Value Type Description System.Boolean lastActiveBinding Declaration public abstract bool lastActiveBinding { get; } Property Value Type Description System.Boolean setActive [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action set that contains this action is active for Any input source. Declaration public bool setActive { get; } Property Value Type Description System.Boolean Methods Create<CreateType>(String) [Should not be called by user code] Creates an actual action that will later be called by user code. Declaration public static CreateType Create<CreateType>(string newActionPath) where CreateType : SteamVR_Action, new() Parameters Type Name Description System.String newActionPath Returns Type Description CreateType Type Parameters Name Description CreateType CreateUninitialized(String, Boolean) Declaration protected abstract void CreateUninitialized(string newActionPath, bool caseSensitive) Parameters Type Name Description System.String newActionPath System.Boolean caseSensitive CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) Declaration protected abstract void CreateUninitialized(string newActionSet, SteamVR_ActionDirections direction, string newAction, bool caseSensitive) Parameters Type Name Description System.String newActionSet SteamVR_ActionDirections direction System.String newAction System.Boolean caseSensitive CreateUninitialized<CreateType>(String, Boolean) [Should not be called by user code] Creates an uninitialized action that can be saved without being attached to a real action Declaration public static CreateType CreateUninitialized<CreateType>(string actionPath, bool caseSensitive) where CreateType : SteamVR_Action, new() Parameters Type Name Description System.String actionPath System.Boolean caseSensitive Returns Type Description CreateType Type Parameters Name Description CreateType CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) [Should not be called by user code] Creates an uninitialized action that can be saved without being attached to a real action Declaration public static CreateType CreateUninitialized<CreateType>(string setName, SteamVR_ActionDirections direction, string newActionName, bool caseSensitive) where CreateType : SteamVR_Action, new() Parameters Type Name Description System.String setName SteamVR_ActionDirections direction System.String newActionName System.Boolean caseSensitive Returns Type Description CreateType Type Parameters Name Description CreateType Equals(Object) Compares two SteamVR_Actions by their action path instead of references Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) Equals(SteamVR_Action) Compares two SteamVR_Actions by their action path instead of references Declaration public bool Equals(SteamVR_Action other) Parameters Type Name Description SteamVR_Action other Returns Type Description System.Boolean FindExistingActionForPartialPath(String) Tries to find an existing action matching some subsection of an action path. More useful functions in SteamVR_Input. Declaration public static SteamVR_Action FindExistingActionForPartialPath(string path) Parameters Type Name Description System.String path Returns Type Description SteamVR_Action GetActive(SteamVR_Input_Sources) Gets a value indicating whether or not the action is currently bound and if the containing action set is active Declaration public abstract bool GetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetActiveBinding(SteamVR_Input_Sources) Gets a value indicating whether or not the action is currently bound Declaration public abstract bool GetActiveBinding(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetCopy<CreateType>() [Should not be called by user code] Gets a copy of the underlying source map so we're always using the same underlying event data Declaration public CreateType GetCopy<CreateType>() where CreateType : SteamVR_Action, new() Returns Type Description CreateType Type Parameters Name Description CreateType GetHashCode() Creates a hashcode from the full action path of this action Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() GetLastActive(SteamVR_Input_Sources) Gets the value from the previous update indicating whether or not the action is currently bound and if the containing action set is active Declaration public abstract bool GetLastActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastActiveBinding(SteamVR_Input_Sources) Gets the value from the previous update indicating whether or not the action is currently bound Declaration public abstract bool GetLastActiveBinding(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetPath() Returns the full action path for this action. Declaration public string GetPath() Returns Type Description System.String GetSetActive(SteamVR_Input_Sources) Gets a value indicating whether or not the containing action set is active Declaration public bool GetSetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetShortName() Gets just the name of this action. The last part of the path for this action. Removes action set, and direction. Declaration public string GetShortName() Returns Type Description System.String GetSourceMap() Declaration public abstract SteamVR_Action_Source_Map GetSourceMap() Returns Type Description SteamVR_Action_Source_Map GetTimeLastChanged(SteamVR_Input_Sources) Gets the last timestamp this action was changed. (by Time.realtimeSinceStartup) Declaration public abstract float GetTimeLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The input source to use to select the last changed time Returns Type Description System.Single Initialize(Boolean, Boolean) Initializes the individual sources as well as the base map itself. Gets the handle for the action from SteamVR and does any other SteamVR related setup that needs to be done Declaration public abstract void Initialize(bool createNew = false, bool throwNotSetError = true) Parameters Type Name Description System.Boolean createNew System.Boolean throwNotSetError InitializeCopy(String, SteamVR_Action_Source_Map) Declaration protected abstract void InitializeCopy(string newActionPath, SteamVR_Action_Source_Map newData) Parameters Type Name Description System.String newActionPath SteamVR_Action_Source_Map newData IsUpdating(SteamVR_Input_Sources) Returns true if the data for this action is being updated for the specified input source. This can be triggered by querying the data Declaration public abstract bool IsUpdating(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean PreInitialize(String) Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. Declaration public abstract void PreInitialize(string newActionPath) Parameters Type Name Description System.String newActionPath TryNeedsInitData() Declaration public abstract string TryNeedsInitData() Returns Type Description System.String Operators Equality(SteamVR_Action, SteamVR_Action) Compares two SteamVR_Actions by their action path. Declaration public static bool operator ==(SteamVR_Action action1, SteamVR_Action action2) Parameters Type Name Description SteamVR_Action action1 SteamVR_Action action2 Returns Type Description System.Boolean Inequality(SteamVR_Action, SteamVR_Action) Compares two SteamVR_Actions by their action path. Declaration public static bool operator !=(SteamVR_Action action1, SteamVR_Action action2) Parameters Type Name Description SteamVR_Action action1 SteamVR_Action action2 Returns Type Description System.Boolean Implements System.IEquatable<T> ISteamVR_Action ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action-2.html": {
    "href": "api/Valve.VR.SteamVR_Action-2.html",
    "title": "Class SteamVR_Action<SourceMap, SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action<SourceMap, SourceElement> Inheritance System.Object SteamVR_Action SteamVR_Action<SourceMap, SourceElement> SteamVR_Action_In<SourceMap, SourceElement> SteamVR_Action_Out<SourceMap, SourceElement> Implements System.IEquatable < SteamVR_Action > ISteamVR_Action ISteamVR_Action_Source Inherited Members SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.setActive SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public abstract class SteamVR_Action<SourceMap, SourceElement> : SteamVR_Action, IEquatable<SteamVR_Action>, ISteamVR_Action, ISteamVR_Action_Source where SourceMap : SteamVR_Action_Source_Map<SourceElement>, new() where SourceElement : SteamVR_Action_Source, new() Type Parameters Name Description SourceMap SourceElement Fields initialized Declaration [NonSerialized] protected bool initialized Field Value Type Description System.Boolean sourceMap The map to the source elements, a dictionary of source elements. Should be accessed through the action indexer Declaration [NonSerialized] protected SourceMap sourceMap Field Value Type Description SourceMap Properties actionSet The actionset this action is contained within Declaration public override SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet Overrides SteamVR_Action.actionSet active [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action is bound and the actionset is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action.active activeBinding [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action.activeBinding direction The action direction of this action (in for input - most actions, out for output - mainly haptics) Declaration public override SteamVR_ActionDirections direction { get; } Property Value Type Description SteamVR_ActionDirections Overrides SteamVR_Action.direction fullPath The full string path for this action Declaration public override string fullPath { get; } Property Value Type Description System.String Overrides SteamVR_Action.fullPath handle The underlying handle for this action used for native SteamVR Input calls Declaration public override ulong handle { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action.handle Item[SteamVR_Input_Sources] Access this action restricted to individual input sources. Declaration public virtual SourceElement this[SteamVR_Input_Sources inputSource] { get; } Parameters Type Name Description SteamVR_Input_Sources inputSource The input source to access for this action Property Value Type Description SourceElement lastActive [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action.lastActive lastActiveBinding [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action was bound at the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action.lastActiveBinding Methods CreateUninitialized(String, Boolean) Declaration protected override void CreateUninitialized(string newActionPath, bool caseSensitive) Parameters Type Name Description System.String newActionPath System.Boolean caseSensitive Overrides SteamVR_Action.CreateUninitialized(String, Boolean) CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) Declaration protected override void CreateUninitialized(string newActionSet, SteamVR_ActionDirections direction, string newAction, bool caseSensitive) Parameters Type Name Description System.String newActionSet SteamVR_ActionDirections direction System.String newAction System.Boolean caseSensitive Overrides SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) GetActive(SteamVR_Input_Sources) Gets a value indicating whether or not the action is currently bound and if the containing action set is active Declaration public override bool GetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean Overrides SteamVR_Action.GetActive(SteamVR_Input_Sources) GetActiveBinding(SteamVR_Input_Sources) Gets a value indicating whether or not the action is currently bound Declaration public override bool GetActiveBinding(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean Overrides SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) GetLastActive(SteamVR_Input_Sources) Gets the value from the previous update indicating whether or not the action was currently bound and if the containing action set was active Declaration public override bool GetLastActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean Overrides SteamVR_Action.GetLastActive(SteamVR_Input_Sources) GetLastActiveBinding(SteamVR_Input_Sources) Gets the value from the previous update indicating whether or not the action is currently bound Declaration public override bool GetLastActiveBinding(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean Overrides SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) GetSourceMap() [Should not be called by user code] Returns the underlying source map for the action. [Should not be called by user code] Returns the underlying source map for the action. Declaration public override SteamVR_Action_Source_Map GetSourceMap() Returns Type Description SteamVR_Action_Source_Map Overrides SteamVR_Action.GetSourceMap() InitAfterDeserialize() Declaration protected void InitAfterDeserialize() Initialize(Boolean, Boolean) [Should not be called by user code] Initializes the individual sources as well as the base map itself. Gets the handle for the action from SteamVR and does any other SteamVR related setup that needs to be done Declaration public override void Initialize(bool createNew = false, bool throwErrors = true) Parameters Type Name Description System.Boolean createNew System.Boolean throwErrors Overrides SteamVR_Action.Initialize(Boolean, Boolean) InitializeCopy(String, SteamVR_Action_Source_Map) Declaration protected override void InitializeCopy(string newActionPath, SteamVR_Action_Source_Map newData) Parameters Type Name Description System.String newActionPath SteamVR_Action_Source_Map newData Overrides SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) PreInitialize(String) Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. Declaration public override void PreInitialize(string newActionPath) Parameters Type Name Description System.String newActionPath Overrides SteamVR_Action.PreInitialize(String) TryNeedsInitData() [Should not be called by user code] If it looks like we aren't attached to a real action then try and find the existing action for our given path. Declaration public override string TryNeedsInitData() Returns Type Description System.String Overrides SteamVR_Action.TryNeedsInitData() Implements System.IEquatable<T> ISteamVR_Action ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR.html": {
    "href": "api/Valve.VR.SteamVR.html",
    "title": "Class SteamVR | SteamVR Unity Plugin",
    "keywords": "Class SteamVR Inheritance System.Object SteamVR Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR : IDisposable Fields connected Declaration public static bool[] connected Field Value Type Description System.Boolean [] defaultAppKeyTemplate Declaration public const string defaultAppKeyTemplate = \"application.generated.{0}\" Field Value Type Description System.String defaultUnityAppKeyTemplate Declaration public const string defaultUnityAppKeyTemplate = \"application.generated.unity.{0}.exe\" Field Value Type Description System.String initializedState Declaration public static SteamVR.InitializedStates initializedState Field Value Type Description SteamVR.InitializedStates textureType Declaration public ETextureType textureType Field Value Type Description ETextureType Properties active Declaration public static bool active { get; } Property Value Type Description System.Boolean aspect Declaration public float aspect { get; } Property Value Type Description System.Single calibrating Declaration public static bool calibrating { get; } Property Value Type Description System.Boolean compositor Declaration public CVRCompositor compositor { get; } Property Value Type Description CVRCompositor enabled Declaration public static bool enabled { get; set; } Property Value Type Description System.Boolean eyes Declaration public SteamVR_Utils.RigidTransform[] eyes { get; } Property Value Type Description SteamVR_Utils.RigidTransform [] fieldOfView Declaration public float fieldOfView { get; } Property Value Type Description System.Single hmd Declaration public CVRSystem hmd { get; } Property Value Type Description CVRSystem hmd_DisplayFrequency Declaration public float hmd_DisplayFrequency { get; } Property Value Type Description System.Single hmd_ModelNumber Declaration public string hmd_ModelNumber { get; } Property Value Type Description System.String hmd_SecondsFromVsyncToPhotons Declaration public float hmd_SecondsFromVsyncToPhotons { get; } Property Value Type Description System.Single hmd_SerialNumber Declaration public string hmd_SerialNumber { get; } Property Value Type Description System.String hmd_TrackingSystemName Declaration public string hmd_TrackingSystemName { get; } Property Value Type Description System.String initializing Declaration public static bool initializing { get; } Property Value Type Description System.Boolean instance Declaration public static SteamVR instance { get; } Property Value Type Description SteamVR outOfRange Declaration public static bool outOfRange { get; } Property Value Type Description System.Boolean overlay Declaration public CVROverlay overlay { get; } Property Value Type Description CVROverlay sceneHeight Declaration public float sceneHeight { get; } Property Value Type Description System.Single sceneWidth Declaration public float sceneWidth { get; } Property Value Type Description System.Single settings Declaration public static SteamVR_Settings settings { get; } Property Value Type Description SteamVR_Settings tanHalfFov Declaration public Vector2 tanHalfFov { get; } Property Value Type Description UnityEngine.Vector2 textureBounds Declaration public VRTextureBounds_t[] textureBounds { get; } Property Value Type Description VRTextureBounds_t [] usingNativeSupport Declaration public static bool usingNativeSupport { get; } Property Value Type Description System.Boolean Methods Dispose() Declaration public void Dispose() ExitTemporarySession() Declaration public static void ExitTemporarySession() Finalize() Declaration protected void Finalize() GenerateAppKey() Declaration public static string GenerateAppKey() Returns Type Description System.String GenerateCleanProductName() Declaration public static string GenerateCleanProductName() Returns Type Description System.String GetFloatProperty(ETrackedDeviceProperty, UInt32) Declaration public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0U) Parameters Type Name Description ETrackedDeviceProperty prop System.UInt32 deviceId Returns Type Description System.Single GetResourcesFolderPath(Boolean) Declaration public static string GetResourcesFolderPath(bool fromAssetsDirectory = false) Parameters Type Name Description System.Boolean fromAssetsDirectory Returns Type Description System.String GetStringProperty(ETrackedDeviceProperty, UInt32) Declaration public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0U) Parameters Type Name Description ETrackedDeviceProperty prop System.UInt32 deviceId Returns Type Description System.String GetTrackedDeviceString(UInt32) Declaration public string GetTrackedDeviceString(uint deviceId) Parameters Type Name Description System.UInt32 deviceId Returns Type Description System.String Initialize(Boolean) Declaration public static void Initialize(bool forceUnityVRMode = false) Parameters Type Name Description System.Boolean forceUnityVRMode InitializeTemporarySession(Boolean) Declaration public static bool InitializeTemporarySession(bool initInput = false) Parameters Type Name Description System.Boolean initInput Returns Type Description System.Boolean SafeDispose() Declaration public static void SafeDispose() ShowBindingsForEditor() Declaration public static void ShowBindingsForEditor() Implements System.IDisposable"
  },
  "api/Valve.VR.SteamVR.InitializedStates.html": {
    "href": "api/Valve.VR.SteamVR.InitializedStates.html",
    "title": "Enum SteamVR.InitializedStates | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR.InitializedStates Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum InitializedStates Fields Name Description InitializeFailure InitializeSuccess Initializing None"
  },
  "api/Valve.VR.InteractionSystem.WhichHand.html": {
    "href": "api/Valve.VR.InteractionSystem.WhichHand.html",
    "title": "Enum WhichHand | SteamVR Unity Plugin",
    "keywords": "Enum WhichHand Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum WhichHand Fields Name Description Left Right"
  },
  "api/Valve.VR.InteractionSystem.VelocityEstimator.html": {
    "href": "api/Valve.VR.InteractionSystem.VelocityEstimator.html",
    "title": "Class VelocityEstimator | SteamVR Unity Plugin",
    "keywords": "Class VelocityEstimator Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VelocityEstimator Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class VelocityEstimator : MonoBehaviour Fields angularVelocityAverageFrames Declaration [Tooltip(\"How many frames to average over for computing angular velocity\")] public int angularVelocityAverageFrames Field Value Type Description System.Int32 estimateOnAwake Declaration public bool estimateOnAwake Field Value Type Description System.Boolean velocityAverageFrames Declaration [Tooltip(\"How many frames to average over for computing velocity\")] public int velocityAverageFrames Field Value Type Description System.Int32 Methods BeginEstimatingVelocity() Declaration public void BeginEstimatingVelocity() FinishEstimatingVelocity() Declaration public void FinishEstimatingVelocity() GetAccelerationEstimate() Declaration public Vector3 GetAccelerationEstimate() Returns Type Description UnityEngine.Vector3 GetAngularVelocityEstimate() Declaration public Vector3 GetAngularVelocityEstimate() Returns Type Description UnityEngine.Vector3 GetVelocityEstimate() Declaration public Vector3 GetVelocityEstimate() Returns Type Description UnityEngine.Vector3"
  },
  "api/Valve.VR.RenderModel_t.html": {
    "href": "api/Valve.VR.RenderModel_t.html",
    "title": "Struct RenderModel_t | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_t Fields diffuseTextureId Declaration public int diffuseTextureId Field Value Type Description System.Int32 rIndexData Declaration public IntPtr rIndexData Field Value Type Description System.IntPtr rVertexData Declaration public IntPtr rVertexData Field Value Type Description System.IntPtr unTriangleCount Declaration public uint unTriangleCount Field Value Type Description System.UInt32 unVertexCount Declaration public uint unVertexCount Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.RenderModel_ControllerMode_State_t.html": {
    "href": "api/Valve.VR.RenderModel_ControllerMode_State_t.html",
    "title": "Struct RenderModel_ControllerMode_State_t | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_ControllerMode_State_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_ControllerMode_State_t Fields bScrollWheelVisible Declaration public bool bScrollWheelVisible Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.ISteamVR_Action_Single.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Single.html",
    "title": "Interface ISteamVR_Action_Single | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Single Inherited Members ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Single : ISteamVR_Action_In_Source, ISteamVR_Action_Source Properties axis The current float value of the action. Note: Will only return non-zero if the action is also active. Declaration float axis { get; } Property Value Type Description System.Single delta The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration float delta { get; } Property Value Type Description System.Single lastAxis The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration float lastAxis { get; } Property Value Type Description System.Single lastDelta The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration float lastDelta { get; } Property Value Type Description System.Single"
  },
  "api/Valve.VR.ISteamVR_Action_Pose.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Pose.html",
    "title": "Interface ISteamVR_Action_Pose | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Pose Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. Inherited Members ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Pose : ISteamVR_Action_In_Source, ISteamVR_Action_Source Properties angularVelocity The local angular velocity of this pose relative to the universe origin Declaration Vector3 angularVelocity { get; } Property Value Type Description UnityEngine.Vector3 deviceIsConnected True if the device bound to this action and input source is connected Declaration bool deviceIsConnected { get; } Property Value Type Description System.Boolean lastAngularVelocity The angular velocity for this pose during the previous update Declaration Vector3 lastAngularVelocity { get; } Property Value Type Description UnityEngine.Vector3 lastDeviceIsConnected True if the device bound to this action was connected during the previous update Declaration bool lastDeviceIsConnected { get; } Property Value Type Description System.Boolean lastLocalPosition The local position for this pose during the previous update Declaration Vector3 lastLocalPosition { get; } Property Value Type Description UnityEngine.Vector3 lastLocalRotation The local rotation for this pose during the previous update Declaration Quaternion lastLocalRotation { get; } Property Value Type Description UnityEngine.Quaternion lastPoseIsValid True if the pose was valid during the previous update Declaration bool lastPoseIsValid { get; } Property Value Type Description System.Boolean lastTrackingState The tracking state for this pose during the previous update Declaration ETrackingResult lastTrackingState { get; } Property Value Type Description ETrackingResult lastVelocity The velocity for this pose during the previous update Declaration Vector3 lastVelocity { get; } Property Value Type Description UnityEngine.Vector3 localPosition The local position of this action relative to the universe origin Declaration Vector3 localPosition { get; } Property Value Type Description UnityEngine.Vector3 localRotation The local rotation of this action relative to the universe origin Declaration Quaternion localRotation { get; } Property Value Type Description UnityEngine.Quaternion poseIsValid True if the pose retrieved for this action and input source is valid (good data from the tracking source) Declaration bool poseIsValid { get; } Property Value Type Description System.Boolean trackingState The state of the tracking system that is used to create pose data (position, rotation, etc) Declaration ETrackingResult trackingState { get; } Property Value Type Description ETrackingResult velocity The local velocity of this pose relative to the universe origin Declaration Vector3 velocity { get; } Property Value Type Description UnityEngine.Vector3"
  },
  "api/Valve.VR.CVRSystem.html": {
    "href": "api/Valve.VR.CVRSystem.html",
    "title": "Class CVRSystem | SteamVR Unity Plugin",
    "keywords": "Class CVRSystem Inheritance System.Object CVRSystem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRSystem Methods AcknowledgeQuit_Exiting() Declaration public void AcknowledgeQuit_Exiting() AcknowledgeQuit_UserPrompt() Declaration public void AcknowledgeQuit_UserPrompt() ApplyTransform(ref TrackedDevicePose_t, ref TrackedDevicePose_t, ref HmdMatrix34_t) Declaration public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform) Parameters Type Name Description TrackedDevicePose_t pOutputPose TrackedDevicePose_t pTrackedDevicePose HmdMatrix34_t pTransform ComputeDistortion(EVREye, Single, Single, ref DistortionCoordinates_t) Declaration public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates) Parameters Type Name Description EVREye eEye System.Single fU System.Single fV DistortionCoordinates_t pDistortionCoordinates Returns Type Description System.Boolean DriverDebugRequest(UInt32, String, StringBuilder, UInt32) Declaration public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize) Parameters Type Name Description System.UInt32 unDeviceIndex System.String pchRequest System.Text.StringBuilder pchResponseBuffer System.UInt32 unResponseBufferSize Returns Type Description System.UInt32 GetArrayTrackedDeviceProperty(UInt32, ETrackedDeviceProperty, UInt32, IntPtr, UInt32, ref ETrackedPropertyError) Declaration public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop System.UInt32 propType System.IntPtr pBuffer System.UInt32 unBufferSize ETrackedPropertyError pError Returns Type Description System.UInt32 GetBoolTrackedDeviceProperty(UInt32, ETrackedDeviceProperty, ref ETrackedPropertyError) Declaration public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop ETrackedPropertyError pError Returns Type Description System.Boolean GetButtonIdNameFromEnum(EVRButtonId) Declaration public string GetButtonIdNameFromEnum(EVRButtonId eButtonId) Parameters Type Name Description EVRButtonId eButtonId Returns Type Description System.String GetControllerAxisTypeNameFromEnum(EVRControllerAxisType) Declaration public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType) Parameters Type Name Description EVRControllerAxisType eAxisType Returns Type Description System.String GetControllerRoleForTrackedDeviceIndex(UInt32) Declaration public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex) Parameters Type Name Description System.UInt32 unDeviceIndex Returns Type Description ETrackedControllerRole GetControllerState(UInt32, ref VRControllerState_t, UInt32) Declaration public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize) Parameters Type Name Description System.UInt32 unControllerDeviceIndex VRControllerState_t pControllerState System.UInt32 unControllerStateSize Returns Type Description System.Boolean GetControllerStateWithPose(ETrackingUniverseOrigin, UInt32, ref VRControllerState_t, UInt32, ref TrackedDevicePose_t) Declaration public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose) Parameters Type Name Description ETrackingUniverseOrigin eOrigin System.UInt32 unControllerDeviceIndex VRControllerState_t pControllerState System.UInt32 unControllerStateSize TrackedDevicePose_t pTrackedDevicePose Returns Type Description System.Boolean GetD3D9AdapterIndex() Declaration public int GetD3D9AdapterIndex() Returns Type Description System.Int32 GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin, Single, TrackedDevicePose_t[]) Declaration public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray) Parameters Type Name Description ETrackingUniverseOrigin eOrigin System.Single fPredictedSecondsToPhotonsFromNow TrackedDevicePose_t [] pTrackedDevicePoseArray GetDXGIOutputInfo(ref Int32) Declaration public void GetDXGIOutputInfo(ref int pnAdapterIndex) Parameters Type Name Description System.Int32 pnAdapterIndex GetEventTypeNameFromEnum(EVREventType) Declaration public string GetEventTypeNameFromEnum(EVREventType eType) Parameters Type Name Description EVREventType eType Returns Type Description System.String GetEyeToHeadTransform(EVREye) Declaration public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye) Parameters Type Name Description EVREye eEye Returns Type Description HmdMatrix34_t GetFloatTrackedDeviceProperty(UInt32, ETrackedDeviceProperty, ref ETrackedPropertyError) Declaration public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop ETrackedPropertyError pError Returns Type Description System.Single GetHiddenAreaMesh(EVREye, EHiddenAreaMeshType) Declaration public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type) Parameters Type Name Description EVREye eEye EHiddenAreaMeshType type Returns Type Description HiddenAreaMesh_t GetInt32TrackedDeviceProperty(UInt32, ETrackedDeviceProperty, ref ETrackedPropertyError) Declaration public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop ETrackedPropertyError pError Returns Type Description System.Int32 GetMatrix34TrackedDeviceProperty(UInt32, ETrackedDeviceProperty, ref ETrackedPropertyError) Declaration public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop ETrackedPropertyError pError Returns Type Description HmdMatrix34_t GetOutputDevice(ref UInt64, ETextureType, IntPtr) Declaration public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance) Parameters Type Name Description System.UInt64 pnDevice ETextureType textureType System.IntPtr pInstance GetProjectionMatrix(EVREye, Single, Single) Declaration public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ) Parameters Type Name Description EVREye eEye System.Single fNearZ System.Single fFarZ Returns Type Description HmdMatrix44_t GetProjectionRaw(EVREye, ref Single, ref Single, ref Single, ref Single) Declaration public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom) Parameters Type Name Description EVREye eEye System.Single pfLeft System.Single pfRight System.Single pfTop System.Single pfBottom GetPropErrorNameFromEnum(ETrackedPropertyError) Declaration public string GetPropErrorNameFromEnum(ETrackedPropertyError error) Parameters Type Name Description ETrackedPropertyError error Returns Type Description System.String GetRawZeroPoseToStandingAbsoluteTrackingPose() Declaration public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose() Returns Type Description HmdMatrix34_t GetRecommendedRenderTargetSize(ref UInt32, ref UInt32) Declaration public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight) Parameters Type Name Description System.UInt32 pnWidth System.UInt32 pnHeight GetSeatedZeroPoseToStandingAbsoluteTrackingPose() Declaration public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose() Returns Type Description HmdMatrix34_t GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass, UInt32[], UInt32) Declaration public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex) Parameters Type Name Description ETrackedDeviceClass eTrackedDeviceClass System.UInt32 [] punTrackedDeviceIndexArray System.UInt32 unRelativeToTrackedDeviceIndex Returns Type Description System.UInt32 GetStringTrackedDeviceProperty(UInt32, ETrackedDeviceProperty, StringBuilder, UInt32, ref ETrackedPropertyError) Declaration public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop System.Text.StringBuilder pchValue System.UInt32 unBufferSize ETrackedPropertyError pError Returns Type Description System.UInt32 GetTimeSinceLastVsync(ref Single, ref UInt64) Declaration public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter) Parameters Type Name Description System.Single pfSecondsSinceLastVsync System.UInt64 pulFrameCounter Returns Type Description System.Boolean GetTrackedDeviceActivityLevel(UInt32) Declaration public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId) Parameters Type Name Description System.UInt32 unDeviceId Returns Type Description EDeviceActivityLevel GetTrackedDeviceClass(UInt32) Declaration public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex) Parameters Type Name Description System.UInt32 unDeviceIndex Returns Type Description ETrackedDeviceClass GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole) Declaration public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType) Parameters Type Name Description ETrackedControllerRole unDeviceType Returns Type Description System.UInt32 GetUint64TrackedDeviceProperty(UInt32, ETrackedDeviceProperty, ref ETrackedPropertyError) Declaration public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackedDeviceProperty prop ETrackedPropertyError pError Returns Type Description System.UInt64 IsDisplayOnDesktop() Declaration public bool IsDisplayOnDesktop() Returns Type Description System.Boolean IsInputAvailable() Declaration public bool IsInputAvailable() Returns Type Description System.Boolean IsSteamVRDrawingControllers() Declaration public bool IsSteamVRDrawingControllers() Returns Type Description System.Boolean IsTrackedDeviceConnected(UInt32) Declaration public bool IsTrackedDeviceConnected(uint unDeviceIndex) Parameters Type Name Description System.UInt32 unDeviceIndex Returns Type Description System.Boolean PerformFirmwareUpdate(UInt32) Declaration public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex) Parameters Type Name Description System.UInt32 unDeviceIndex Returns Type Description EVRFirmwareError PollNextEvent(ref VREvent_t, UInt32) Declaration public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent) Parameters Type Name Description VREvent_t pEvent System.UInt32 uncbVREvent Returns Type Description System.Boolean PollNextEventWithPose(ETrackingUniverseOrigin, ref VREvent_t, UInt32, ref TrackedDevicePose_t) Declaration public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose) Parameters Type Name Description ETrackingUniverseOrigin eOrigin VREvent_t pEvent System.UInt32 uncbVREvent TrackedDevicePose_t pTrackedDevicePose Returns Type Description System.Boolean ResetSeatedZeroPose() Declaration public void ResetSeatedZeroPose() SetDisplayVisibility(Boolean) Declaration public bool SetDisplayVisibility(bool bIsVisibleOnDesktop) Parameters Type Name Description System.Boolean bIsVisibleOnDesktop Returns Type Description System.Boolean ShouldApplicationPause() Declaration public bool ShouldApplicationPause() Returns Type Description System.Boolean ShouldApplicationReduceRenderingWork() Declaration public bool ShouldApplicationReduceRenderingWork() Returns Type Description System.Boolean TriggerHapticPulse(UInt32, UInt32, UInt16) Declaration public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec) Parameters Type Name Description System.UInt32 unControllerDeviceIndex System.UInt32 unAxisId System.UInt16 usDurationMicroSec"
  },
  "api/Valve.VR.CVRRenderModels.html": {
    "href": "api/Valve.VR.CVRRenderModels.html",
    "title": "Class CVRRenderModels | SteamVR Unity Plugin",
    "keywords": "Class CVRRenderModels Inheritance System.Object CVRRenderModels Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRRenderModels Methods FreeRenderModel(IntPtr) Declaration public void FreeRenderModel(IntPtr pRenderModel) Parameters Type Name Description System.IntPtr pRenderModel FreeTexture(IntPtr) Declaration public void FreeTexture(IntPtr pTexture) Parameters Type Name Description System.IntPtr pTexture FreeTextureD3D11(IntPtr) Declaration public void FreeTextureD3D11(IntPtr pD3D11Texture2D) Parameters Type Name Description System.IntPtr pD3D11Texture2D GetComponentButtonMask(String, String) Declaration public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName) Parameters Type Name Description System.String pchRenderModelName System.String pchComponentName Returns Type Description System.UInt64 GetComponentCount(String) Declaration public uint GetComponentCount(string pchRenderModelName) Parameters Type Name Description System.String pchRenderModelName Returns Type Description System.UInt32 GetComponentName(String, UInt32, StringBuilder, UInt32) Declaration public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen) Parameters Type Name Description System.String pchRenderModelName System.UInt32 unComponentIndex System.Text.StringBuilder pchComponentName System.UInt32 unComponentNameLen Returns Type Description System.UInt32 GetComponentRenderModelName(String, String, StringBuilder, UInt32) Declaration public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen) Parameters Type Name Description System.String pchRenderModelName System.String pchComponentName System.Text.StringBuilder pchComponentRenderModelName System.UInt32 unComponentRenderModelNameLen Returns Type Description System.UInt32 GetComponentState(String, String, ref VRControllerState_t, ref RenderModel_ControllerMode_State_t, ref RenderModel_ComponentState_t) Declaration public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState) Parameters Type Name Description System.String pchRenderModelName System.String pchComponentName VRControllerState_t pControllerState RenderModel_ControllerMode_State_t pState RenderModel_ComponentState_t pComponentState Returns Type Description System.Boolean GetComponentStateForDevicePath(String, String, UInt64, ref RenderModel_ControllerMode_State_t, ref RenderModel_ComponentState_t) Declaration public bool GetComponentStateForDevicePath(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState) Parameters Type Name Description System.String pchRenderModelName System.String pchComponentName System.UInt64 devicePath RenderModel_ControllerMode_State_t pState RenderModel_ComponentState_t pComponentState Returns Type Description System.Boolean GetRenderModelCount() Declaration public uint GetRenderModelCount() Returns Type Description System.UInt32 GetRenderModelErrorNameFromEnum(EVRRenderModelError) Declaration public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error) Parameters Type Name Description EVRRenderModelError error Returns Type Description System.String GetRenderModelName(UInt32, StringBuilder, UInt32) Declaration public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen) Parameters Type Name Description System.UInt32 unRenderModelIndex System.Text.StringBuilder pchRenderModelName System.UInt32 unRenderModelNameLen Returns Type Description System.UInt32 GetRenderModelOriginalPath(String, StringBuilder, UInt32, ref EVRRenderModelError) Declaration public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError) Parameters Type Name Description System.String pchRenderModelName System.Text.StringBuilder pchOriginalPath System.UInt32 unOriginalPathLen EVRRenderModelError peError Returns Type Description System.UInt32 GetRenderModelThumbnailURL(String, StringBuilder, UInt32, ref EVRRenderModelError) Declaration public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError) Parameters Type Name Description System.String pchRenderModelName System.Text.StringBuilder pchThumbnailURL System.UInt32 unThumbnailURLLen EVRRenderModelError peError Returns Type Description System.UInt32 LoadIntoTextureD3D11_Async(Int32, IntPtr) Declaration public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture) Parameters Type Name Description System.Int32 textureId System.IntPtr pDstTexture Returns Type Description EVRRenderModelError LoadRenderModel_Async(String, ref IntPtr) Declaration public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel) Parameters Type Name Description System.String pchRenderModelName System.IntPtr ppRenderModel Returns Type Description EVRRenderModelError LoadTexture_Async(Int32, ref IntPtr) Declaration public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture) Parameters Type Name Description System.Int32 textureId System.IntPtr ppTexture Returns Type Description EVRRenderModelError LoadTextureD3D11_Async(Int32, IntPtr, ref IntPtr) Declaration public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D) Parameters Type Name Description System.Int32 textureId System.IntPtr pD3D11Device System.IntPtr ppD3D11Texture2D Returns Type Description EVRRenderModelError RenderModelHasComponent(String, String) Declaration public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName) Parameters Type Name Description System.String pchRenderModelName System.String pchComponentName Returns Type Description System.Boolean"
  },
  "api/Valve.VR.CVRChaperoneSetup.html": {
    "href": "api/Valve.VR.CVRChaperoneSetup.html",
    "title": "Class CVRChaperoneSetup | SteamVR Unity Plugin",
    "keywords": "Class CVRChaperoneSetup Inheritance System.Object CVRChaperoneSetup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRChaperoneSetup Methods CommitWorkingCopy(EChaperoneConfigFile) Declaration public bool CommitWorkingCopy(EChaperoneConfigFile configFile) Parameters Type Name Description EChaperoneConfigFile configFile Returns Type Description System.Boolean ExportLiveToBuffer(StringBuilder, ref UInt32) Declaration public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength) Parameters Type Name Description System.Text.StringBuilder pBuffer System.UInt32 pnBufferLength Returns Type Description System.Boolean GetLiveCollisionBoundsInfo(out HmdQuad_t[]) Declaration public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer) Parameters Type Name Description HmdQuad_t [] pQuadsBuffer Returns Type Description System.Boolean GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t) Declaration public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose) Parameters Type Name Description HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose Returns Type Description System.Boolean GetWorkingCollisionBoundsInfo(out HmdQuad_t[]) Declaration public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer) Parameters Type Name Description HmdQuad_t [] pQuadsBuffer Returns Type Description System.Boolean GetWorkingPlayAreaRect(ref HmdQuad_t) Declaration public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect) Parameters Type Name Description HmdQuad_t rect Returns Type Description System.Boolean GetWorkingPlayAreaSize(ref Single, ref Single) Declaration public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ) Parameters Type Name Description System.Single pSizeX System.Single pSizeZ Returns Type Description System.Boolean GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t) Declaration public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose) Parameters Type Name Description HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose Returns Type Description System.Boolean GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t) Declaration public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose) Parameters Type Name Description HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose Returns Type Description System.Boolean HideWorkingSetPreview() Declaration public void HideWorkingSetPreview() ImportFromBufferToWorking(String, UInt32) Declaration public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags) Parameters Type Name Description System.String pBuffer System.UInt32 nImportFlags Returns Type Description System.Boolean ReloadFromDisk(EChaperoneConfigFile) Declaration public void ReloadFromDisk(EChaperoneConfigFile configFile) Parameters Type Name Description EChaperoneConfigFile configFile RevertWorkingCopy() Declaration public void RevertWorkingCopy() SetWorkingCollisionBoundsInfo(HmdQuad_t[]) Declaration public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer) Parameters Type Name Description HmdQuad_t [] pQuadsBuffer SetWorkingPerimeter(HmdVector2_t[]) Declaration public void SetWorkingPerimeter(HmdVector2_t[] pPointBuffer) Parameters Type Name Description HmdVector2_t [] pPointBuffer SetWorkingPlayAreaSize(Single, Single) Declaration public void SetWorkingPlayAreaSize(float sizeX, float sizeZ) Parameters Type Name Description System.Single sizeX System.Single sizeZ SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t) Declaration public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose) Parameters Type Name Description HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t) Declaration public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose) Parameters Type Name Description HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose ShowWorkingSetPreview() Declaration public void ShowWorkingSetPreview()"
  },
  "api/Valve.VR.ChaperoneCalibrationState.html": {
    "href": "api/Valve.VR.ChaperoneCalibrationState.html",
    "title": "Enum ChaperoneCalibrationState | SteamVR Unity Plugin",
    "keywords": "Enum ChaperoneCalibrationState Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ChaperoneCalibrationState Fields Name Description Error Error_BaseStationConflict Error_BaseStationUninitialized Error_CollisionBoundsInvalid Error_PlayAreaInvalid OK Warning Warning_BaseStationMayHaveMoved Warning_BaseStationRemoved Warning_SeatedBoundsInvalid"
  },
  "api/Valve.VR.HmdMatrix33_t.html": {
    "href": "api/Valve.VR.HmdMatrix33_t.html",
    "title": "Struct HmdMatrix33_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdMatrix33_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdMatrix33_t Fields m0 Declaration public float m0 Field Value Type Description System.Single m1 Declaration public float m1 Field Value Type Description System.Single m2 Declaration public float m2 Field Value Type Description System.Single m3 Declaration public float m3 Field Value Type Description System.Single m4 Declaration public float m4 Field Value Type Description System.Single m5 Declaration public float m5 Field Value Type Description System.Single m6 Declaration public float m6 Field Value Type Description System.Single m7 Declaration public float m7 Field Value Type Description System.Single m8 Declaration public float m8 Field Value Type Description System.Single"
  },
  "api/Valve.VR.EVRSkeletalReferencePose.html": {
    "href": "api/Valve.VR.EVRSkeletalReferencePose.html",
    "title": "Enum EVRSkeletalReferencePose | SteamVR Unity Plugin",
    "keywords": "Enum EVRSkeletalReferencePose Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSkeletalReferencePose Fields Name Description BindPose Fist GripLimit OpenHand"
  },
  "api/Valve.VR.EVRSkeletalMotionRange.html": {
    "href": "api/Valve.VR.EVRSkeletalMotionRange.html",
    "title": "Enum EVRSkeletalMotionRange | SteamVR Unity Plugin",
    "keywords": "Enum EVRSkeletalMotionRange Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSkeletalMotionRange Fields Name Description WithController WithoutController"
  },
  "api/Valve.VR.EVRInputStringBits.html": {
    "href": "api/Valve.VR.EVRInputStringBits.html",
    "title": "Enum EVRInputStringBits | SteamVR Unity Plugin",
    "keywords": "Enum EVRInputStringBits Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRInputStringBits Fields Name Description VRInputString_All VRInputString_ControllerType VRInputString_Hand VRInputString_InputSource"
  },
  "api/Valve.VR.EVRInputFilterCancelType.html": {
    "href": "api/Valve.VR.EVRInputFilterCancelType.html",
    "title": "Enum EVRInputFilterCancelType | SteamVR Unity Plugin",
    "keywords": "Enum EVRInputFilterCancelType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRInputFilterCancelType Fields Name Description VRInputFilterCancel_Momentum VRInputFilterCancel_Timers"
  },
  "api/Valve.VR.VREvent_DualAnalog_t.html": {
    "href": "api/Valve.VR.VREvent_DualAnalog_t.html",
    "title": "Struct VREvent_DualAnalog_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_DualAnalog_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_DualAnalog_t Fields transformedX Declaration public float transformedX Field Value Type Description System.Single transformedY Declaration public float transformedY Field Value Type Description System.Single which Declaration public EDualAnalogWhich which Field Value Type Description EDualAnalogWhich x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_Data_t.html": {
    "href": "api/Valve.VR.VREvent_Data_t.html",
    "title": "Struct VREvent_Data_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Data_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Data_t Fields actionManifest Declaration public VREvent_InputActionManifestLoad_t actionManifest Field Value Type Description VREvent_InputActionManifestLoad_t applicationLaunch Declaration public VREvent_ApplicationLaunch_t applicationLaunch Field Value Type Description VREvent_ApplicationLaunch_t cameraSurface Declaration public VREvent_EditingCameraSurface_t cameraSurface Field Value Type Description VREvent_EditingCameraSurface_t chaperone Declaration public VREvent_Chaperone_t chaperone Field Value Type Description VREvent_Chaperone_t controller Declaration public VREvent_Controller_t controller Field Value Type Description VREvent_Controller_t dualAnalog Declaration public VREvent_DualAnalog_t dualAnalog Field Value Type Description VREvent_DualAnalog_t hapticVibration Declaration public VREvent_HapticVibration_t hapticVibration Field Value Type Description VREvent_HapticVibration_t hdcpError Declaration public VREvent_HDCPError_t hdcpError Field Value Type Description VREvent_HDCPError_t inputBinding Declaration public VREvent_InputBindingLoad_t inputBinding Field Value Type Description VREvent_InputBindingLoad_t ipd Declaration public VREvent_Ipd_t ipd Field Value Type Description VREvent_Ipd_t keyboard Declaration public VREvent_Keyboard_t keyboard Field Value Type Description VREvent_Keyboard_t messageOverlay Declaration public VREvent_MessageOverlay_t messageOverlay Field Value Type Description VREvent_MessageOverlay_t mouse Declaration public VREvent_Mouse_t mouse Field Value Type Description VREvent_Mouse_t notification Declaration public VREvent_Notification_t notification Field Value Type Description VREvent_Notification_t overlay Declaration public VREvent_Overlay_t overlay Field Value Type Description VREvent_Overlay_t performanceTest Declaration public VREvent_PerformanceTest_t performanceTest Field Value Type Description VREvent_PerformanceTest_t process Declaration public VREvent_Process_t process Field Value Type Description VREvent_Process_t progressUpdate Declaration public VREvent_ProgressUpdate_t progressUpdate Field Value Type Description VREvent_ProgressUpdate_t property Declaration public VREvent_Property_t property Field Value Type Description VREvent_Property_t reserved Declaration public VREvent_Reserved_t reserved Field Value Type Description VREvent_Reserved_t screenshot Declaration public VREvent_Screenshot_t screenshot Field Value Type Description VREvent_Screenshot_t screenshotProgress Declaration public VREvent_ScreenshotProgress_t screenshotProgress Field Value Type Description VREvent_ScreenshotProgress_t scroll Declaration public VREvent_Scroll_t scroll Field Value Type Description VREvent_Scroll_t seatedZeroPoseReset Declaration public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset Field Value Type Description VREvent_SeatedZeroPoseReset_t showDevTools Declaration public VREvent_ShowDevTools_t showDevTools Field Value Type Description VREvent_ShowDevTools_t showUi Declaration public VREvent_ShowUI_t showUi Field Value Type Description VREvent_ShowUI_t spatialAnchor Declaration public VREvent_SpatialAnchor_t spatialAnchor Field Value Type Description VREvent_SpatialAnchor_t status Declaration public VREvent_Status_t status Field Value Type Description VREvent_Status_t touchPadMove Declaration public VREvent_TouchPadMove_t touchPadMove Field Value Type Description VREvent_TouchPadMove_t webConsole Declaration public VREvent_WebConsole_t webConsole Field Value Type Description VREvent_WebConsole_t"
  },
  "api/Valve.VR.VREvent_Controller_t.html": {
    "href": "api/Valve.VR.VREvent_Controller_t.html",
    "title": "Struct VREvent_Controller_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Controller_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Controller_t Fields button Declaration public uint button Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_Chaperone_t.html": {
    "href": "api/Valve.VR.VREvent_Chaperone_t.html",
    "title": "Struct VREvent_Chaperone_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Chaperone_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Chaperone_t Fields m_nCurrentUniverse Declaration public ulong m_nCurrentUniverse Field Value Type Description System.UInt64 m_nPreviousUniverse Declaration public ulong m_nPreviousUniverse Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.SteamVR_Behaviour_Single.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Single.AxisHandler.html",
    "title": "Delegate SteamVR_Behaviour_Single.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Single.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Behaviour_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Behaviour_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent.html",
    "title": "Class SteamVR_Behaviour_Pose_TrackingChangedEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Pose_TrackingChangedEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Pose , SteamVR_Input_Sources , ETrackingResult > SteamVR_Behaviour_Pose_TrackingChangedEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.Invoke(Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Pose_TrackingChangedEvent : UnityEvent<SteamVR_Behaviour_Pose, SteamVR_Input_Sources, ETrackingResult>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Vector3.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Vector3.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector3.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Vector3 fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Vector2_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2_Source_Map.html",
    "title": "Class SteamVR_Action_Vector2_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector2_Source_Map Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Vector2_Source > SteamVR_Action_In_Source_Map < SteamVR_Action_Vector2_Source > SteamVR_Action_Vector2_Source_Map Inherited Members SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>.updatingSources SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>.UpdateValues() SteamVR_Action_Source_Map<SteamVR_Action_Vector2_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Vector2_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Vector2_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Vector2_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SteamVR_Action_Vector2_Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vector2_Source_Map : SteamVR_Action_In_Source_Map<SteamVR_Action_Vector2_Source>"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector2Event.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector2Event.html",
    "title": "Class SteamVR_Behaviour_Vector2Event | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Vector2Event Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Vector2 , SteamVR_Input_Sources , UnityEngine.Vector2 , UnityEngine.Vector2 > SteamVR_Behaviour_Vector2Event Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2>.Invoke(Valve.VR.SteamVR_Behaviour_Vector2, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector2, UnityEngine.Vector2) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Vector2Event : UnityEvent<SteamVR_Behaviour_Vector2, SteamVR_Input_Sources, Vector2, Vector2>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector2.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector2.html",
    "title": "Class SteamVR_Behaviour_Vector2 | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Vector2 Simplifies the use of the Vector2 action. Provides an onChange event that fires whenever the vector2 changes. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Vector2 Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Vector2 : MonoBehaviour Fields inputSource The device this action applies to. Any if the action is not device specific. Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources onAxis Unity event that fires whenever the action's value has been updated and is non-zero Declaration [Tooltip(\"Fires whenever the action's value has been updated and is non-zero.\")] public SteamVR_Behaviour_Vector2Event onAxis Field Value Type Description SteamVR_Behaviour_Vector2Event onAxisEvent C# event that fires whenever the action's value has been updated and is non-zero Declaration public SteamVR_Behaviour_Vector2.AxisHandler onAxisEvent Field Value Type Description SteamVR_Behaviour_Vector2.AxisHandler onChange Unity event that fires whenever the action's value has changed since the last update. Declaration [Tooltip(\"Fires whenever the action's value has changed since the last update.\")] public SteamVR_Behaviour_Vector2Event onChange Field Value Type Description SteamVR_Behaviour_Vector2Event onChangeEvent C# event that fires whenever the action's value has changed since the last update. Declaration public SteamVR_Behaviour_Vector2.ChangeHandler onChangeEvent Field Value Type Description SteamVR_Behaviour_Vector2.ChangeHandler onUpdate Unity event that fires whenever the action's value has been updated Declaration [Tooltip(\"Fires whenever the action's value has been updated.\")] public SteamVR_Behaviour_Vector2Event onUpdate Field Value Type Description SteamVR_Behaviour_Vector2Event onUpdateEvent C# event that fires whenever the action's value has been updated Declaration public SteamVR_Behaviour_Vector2.UpdateHandler onUpdateEvent Field Value Type Description SteamVR_Behaviour_Vector2.UpdateHandler vector2Action The vector2 action to get data from Declaration public SteamVR_Action_Vector2 vector2Action Field Value Type Description SteamVR_Action_Vector2 Properties isActive Returns whether this action is bound and the action set is active Declaration public bool isActive { get; } Property Value Type Description System.Boolean Methods AddHandlers() Declaration protected void AddHandlers() GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RemoveHandlers() Declaration protected void RemoveHandlers()"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector2.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector2.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector2.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector2.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 newAxis, Vector2 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 newAxis UnityEngine.Vector2 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void DeviceConnectedChangeHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool deviceConnected); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean deviceConnected"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_ActionSet.html": {
    "href": "api/Valve.VR.SteamVR_ActionSet.html",
    "title": "Class SteamVR_ActionSet | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_ActionSet Action sets are logical groupings of actions. Multiple sets can be active at one time. Inheritance System.Object SteamVR_ActionSet SteamVR_Input_ActionSet_buggy SteamVR_Input_ActionSet_default SteamVR_Input_ActionSet_mixedreality SteamVR_Input_ActionSet_platformer Implements System.IEquatable < SteamVR_ActionSet > ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_ActionSet : IEquatable<SteamVR_ActionSet>, ISteamVR_ActionSet, ISerializationCallbackReceiver Constructors SteamVR_ActionSet() Declaration public SteamVR_ActionSet() Fields initialized Declaration [NonSerialized] protected bool initialized Field Value Type Description System.Boolean setData Declaration [NonSerialized] protected SteamVR_ActionSet_Data setData Field Value Type Description SteamVR_ActionSet_Data Properties allActions All actions within this set (including out actions) Declaration public SteamVR_Action[] allActions { get; } Property Value Type Description SteamVR_Action [] fullPath The full path to this action set (ex: /actions/in/default) Declaration public string fullPath { get; } Property Value Type Description System.String handle Declaration public ulong handle { get; } Property Value Type Description System.UInt64 nonVisualInActions All IN actions within this set that are NOT pose or skeleton actions Declaration public ISteamVR_Action_In[] nonVisualInActions { get; } Property Value Type Description ISteamVR_Action_In [] outActionArray All out actions within this set Declaration public ISteamVR_Action_Out[] outActionArray { get; } Property Value Type Description ISteamVR_Action_Out [] poseActions All pose actions within this set Declaration public SteamVR_Action_Pose[] poseActions { get; } Property Value Type Description SteamVR_Action_Pose [] skeletonActions All skeleton actions within this set Declaration public SteamVR_Action_Skeleton[] skeletonActions { get; } Property Value Type Description SteamVR_Action_Skeleton [] usage Declaration public string usage { get; } Property Value Type Description System.String visualActions All pose and skeleton actions within this set Declaration public ISteamVR_Action_In[] visualActions { get; } Property Value Type Description ISteamVR_Action_In [] Methods Activate(SteamVR_Input_Sources, Int32, Boolean) Activate this set so its actions can be called Declaration public void Activate(SteamVR_Input_Sources activateForSource = SteamVR_Input_Sources.Any, int priority = 0, bool disableAllOtherActionSets = false) Parameters Type Name Description SteamVR_Input_Sources activateForSource Will activate this action set only for the specified source. Any if you want to activate for everything System.Int32 priority The priority of this action set. If you have two actions bound to the same input (button) the higher priority set will override the lower priority. If they are the same priority both will execute. System.Boolean disableAllOtherActionSets Disable all other action sets at the same time Create<CreateType>(String) Declaration public static CreateType Create<CreateType>(string newSetPath) where CreateType : SteamVR_ActionSet, new() Parameters Type Name Description System.String newSetPath Returns Type Description CreateType Type Parameters Name Description CreateType CreateFromName<CreateType>(String) Declaration public static CreateType CreateFromName<CreateType>(string newSetName) where CreateType : SteamVR_ActionSet, new() Parameters Type Name Description System.String newSetName Returns Type Description CreateType Type Parameters Name Description CreateType Deactivate(SteamVR_Input_Sources) Deactivate the action set so its actions can no longer be called Declaration public void Deactivate(SteamVR_Input_Sources forSource = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources forSource Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) Equals(SteamVR_ActionSet) Declaration public bool Equals(SteamVR_ActionSet other) Parameters Type Name Description SteamVR_ActionSet other Returns Type Description System.Boolean FinishPreInitialize() Declaration public virtual void FinishPreInitialize() GetActionSetData() Declaration public SteamVR_ActionSet_Data GetActionSetData() Returns Type Description SteamVR_ActionSet_Data GetCopy<CreateType>() Declaration public CreateType GetCopy<CreateType>() where CreateType : SteamVR_ActionSet, new() Returns Type Description CreateType Type Parameters Name Description CreateType GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() GetPath() Declaration public string GetPath() Returns Type Description System.String GetShortName() Gets the last part of the path for this action. Removes \"actions\" and direction. Declaration public string GetShortName() Returns Type Description System.String GetTimeLastChanged(SteamVR_Input_Sources) Returns the last time this action set was changed (set to active or inactive) Declaration public float GetTimeLastChanged(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Single Initialize(Boolean, Boolean) Initializes the handle for the action Declaration public virtual void Initialize(bool createNew = false, bool throwErrors = true) Parameters Type Name Description System.Boolean createNew System.Boolean throwErrors IsActive(SteamVR_Input_Sources) Returns whether the set is currently active or not. Declaration public bool IsActive(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Boolean PreInitialize(String) Declaration public void PreInitialize(string newActionPath) Parameters Type Name Description System.String newActionPath ReadRawSetActive(SteamVR_Input_Sources) Declaration public bool ReadRawSetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean ReadRawSetLastChanged(SteamVR_Input_Sources) Declaration public float ReadRawSetLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Single ReadRawSetPriority(SteamVR_Input_Sources) Declaration public int ReadRawSetPriority(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Int32 Operators Equality(SteamVR_ActionSet, SteamVR_ActionSet) Declaration public static bool operator ==(SteamVR_ActionSet set1, SteamVR_ActionSet set2) Parameters Type Name Description SteamVR_ActionSet set1 SteamVR_ActionSet set2 Returns Type Description System.Boolean Inequality(SteamVR_ActionSet, SteamVR_ActionSet) Declaration public static bool operator !=(SteamVR_ActionSet set1, SteamVR_ActionSet set2) Parameters Type Name Description SteamVR_ActionSet set1 SteamVR_ActionSet set2 Returns Type Description System.Boolean Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Actions.html": {
    "href": "api/Valve.VR.SteamVR_Actions.html",
    "title": "Class SteamVR_Actions | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Actions Inheritance System.Object SteamVR_Actions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Actions Properties _default Declaration public static SteamVR_Input_ActionSet_default _default { get; } Property Value Type Description SteamVR_Input_ActionSet_default buggy Declaration public static SteamVR_Input_ActionSet_buggy buggy { get; } Property Value Type Description SteamVR_Input_ActionSet_buggy buggy_Brake Declaration public static SteamVR_Action_Boolean buggy_Brake { get; } Property Value Type Description SteamVR_Action_Boolean buggy_Reset Declaration public static SteamVR_Action_Boolean buggy_Reset { get; } Property Value Type Description SteamVR_Action_Boolean buggy_Steering Declaration public static SteamVR_Action_Vector2 buggy_Steering { get; } Property Value Type Description SteamVR_Action_Vector2 buggy_Throttle Declaration public static SteamVR_Action_Single buggy_Throttle { get; } Property Value Type Description SteamVR_Action_Single default_GrabGrip Declaration public static SteamVR_Action_Boolean default_GrabGrip { get; } Property Value Type Description SteamVR_Action_Boolean default_GrabPinch Declaration public static SteamVR_Action_Boolean default_GrabPinch { get; } Property Value Type Description SteamVR_Action_Boolean default_Haptic Declaration public static SteamVR_Action_Vibration default_Haptic { get; } Property Value Type Description SteamVR_Action_Vibration default_HeadsetOnHead Declaration public static SteamVR_Action_Boolean default_HeadsetOnHead { get; } Property Value Type Description SteamVR_Action_Boolean default_InteractUI Declaration public static SteamVR_Action_Boolean default_InteractUI { get; } Property Value Type Description SteamVR_Action_Boolean default_Pose Declaration public static SteamVR_Action_Pose default_Pose { get; } Property Value Type Description SteamVR_Action_Pose default_SkeletonLeftHand Declaration public static SteamVR_Action_Skeleton default_SkeletonLeftHand { get; } Property Value Type Description SteamVR_Action_Skeleton default_SkeletonRightHand Declaration public static SteamVR_Action_Skeleton default_SkeletonRightHand { get; } Property Value Type Description SteamVR_Action_Skeleton default_Squeeze Declaration public static SteamVR_Action_Single default_Squeeze { get; } Property Value Type Description SteamVR_Action_Single default_Teleport Declaration public static SteamVR_Action_Boolean default_Teleport { get; } Property Value Type Description SteamVR_Action_Boolean mixedreality Declaration public static SteamVR_Input_ActionSet_mixedreality mixedreality { get; } Property Value Type Description SteamVR_Input_ActionSet_mixedreality mixedreality_ExternalCamera Declaration public static SteamVR_Action_Pose mixedreality_ExternalCamera { get; } Property Value Type Description SteamVR_Action_Pose platformer Declaration public static SteamVR_Input_ActionSet_platformer platformer { get; } Property Value Type Description SteamVR_Input_ActionSet_platformer platformer_Jump Declaration public static SteamVR_Action_Boolean platformer_Jump { get; } Property Value Type Description SteamVR_Action_Boolean platformer_Move Declaration public static SteamVR_Action_Vector2 platformer_Move { get; } Property Value Type Description SteamVR_Action_Vector2 Methods PreInitialize() Declaration public static void PreInitialize()"
  },
  "api/Valve.VR.InteractionSystem.UIElement.html": {
    "href": "api/Valve.VR.InteractionSystem.UIElement.html",
    "title": "Class UIElement | SteamVR Unity Plugin",
    "keywords": "Class UIElement Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UIElement Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class UIElement : MonoBehaviour Fields currentHand Declaration protected Hand currentHand Field Value Type Description Hand onHandClick Declaration public CustomEvents.UnityEventHand onHandClick Field Value Type Description CustomEvents.UnityEventHand Methods Awake() Declaration protected virtual void Awake() HandHoverUpdate(Hand) Declaration protected virtual void HandHoverUpdate(Hand hand) Parameters Type Name Description Hand hand OnButtonClick() Declaration protected virtual void OnButtonClick() OnHandHoverBegin(Hand) Declaration protected virtual void OnHandHoverBegin(Hand hand) Parameters Type Name Description Hand hand OnHandHoverEnd(Hand) Declaration protected virtual void OnHandHoverEnd(Hand hand) Parameters Type Name Description Hand hand"
  },
  "api/Valve.VR.InteractionSystem.Throwable.html": {
    "href": "api/Valve.VR.InteractionSystem.Throwable.html",
    "title": "Class Throwable | SteamVR Unity Plugin",
    "keywords": "Class Throwable Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Throwable ModalThrowable Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] [RequireComponent(typeof(Rigidbody))] [RequireComponent(typeof(VelocityEstimator))] public class Throwable : MonoBehaviour Fields attachEaseInTransform Declaration protected Transform attachEaseInTransform Field Value Type Description UnityEngine.Transform attached Declaration protected bool attached Field Value Type Description System.Boolean attachmentFlags Declaration [EnumFlags] [Tooltip(\"The flags used to attach this object to the hand.\")] public Hand.AttachmentFlags attachmentFlags Field Value Type Description Hand.AttachmentFlags attachmentOffset Declaration [Tooltip(\"The local point which acts as a positional and rotational offset to use while held\")] public Transform attachmentOffset Field Value Type Description UnityEngine.Transform attachPosition Declaration protected Vector3 attachPosition Field Value Type Description UnityEngine.Vector3 attachRotation Declaration protected Quaternion attachRotation Field Value Type Description UnityEngine.Quaternion attachTime Declaration protected float attachTime Field Value Type Description System.Single catchingSpeedThreshold Declaration [Tooltip(\"How fast must this object be moving to attach due to a trigger hold instead of a trigger press? (-1 to disable)\")] public float catchingSpeedThreshold Field Value Type Description System.Single hadInterpolation Declaration protected RigidbodyInterpolation hadInterpolation Field Value Type Description UnityEngine.RigidbodyInterpolation interactable Declaration [HideInInspector] public Interactable interactable Field Value Type Description Interactable onDetachFromHand Declaration public UnityEvent onDetachFromHand Field Value Type Description UnityEngine.Events.UnityEvent onHeldUpdate Declaration public UnityEvent<Hand> onHeldUpdate Field Value Type Description UnityEngine.Events.UnityEvent < Hand > onPickUp Declaration public UnityEvent onPickUp Field Value Type Description UnityEngine.Events.UnityEvent releaseVelocityStyle Declaration public ReleaseStyle releaseVelocityStyle Field Value Type Description ReleaseStyle releaseVelocityTimeOffset Declaration [Tooltip(\"The time offset used when releasing the object with the RawFromHand option\")] public float releaseVelocityTimeOffset Field Value Type Description System.Single restoreOriginalParent Declaration [Tooltip(\"When detaching the object, should it return to its original parent?\")] public bool restoreOriginalParent Field Value Type Description System.Boolean rigidbody Declaration protected Rigidbody rigidbody Field Value Type Description UnityEngine.Rigidbody scaleReleaseVelocity Declaration public float scaleReleaseVelocity Field Value Type Description System.Single velocityEstimator Declaration protected VelocityEstimator velocityEstimator Field Value Type Description VelocityEstimator Methods Awake() Declaration protected virtual void Awake() GetReleaseVelocities(Hand, out Vector3, out Vector3) Declaration public virtual void GetReleaseVelocities(Hand hand, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description Hand hand UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity HandAttachedUpdate(Hand) Declaration protected virtual void HandAttachedUpdate(Hand hand) Parameters Type Name Description Hand hand HandHoverUpdate(Hand) Declaration protected virtual void HandHoverUpdate(Hand hand) Parameters Type Name Description Hand hand LateDetach(Hand) Declaration protected virtual IEnumerator LateDetach(Hand hand) Parameters Type Name Description Hand hand Returns Type Description System.Collections.IEnumerator OnAttachedToHand(Hand) Declaration protected virtual void OnAttachedToHand(Hand hand) Parameters Type Name Description Hand hand OnDetachedFromHand(Hand) Declaration protected virtual void OnDetachedFromHand(Hand hand) Parameters Type Name Description Hand hand OnHandFocusAcquired(Hand) Declaration protected virtual void OnHandFocusAcquired(Hand hand) Parameters Type Name Description Hand hand OnHandFocusLost(Hand) Declaration protected virtual void OnHandFocusLost(Hand hand) Parameters Type Name Description Hand hand OnHandHoverBegin(Hand) Declaration protected virtual void OnHandHoverBegin(Hand hand) Parameters Type Name Description Hand hand OnHandHoverEnd(Hand) Declaration protected virtual void OnHandHoverEnd(Hand hand) Parameters Type Name Description Hand hand"
  },
  "api/Valve.VR.InteractionSystem.CustomEvents.UnityEventHand.html": {
    "href": "api/Valve.VR.InteractionSystem.CustomEvents.UnityEventHand.html",
    "title": "Class CustomEvents.UnityEventHand | SteamVR Unity Plugin",
    "keywords": "Class CustomEvents.UnityEventHand Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < Hand > CustomEvents.UnityEventHand Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.InteractionSystem.Hand>) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.InteractionSystem.Hand>) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.Invoke(Valve.VR.InteractionSystem.Hand) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [Serializable] public class UnityEventHand : UnityEvent<Hand>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.HmdVector2_t.html": {
    "href": "api/Valve.VR.HmdVector2_t.html",
    "title": "Struct HmdVector2_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdVector2_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdVector2_t Fields v0 Declaration public float v0 Field Value Type Description System.Single v1 Declaration public float v1 Field Value Type Description System.Single"
  },
  "api/Valve.VR.CVRResources.html": {
    "href": "api/Valve.VR.CVRResources.html",
    "title": "Class CVRResources | SteamVR Unity Plugin",
    "keywords": "Class CVRResources Inheritance System.Object CVRResources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRResources Methods GetResourceFullPath(String, String, StringBuilder, UInt32) Declaration public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen) Parameters Type Name Description System.String pchResourceName System.String pchResourceTypeDirectory System.Text.StringBuilder pchPathBuffer System.UInt32 unBufferLen Returns Type Description System.UInt32 LoadSharedResource(String, String, UInt32) Declaration public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen) Parameters Type Name Description System.String pchResourceName System.String pchBuffer System.UInt32 unBufferLen Returns Type Description System.UInt32"
  },
  "api/Valve.VR.html": {
    "href": "api/Valve.VR.html",
    "title": "Namespace Valve.VR | SteamVR Unity Plugin",
    "keywords": "Namespace Valve.VR Classes CVRApplications CVRChaperone CVRChaperoneSetup CVRCompositor CVRDriverManager CVRExtendedDisplay CVRInput CVRIOBuffer CVRNotifications CVROverlay CVRRenderModels CVRResources CVRScreenshots CVRSettings CVRSpatialAnchors CVRSystem CVRTrackedCamera OpenVR OpenVRInterop SteamVR SteamVR_Action SteamVR_Action_Boolean SteamVR_Action_Boolean_Source SteamVR_Action_Boolean_Source_Map SteamVR_Action_In_Source In actions are all input type actions. Boolean, Single, Vector2, Vector3, Skeleton, and Pose. This class fires onChange and onUpdate events. SteamVR_Action_In_Source_Map<SourceElement> SteamVR_Action_In<SourceMap, SourceElement> SteamVR_Action_Out_Source SteamVR_Action_Out<SourceMap, SourceElement> SteamVR_Action_Pose SteamVR_Action_Pose_Base<SourceMap, SourceElement> SteamVR_Action_Pose_Source SteamVR_Action_Pose_Source_Map<Source> Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. SteamVR_Action_Single SteamVR_Action_Single_Source SteamVR_Action_Single_Source_Map SteamVR_Action_Skeleton SteamVR_Action_Skeleton_Source Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons. We give you 31 bones to help you animate hand models. For more information check out this blog post: https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068 SteamVR_Action_Skeleton_Source_Map SteamVR_Action_Source SteamVR_Action_Source_Map SteamVR_Action_Source_Map<SourceElement> SteamVR_Action_Vector2 SteamVR_Action_Vector2_Source SteamVR_Action_Vector2_Source_Map Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. SteamVR_Action_Vector3 SteamVR_Action_Vector3_Source SteamVR_Action_Vector3_Source_Map SteamVR_Action_Vibration SteamVR_Action_Vibration_Source SteamVR_Action_Vibration_Source_Map SteamVR_Action<SourceMap, SourceElement> SteamVR_Actions SteamVR_ActionSet Action sets are logical groupings of actions. Multiple sets can be active at one time. SteamVR_ActionSet_Data Action sets are logical groupings of actions. Multiple sets can be active at one time. SteamVR_ActionSet_Manager Action sets are logical groupings of actions. Multiple sets can be active at one time. SteamVR_ActivateActionSetOnLoad Automatically activates an action set on Start() and deactivates the set on OnDestroy(). Optionally deactivating all other sets as well. SteamVR_Behaviour SteamVR_Behaviour_Boolean This component simplifies using boolean actions. Provides editor accessible events: OnPress, OnPressDown, OnPressUp, OnChange, and OnUpdate. Provides script accessible events: OnPressEvent, OnPressDownEvent, OnPressUpEvent, OnChangeEvent, and OnUpdateEvent. SteamVR_Behaviour_BooleanEvent SteamVR_Behaviour_Pose This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates. SteamVR_Behaviour_Pose_ConnectedChangedEvent SteamVR_Behaviour_Pose_DeviceIndexChangedEvent SteamVR_Behaviour_Pose_TrackingChangedEvent SteamVR_Behaviour_PoseEvent SteamVR_Behaviour_Single SteamVR_Behaviour_Single simplifies the use of single actions. It gives an event to subscribe to for when the action has changed. SteamVR_Behaviour_SingleEvent SteamVR_Behaviour_Skeleton SteamVR_Behaviour_Skeleton_ConnectedChangedEvent SteamVR_Behaviour_Skeleton_TrackingChangedEvent SteamVR_Behaviour_SkeletonCustom The major difference between this component and the standard SteamVR_Behaviour_Skeleton is this one lets you only use the joints you care about. You can set the transforms you're concerned with and ignore the ones you're not. SteamVR_Behaviour_SkeletonEvent SteamVR_Behaviour_Vector2 Simplifies the use of the Vector2 action. Provides an onChange event that fires whenever the vector2 changes. SteamVR_Behaviour_Vector2Event SteamVR_Behaviour_Vector3 SteamVR_Behaviour_Vector3Event SteamVR_Camera SteamVR_CameraFlip SteamVR_CameraMask SteamVR_Ears SteamVR_Events SteamVR_Events.Action SteamVR_Events.Action<T> SteamVR_Events.Action<T0, T1> SteamVR_Events.Action<T0, T1, T2> SteamVR_Events.ActionNoArgs SteamVR_Events.Event SteamVR_Events.Event<T> SteamVR_Events.Event<T0, T1> SteamVR_Events.Event<T0, T1, T2> SteamVR_ExternalCamera SteamVR_Fade SteamVR_Frustum SteamVR_HistoryBuffer SteamVR_HistoryStep SteamVR_IK SteamVR_Input SteamVR_Input_ActionSet_buggy SteamVR_Input_ActionSet_default SteamVR_Input_ActionSet_mixedreality SteamVR_Input_ActionSet_platformer SteamVR_Input_Source SteamVR_LoadLevel SteamVR_Menu SteamVR_Overlay SteamVR_PlayArea SteamVR_Render SteamVR_RenderModel SteamVR_RenderModel.RenderModel SteamVR_RenderModel.RenderModelInterfaceHolder SteamVR_RingBuffer<T> SteamVR_Settings SteamVR_Skeleton_FingerExtensionTypeLists SteamVR_Skeleton_FingerIndexes The order of the fingers that SteamVR Skeleton Input outputs SteamVR_Skeleton_FingerSplayIndexes The order of the fingerSplays that SteamVR Skeleton Input outputs SteamVR_Skeleton_HandMask Simple mask for fingers SteamVR_Skeleton_JointIndexes The order of the joints that SteamVR Skeleton Input is expecting. SteamVR_Skeleton_Pose SteamVR_Skeleton_Pose_Hand SteamVR_Skeleton_Poser SteamVR_Skeleton_Poser.PoseBlendingBehaviour A filter applied to the base pose. Blends to a secondary pose by a certain weight. Can be masked per-finger SteamVR_Skeleton_Poser.SkeletonBlendablePose A SkeletonBlendablePose holds a reference to a Skeleton_Pose scriptableObject, and also contains some helper functions. Also handles pose-specific animation like additive finger motion. SteamVR_Skeleton_PoseSnapshot PoseSnapshots hold a skeleton pose for one hand, as well as storing which hand they contain. They have several functions for combining BlendablePoses. SteamVR_Skybox SteamVR_SphericalProjection SteamVR_TrackedCamera SteamVR_TrackedCamera.VideoStreamTexture SteamVR_TrackedObject SteamVR_Utils Structs AppOverrideKeys_t CameraVideoStreamFrameHeader_t Compositor_CumulativeStats Compositor_FrameTiming Compositor_OverlaySettings COpenVRContext CVRSettingHelper D3D12TextureData_t DistortionCoordinates_t DriverDirectMode_FrameTiming HiddenAreaMesh_t HmdColor_t HmdMatrix33_t HmdMatrix34_t HmdMatrix44_t HmdQuad_t HmdQuaternion_t HmdQuaternionf_t HmdRect2_t HmdVector2_t HmdVector3_t HmdVector3d_t HmdVector4_t ImuSample_t InputAnalogActionData_t InputDigitalActionData_t InputOriginInfo_t InputPoseActionData_t InputSkeletalActionData_t IntersectionMaskCircle_t IntersectionMaskRectangle_t IVRApplications IVRChaperone IVRChaperoneSetup IVRCompositor IVRDriverManager IVRExtendedDisplay IVRInput IVRIOBuffer IVRNotifications IVROverlay IVRRenderModels IVRResources IVRScreenshots IVRSettings IVRSpatialAnchors IVRSystem IVRTrackedCamera NotificationBitmap_t RenderModel_ComponentState_t RenderModel_ControllerMode_State_t RenderModel_t RenderModel_t_Packed RenderModel_TextureMap_t RenderModel_TextureMap_t_Packed RenderModel_Vertex_t SpatialAnchorPose_t SteamVR_ExternalCamera.Config SteamVR_Input_Sources_Comparer SteamVR_Overlay.IntersectionResults SteamVR_Utils.RigidTransform Texture_t TrackedDevicePose_t VRActiveActionSet_t VRBoneTransform_t VRControllerAxis_t VRControllerState_t VRControllerState_t_Packed VREvent_ApplicationLaunch_t VREvent_Chaperone_t VREvent_Controller_t VREvent_Data_t VREvent_DualAnalog_t VREvent_EditingCameraSurface_t VREvent_HapticVibration_t VREvent_HDCPError_t VREvent_InputActionManifestLoad_t VREvent_InputBindingLoad_t VREvent_Ipd_t VREvent_Keyboard_t VREvent_MessageOverlay_t VREvent_Mouse_t VREvent_Notification_t VREvent_Overlay_t VREvent_PerformanceTest_t VREvent_Process_t VREvent_ProgressUpdate_t VREvent_Property_t VREvent_Reserved_t VREvent_Screenshot_t VREvent_ScreenshotProgress_t VREvent_Scroll_t VREvent_SeatedZeroPoseReset_t VREvent_ShowDevTools_t VREvent_ShowUI_t VREvent_SpatialAnchor_t VREvent_Status_t VREvent_t VREvent_t_Packed VREvent_TouchPadMove_t VREvent_WebConsole_t VROverlayIntersectionMaskPrimitive_Data_t VROverlayIntersectionMaskPrimitive_t VROverlayIntersectionParams_t VROverlayIntersectionResults_t VRSkeletalSummaryData_t VRTextureBounds_t VRTextureDepthInfo_t VRTextureWithDepth_t VRTextureWithPose_t VRTextureWithPoseAndDepth_t VRVulkanTextureData_t Interfaces ISteamVR_Action ISteamVR_Action_Boolean ISteamVR_Action_In ISteamVR_Action_In_Source ISteamVR_Action_Out ISteamVR_Action_Out_Source ISteamVR_Action_Pose Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. ISteamVR_Action_Single ISteamVR_Action_Skeleton_Source ISteamVR_Action_Source ISteamVR_Action_Vector2 ISteamVR_Action_Vector3 Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. ISteamVR_Action_Vibration Vibration actions are used to trigger haptic feedback in vr controllers. ISteamVR_ActionSet Action sets are logical groupings of actions. Multiple sets can be active at one time. Enums ChaperoneCalibrationState EAdditionalRadioFeatures EChaperoneConfigFile EChaperoneImportFlags ECollisionBoundsStyle EColorSpace EDeviceActivityLevel EDualAnalogWhich EGamepadTextInputLineMode EGamepadTextInputMode EHDCPError EHiddenAreaMeshType EIOBufferError EIOBufferMode EOverlayDirection EShowUIType ETextureType ETrackedControllerRole ETrackedDeviceClass ETrackedDeviceProperty ETrackedPropertyError ETrackingResult ETrackingUniverseOrigin EVRApplicationError EVRApplicationProperty EVRApplicationTransitionState EVRApplicationType EVRButtonId EVRComponentProperty EVRCompositorError EVRCompositorTimingMode EVRControllerAxisType EVRControllerEventOutputType EVRDistortionFunctionType EVREventType EVREye EVRFinger EVRFingerSplay EVRFirmwareError EVRInitError EVRInputError EVRInputFilterCancelType EVRInputStringBits EVRMouseButton EVRMuraCorrectionMode EVRNotificationError EVRNotificationStyle EVRNotificationType EVROverlayError EVROverlayIntersectionMaskPrimitiveType EVRRenderModelError EVRScreenshotError EVRScreenshotPropertyFilenames EVRScreenshotType EVRSettingsError EVRSkeletalMotionRange EVRSkeletalReferencePose EVRSkeletalTrackingLevel EVRSkeletalTransformSpace EVRSpatialAnchorError EVRState EVRSubmitFlags EVRTrackedCameraError EVRTrackedCameraFrameLayout EVRTrackedCameraFrameType EVSync Imu_OffScaleFlags SkeletalMotionRangeChange The change in range of the motion of the bones in the skeleton. Options are \"With Controller\" as if your hand is holding your VR controller. Or \"Without Controller\" as if your hand is empty. SteamVR.InitializedStates SteamVR_ActionDirections The direction the the action. In actions get input, Out actions send input. SteamVR_Behaviour_Skeleton.MirrorType SteamVR_Input_Sources SteamVR_PlayArea.Size SteamVR_Skeleton_FingerExtensionTypes SteamVR_Skeleton_FingerIndexEnum SteamVR_Skeleton_FingerSplayIndexEnum SteamVR_Skeleton_JointIndexEnum SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes SteamVR_Skybox.CellSize SteamVR_TrackedObject.EIndex SteamVR_UpdateModes VRMessageOverlayResponse VROverlayFlags VROverlayInputMethod VROverlayTransformType Delegates SteamVR_Action_Boolean.ActiveChangeHandler SteamVR_Action_Boolean.ChangeHandler SteamVR_Action_Boolean.StateDownHandler SteamVR_Action_Boolean.StateHandler SteamVR_Action_Boolean.StateUpHandler SteamVR_Action_Boolean.UpdateHandler SteamVR_Action_Pose.ActiveChangeHandler SteamVR_Action_Pose.ChangeHandler SteamVR_Action_Pose.DeviceConnectedChangeHandler SteamVR_Action_Pose.TrackingChangeHandler SteamVR_Action_Pose.UpdateHandler SteamVR_Action_Pose.ValidPoseChangeHandler SteamVR_Action_Single.ActiveChangeHandler SteamVR_Action_Single.AxisHandler SteamVR_Action_Single.ChangeHandler SteamVR_Action_Single.UpdateHandler SteamVR_Action_Skeleton.ActiveChangeHandler SteamVR_Action_Skeleton.ChangeHandler SteamVR_Action_Skeleton.DeviceConnectedChangeHandler SteamVR_Action_Skeleton.TrackingChangeHandler SteamVR_Action_Skeleton.UpdateHandler SteamVR_Action_Skeleton.ValidPoseChangeHandler SteamVR_Action_Vector2.ActiveChangeHandler SteamVR_Action_Vector2.AxisHandler SteamVR_Action_Vector2.ChangeHandler SteamVR_Action_Vector2.UpdateHandler SteamVR_Action_Vector3.ActiveChangeHandler SteamVR_Action_Vector3.AxisHandler SteamVR_Action_Vector3.ChangeHandler SteamVR_Action_Vector3.UpdateHandler SteamVR_Action_Vibration.ActiveChangeHandler SteamVR_Action_Vibration.ExecuteHandler SteamVR_Behaviour_Boolean.ActiveChangeHandler SteamVR_Behaviour_Boolean.ChangeHandler SteamVR_Behaviour_Boolean.StateDownHandler SteamVR_Behaviour_Boolean.StateHandler SteamVR_Behaviour_Boolean.StateUpHandler SteamVR_Behaviour_Boolean.UpdateHandler SteamVR_Behaviour_Pose.ActiveChangeHandler SteamVR_Behaviour_Pose.ChangeHandler SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler SteamVR_Behaviour_Pose.DeviceIndexChangedHandler SteamVR_Behaviour_Pose.TrackingChangeHandler SteamVR_Behaviour_Pose.UpdateHandler SteamVR_Behaviour_Pose.ValidPoseChangeHandler SteamVR_Behaviour_Single.AxisHandler SteamVR_Behaviour_Single.ChangeHandler SteamVR_Behaviour_Single.UpdateHandler SteamVR_Behaviour_Skeleton.ActiveChangeHandler SteamVR_Behaviour_Skeleton.ChangeHandler SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler SteamVR_Behaviour_Skeleton.TrackingChangeHandler SteamVR_Behaviour_Skeleton.UpdateHandler SteamVR_Behaviour_Skeleton.ValidPoseChangeHandler SteamVR_Behaviour_Vector2.AxisHandler SteamVR_Behaviour_Vector2.ChangeHandler SteamVR_Behaviour_Vector2.UpdateHandler SteamVR_Behaviour_Vector3.AxisHandler SteamVR_Behaviour_Vector3.ChangeHandler SteamVR_Behaviour_Vector3.UpdateHandler SteamVR_Input.PosesUpdatedHandler SteamVR_Input.SkeletonsUpdatedHandler SteamVR_Utils.SystemFn"
  },
  "api/Valve.VR.VRVulkanTextureData_t.html": {
    "href": "api/Valve.VR.VRVulkanTextureData_t.html",
    "title": "Struct VRVulkanTextureData_t | SteamVR Unity Plugin",
    "keywords": "Struct VRVulkanTextureData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRVulkanTextureData_t Fields m_nFormat Declaration public uint m_nFormat Field Value Type Description System.UInt32 m_nHeight Declaration public uint m_nHeight Field Value Type Description System.UInt32 m_nImage Declaration public ulong m_nImage Field Value Type Description System.UInt64 m_nQueueFamilyIndex Declaration public uint m_nQueueFamilyIndex Field Value Type Description System.UInt32 m_nSampleCount Declaration public uint m_nSampleCount Field Value Type Description System.UInt32 m_nWidth Declaration public uint m_nWidth Field Value Type Description System.UInt32 m_pDevice Declaration public IntPtr m_pDevice Field Value Type Description System.IntPtr m_pInstance Declaration public IntPtr m_pInstance Field Value Type Description System.IntPtr m_pPhysicalDevice Declaration public IntPtr m_pPhysicalDevice Field Value Type Description System.IntPtr m_pQueue Declaration public IntPtr m_pQueue Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.SteamVR_Utils.RigidTransform.html": {
    "href": "api/Valve.VR.SteamVR_Utils.RigidTransform.html",
    "title": "Struct SteamVR_Utils.RigidTransform | SteamVR Unity Plugin",
    "keywords": "Struct SteamVR_Utils.RigidTransform Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public struct RigidTransform Constructors RigidTransform(Transform) Declaration public RigidTransform(Transform fromTransform) Parameters Type Name Description UnityEngine.Transform fromTransform RigidTransform(Transform, Transform) Declaration public RigidTransform(Transform from, Transform to) Parameters Type Name Description UnityEngine.Transform from UnityEngine.Transform to RigidTransform(Vector3, Quaternion) Declaration public RigidTransform(Vector3 position, Quaternion rotation) Parameters Type Name Description UnityEngine.Vector3 position UnityEngine.Quaternion rotation RigidTransform(HmdMatrix34_t) Declaration public RigidTransform(HmdMatrix34_t pose) Parameters Type Name Description HmdMatrix34_t pose RigidTransform(HmdMatrix44_t) Declaration public RigidTransform(HmdMatrix44_t pose) Parameters Type Name Description HmdMatrix44_t pose Fields pos Declaration public Vector3 pos Field Value Type Description UnityEngine.Vector3 rot Declaration public Quaternion rot Field Value Type Description UnityEngine.Quaternion Properties identity Declaration public static SteamVR_Utils.RigidTransform identity { get; } Property Value Type Description SteamVR_Utils.RigidTransform Methods Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) FromLocal(Transform) Declaration public static SteamVR_Utils.RigidTransform FromLocal(Transform fromTransform) Parameters Type Name Description UnityEngine.Transform fromTransform Returns Type Description SteamVR_Utils.RigidTransform GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetInverse() Declaration public SteamVR_Utils.RigidTransform GetInverse() Returns Type Description SteamVR_Utils.RigidTransform Interpolate(SteamVR_Utils.RigidTransform, Single) Declaration public void Interpolate(SteamVR_Utils.RigidTransform to, float t) Parameters Type Name Description SteamVR_Utils.RigidTransform to System.Single t Interpolate(SteamVR_Utils.RigidTransform, SteamVR_Utils.RigidTransform, Single) Declaration public static SteamVR_Utils.RigidTransform Interpolate(SteamVR_Utils.RigidTransform a, SteamVR_Utils.RigidTransform b, float t) Parameters Type Name Description SteamVR_Utils.RigidTransform a SteamVR_Utils.RigidTransform b System.Single t Returns Type Description SteamVR_Utils.RigidTransform Inverse() Declaration public void Inverse() InverseTransformPoint(Vector3) Declaration public Vector3 InverseTransformPoint(Vector3 point) Parameters Type Name Description UnityEngine.Vector3 point Returns Type Description UnityEngine.Vector3 Multiply(SteamVR_Utils.RigidTransform, SteamVR_Utils.RigidTransform) Declaration public void Multiply(SteamVR_Utils.RigidTransform a, SteamVR_Utils.RigidTransform b) Parameters Type Name Description SteamVR_Utils.RigidTransform a SteamVR_Utils.RigidTransform b ToHmdMatrix34() Declaration public HmdMatrix34_t ToHmdMatrix34() Returns Type Description HmdMatrix34_t ToHmdMatrix44() Declaration public HmdMatrix44_t ToHmdMatrix44() Returns Type Description HmdMatrix44_t TransformPoint(Vector3) Declaration public Vector3 TransformPoint(Vector3 point) Parameters Type Name Description UnityEngine.Vector3 point Returns Type Description UnityEngine.Vector3 Operators Equality(SteamVR_Utils.RigidTransform, SteamVR_Utils.RigidTransform) Declaration public static bool operator ==(SteamVR_Utils.RigidTransform a, SteamVR_Utils.RigidTransform b) Parameters Type Name Description SteamVR_Utils.RigidTransform a SteamVR_Utils.RigidTransform b Returns Type Description System.Boolean Inequality(SteamVR_Utils.RigidTransform, SteamVR_Utils.RigidTransform) Declaration public static bool operator !=(SteamVR_Utils.RigidTransform a, SteamVR_Utils.RigidTransform b) Parameters Type Name Description SteamVR_Utils.RigidTransform a SteamVR_Utils.RigidTransform b Returns Type Description System.Boolean Multiply(SteamVR_Utils.RigidTransform, Vector3) Declaration public static Vector3 operator *(SteamVR_Utils.RigidTransform t, Vector3 v) Parameters Type Name Description SteamVR_Utils.RigidTransform t UnityEngine.Vector3 v Returns Type Description UnityEngine.Vector3 Multiply(SteamVR_Utils.RigidTransform, SteamVR_Utils.RigidTransform) Declaration public static SteamVR_Utils.RigidTransform operator *(SteamVR_Utils.RigidTransform a, SteamVR_Utils.RigidTransform b) Parameters Type Name Description SteamVR_Utils.RigidTransform a SteamVR_Utils.RigidTransform b Returns Type Description SteamVR_Utils.RigidTransform"
  },
  "api/Valve.VR.SteamVR_UpdateModes.html": {
    "href": "api/Valve.VR.SteamVR_UpdateModes.html",
    "title": "Enum SteamVR_UpdateModes | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_UpdateModes Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_UpdateModes Fields Name Description Nothing OnFixedUpdate OnLateUpdate OnPreCull OnUpdate"
  },
  "api/Valve.VR.SteamVR_TrackedObject.html": {
    "href": "api/Valve.VR.SteamVR_TrackedObject.html",
    "title": "Class SteamVR_TrackedObject | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_TrackedObject Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_TrackedObject Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_TrackedObject : MonoBehaviour Fields index Declaration public SteamVR_TrackedObject.EIndex index Field Value Type Description SteamVR_TrackedObject.EIndex origin Declaration [Tooltip(\"If not set, relative to parent\")] public Transform origin Field Value Type Description UnityEngine.Transform Properties isValid Declaration public bool isValid { get; } Property Value Type Description System.Boolean Methods SetDeviceIndex(Int32) Declaration public void SetDeviceIndex(int index) Parameters Type Name Description System.Int32 index"
  },
  "api/Valve.VR.SteamVR_TrackedObject.EIndex.html": {
    "href": "api/Valve.VR.SteamVR_TrackedObject.EIndex.html",
    "title": "Enum SteamVR_TrackedObject.EIndex | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_TrackedObject.EIndex Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EIndex Fields Name Description Device1 Device10 Device11 Device12 Device13 Device14 Device15 Device2 Device3 Device4 Device5 Device6 Device7 Device8 Device9 Hmd None"
  },
  "api/Valve.VR.SteamVR_TrackedCamera.html": {
    "href": "api/Valve.VR.SteamVR_TrackedCamera.html",
    "title": "Class SteamVR_TrackedCamera | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_TrackedCamera Inheritance System.Object SteamVR_TrackedCamera Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_TrackedCamera Methods Distorted(Int32) Declaration public static SteamVR_TrackedCamera.VideoStreamTexture Distorted(int deviceIndex = 0) Parameters Type Name Description System.Int32 deviceIndex Returns Type Description SteamVR_TrackedCamera.VideoStreamTexture Source(Boolean, Int32) Declaration public static SteamVR_TrackedCamera.VideoStreamTexture Source(bool undistorted, int deviceIndex = 0) Parameters Type Name Description System.Boolean undistorted System.Int32 deviceIndex Returns Type Description SteamVR_TrackedCamera.VideoStreamTexture Undistorted(Int32) Declaration public static SteamVR_TrackedCamera.VideoStreamTexture Undistorted(int deviceIndex = 0) Parameters Type Name Description System.Int32 deviceIndex Returns Type Description SteamVR_TrackedCamera.VideoStreamTexture"
  },
  "api/Valve.VR.SteamVR_TrackedCamera.VideoStreamTexture.html": {
    "href": "api/Valve.VR.SteamVR_TrackedCamera.VideoStreamTexture.html",
    "title": "Class SteamVR_TrackedCamera.VideoStreamTexture | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_TrackedCamera.VideoStreamTexture Inheritance System.Object SteamVR_TrackedCamera.VideoStreamTexture Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class VideoStreamTexture Constructors VideoStreamTexture(UInt32, Boolean) Declaration public VideoStreamTexture(uint deviceIndex, bool undistorted) Parameters Type Name Description System.UInt32 deviceIndex System.Boolean undistorted Properties angularVelocity Declaration public Vector3 angularVelocity { get; } Property Value Type Description UnityEngine.Vector3 deviceIndex Declaration public uint deviceIndex { get; } Property Value Type Description System.UInt32 frameBounds Declaration public VRTextureBounds_t frameBounds { get; } Property Value Type Description VRTextureBounds_t frameId Declaration public uint frameId { get; } Property Value Type Description System.UInt32 frameType Declaration public EVRTrackedCameraFrameType frameType { get; } Property Value Type Description EVRTrackedCameraFrameType hasCamera Declaration public bool hasCamera { get; } Property Value Type Description System.Boolean hasTracking Declaration public bool hasTracking { get; } Property Value Type Description System.Boolean texture Declaration public Texture2D texture { get; } Property Value Type Description UnityEngine.Texture2D transform Declaration public SteamVR_Utils.RigidTransform transform { get; } Property Value Type Description SteamVR_Utils.RigidTransform undistorted Declaration public bool undistorted { get; } Property Value Type Description System.Boolean velocity Declaration public Vector3 velocity { get; } Property Value Type Description UnityEngine.Vector3 Methods Acquire() Declaration public ulong Acquire() Returns Type Description System.UInt64 GetPose() Declaration public TrackedDevicePose_t GetPose() Returns Type Description TrackedDevicePose_t Release() Declaration public ulong Release() Returns Type Description System.UInt64"
  },
  "api/Valve.VR.SteamVR_SphericalProjection.html": {
    "href": "api/Valve.VR.SteamVR_SphericalProjection.html",
    "title": "Class SteamVR_SphericalProjection | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_SphericalProjection Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_SphericalProjection Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] public class SteamVR_SphericalProjection : MonoBehaviour Methods Set(Vector3, Single, Single, Single, Single, Vector3, Vector3, Single, Vector3, Vector3, Single) Declaration public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale) Parameters Type Name Description UnityEngine.Vector3 N System.Single phi0 System.Single phi1 System.Single theta0 System.Single theta1 UnityEngine.Vector3 uAxis UnityEngine.Vector3 uOrigin System.Single uScale UnityEngine.Vector3 vAxis UnityEngine.Vector3 vOrigin System.Single vScale"
  },
  "api/Valve.VR.SteamVR_Skybox.html": {
    "href": "api/Valve.VR.SteamVR_Skybox.html",
    "title": "Class SteamVR_Skybox | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skybox Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Skybox Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skybox : MonoBehaviour Fields back Declaration public Texture back Field Value Type Description UnityEngine.Texture bottom Declaration public Texture bottom Field Value Type Description UnityEngine.Texture front Declaration public Texture front Field Value Type Description UnityEngine.Texture left Declaration public Texture left Field Value Type Description UnityEngine.Texture right Declaration public Texture right Field Value Type Description UnityEngine.Texture StereoCellSize Declaration public SteamVR_Skybox.CellSize StereoCellSize Field Value Type Description SteamVR_Skybox.CellSize StereoIpdMm Declaration public float StereoIpdMm Field Value Type Description System.Single top Declaration public Texture top Field Value Type Description UnityEngine.Texture Methods ClearOverride() Declaration public static void ClearOverride() GetTextureByIndex(Int32) Declaration public Texture GetTextureByIndex(int i) Parameters Type Name Description System.Int32 i Returns Type Description UnityEngine.Texture SetOverride(Texture, Texture, Texture, Texture, Texture, Texture) Declaration public static void SetOverride(Texture front = null, Texture back = null, Texture left = null, Texture right = null, Texture top = null, Texture bottom = null) Parameters Type Name Description UnityEngine.Texture front UnityEngine.Texture back UnityEngine.Texture left UnityEngine.Texture right UnityEngine.Texture top UnityEngine.Texture bottom SetTextureByIndex(Int32, Texture) Declaration public void SetTextureByIndex(int i, Texture t) Parameters Type Name Description System.Int32 i UnityEngine.Texture t"
  },
  "api/Valve.VR.SteamVR_LoadLevel.html": {
    "href": "api/Valve.VR.SteamVR_LoadLevel.html",
    "title": "Class SteamVR_LoadLevel | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_LoadLevel Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_LoadLevel Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_LoadLevel : MonoBehaviour Fields autoTriggerOnEnable Declaration public bool autoTriggerOnEnable Field Value Type Description System.Boolean back Declaration public Texture back Field Value Type Description UnityEngine.Texture backgroundColor Declaration public Color backgroundColor Field Value Type Description UnityEngine.Color bottom Declaration public Texture bottom Field Value Type Description UnityEngine.Texture fadeInTime Declaration public float fadeInTime Field Value Type Description System.Single fadeOutTime Declaration public float fadeOutTime Field Value Type Description System.Single front Declaration public Texture front Field Value Type Description UnityEngine.Texture internalProcessArgs Declaration public string internalProcessArgs Field Value Type Description System.String internalProcessPath Declaration public string internalProcessPath Field Value Type Description System.String left Declaration public Texture left Field Value Type Description UnityEngine.Texture levelName Declaration public string levelName Field Value Type Description System.String loadAdditive Declaration public bool loadAdditive Field Value Type Description System.Boolean loadAsync Declaration public bool loadAsync Field Value Type Description System.Boolean loadingScreen Declaration public Texture loadingScreen Field Value Type Description UnityEngine.Texture loadingScreenDistance Declaration public float loadingScreenDistance Field Value Type Description System.Single loadingScreenFadeInTime Declaration public float loadingScreenFadeInTime Field Value Type Description System.Single loadingScreenFadeOutTime Declaration public float loadingScreenFadeOutTime Field Value Type Description System.Single loadingScreenTransform Declaration public Transform loadingScreenTransform Field Value Type Description UnityEngine.Transform loadingScreenWidthInMeters Declaration public float loadingScreenWidthInMeters Field Value Type Description System.Single postLoadSettleTime Declaration public float postLoadSettleTime Field Value Type Description System.Single progressBarEmpty Declaration public Texture progressBarEmpty Field Value Type Description UnityEngine.Texture progressBarFull Declaration public Texture progressBarFull Field Value Type Description UnityEngine.Texture progressBarTransform Declaration public Transform progressBarTransform Field Value Type Description UnityEngine.Transform progressBarWidthInMeters Declaration public float progressBarWidthInMeters Field Value Type Description System.Single right Declaration public Texture right Field Value Type Description UnityEngine.Texture showGrid Declaration public bool showGrid Field Value Type Description System.Boolean top Declaration public Texture top Field Value Type Description UnityEngine.Texture Properties loading Declaration public static bool loading { get; } Property Value Type Description System.Boolean progress Declaration public static float progress { get; } Property Value Type Description System.Single progressTexture Declaration public static Texture progressTexture { get; } Property Value Type Description UnityEngine.Texture Methods Begin(String, Boolean, Single, Single, Single, Single, Single) Declaration public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5F, float r = 0F, float g = 0F, float b = 0F, float a = 1F) Parameters Type Name Description System.String levelName System.Boolean showGrid System.Single fadeOutTime System.Single r System.Single g System.Single b System.Single a Trigger() Declaration public void Trigger()"
  },
  "api/Valve.VR.SteamVR_Input_Sources_Comparer.html": {
    "href": "api/Valve.VR.SteamVR_Input_Sources_Comparer.html",
    "title": "Struct SteamVR_Input_Sources_Comparer | SteamVR Unity Plugin",
    "keywords": "Struct SteamVR_Input_Sources_Comparer Implements System.Collections.Generic.IEqualityComparer < SteamVR_Input_Sources > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct SteamVR_Input_Sources_Comparer : IEqualityComparer<SteamVR_Input_Sources> Methods Equals(SteamVR_Input_Sources, SteamVR_Input_Sources) Declaration public bool Equals(SteamVR_Input_Sources x, SteamVR_Input_Sources y) Parameters Type Name Description SteamVR_Input_Sources x SteamVR_Input_Sources y Returns Type Description System.Boolean GetHashCode(SteamVR_Input_Sources) Declaration public int GetHashCode(SteamVR_Input_Sources obj) Parameters Type Name Description SteamVR_Input_Sources obj Returns Type Description System.Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Valve.VR.SteamVR_Input_Sources.html": {
    "href": "api/Valve.VR.SteamVR_Input_Sources.html",
    "title": "Enum SteamVR_Input_Sources | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Input_Sources Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_Input_Sources Fields Name Description Any Camera Chest Gamepad Head Keyboard LeftFoot LeftHand LeftShoulder RightFoot RightHand RightShoulder Waist"
  },
  "api/Valve.VR.SteamVR_Input_Source.html": {
    "href": "api/Valve.VR.SteamVR_Input_Source.html",
    "title": "Class SteamVR_Input_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input_Source Inheritance System.Object SteamVR_Input_Source Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public static class SteamVR_Input_Source Methods GetAllSources() Declaration public static SteamVR_Input_Sources[] GetAllSources() Returns Type Description SteamVR_Input_Sources [] GetHandle(SteamVR_Input_Sources) Declaration public static ulong GetHandle(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.UInt64 GetSource(UInt64) Declaration public static SteamVR_Input_Sources GetSource(ulong handle) Parameters Type Name Description System.UInt64 handle Returns Type Description SteamVR_Input_Sources Initialize() Declaration public static void Initialize()"
  },
  "api/Valve.VR.SteamVR_Events.Action.html": {
    "href": "api/Valve.VR.SteamVR_Events.Action.html",
    "title": "Class SteamVR_Events.Action | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Action Inheritance System.Object SteamVR_Events.Action SteamVR_Events.Action<T> SteamVR_Events.Action<T0, T1> SteamVR_Events.Action<T0, T1, T2> SteamVR_Events.ActionNoArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class Action Properties enabled Declaration public bool enabled { set; } Property Value Type Description System.Boolean Methods Enable(Boolean) Declaration public abstract void Enable(bool enabled) Parameters Type Name Description System.Boolean enabled"
  },
  "api/Valve.VR.SteamVR_Events.Action-3.html": {
    "href": "api/Valve.VR.SteamVR_Events.Action-3.html",
    "title": "Class SteamVR_Events.Action<T0, T1, T2> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Action<T0, T1, T2> Inheritance System.Object SteamVR_Events.Action SteamVR_Events.Action<T0, T1, T2> Inherited Members SteamVR_Events.Action.enabled System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class Action<T0, T1, T2> : SteamVR_Events.Action Type Parameters Name Description T0 T1 T2 Constructors Action(SteamVR_Events.Event<T0, T1, T2>, UnityAction<T0, T1, T2>) Declaration public Action(SteamVR_Events.Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action) Parameters Type Name Description SteamVR_Events.Event <T0, T1, T2> _event UnityEngine.Events.UnityAction <T0, T1, T2> action Methods Enable(Boolean) Declaration public override void Enable(bool enabled) Parameters Type Name Description System.Boolean enabled Overrides SteamVR_Events.Action.Enable(Boolean)"
  },
  "api/Valve.VR.InteractionSystem.AfterTimer_Component.html": {
    "href": "api/Valve.VR.InteractionSystem.AfterTimer_Component.html",
    "title": "Class AfterTimer_Component | SteamVR Unity Plugin",
    "keywords": "Class AfterTimer_Component Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AfterTimer_Component Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [Serializable] public class AfterTimer_Component : MonoBehaviour Methods Init(Single, Action, Boolean) Declaration public void Init(float _time, Action _callback, bool earlydestroy) Parameters Type Name Description System.Single _time System.Action _callback System.Boolean earlydestroy"
  },
  "api/Valve.VR.InputSkeletalActionData_t.html": {
    "href": "api/Valve.VR.InputSkeletalActionData_t.html",
    "title": "Struct InputSkeletalActionData_t | SteamVR Unity Plugin",
    "keywords": "Struct InputSkeletalActionData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct InputSkeletalActionData_t Fields activeOrigin Declaration public ulong activeOrigin Field Value Type Description System.UInt64 bActive Declaration public bool bActive Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.HmdMatrix44_t.html": {
    "href": "api/Valve.VR.HmdMatrix44_t.html",
    "title": "Struct HmdMatrix44_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdMatrix44_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdMatrix44_t Fields m0 Declaration public float m0 Field Value Type Description System.Single m1 Declaration public float m1 Field Value Type Description System.Single m10 Declaration public float m10 Field Value Type Description System.Single m11 Declaration public float m11 Field Value Type Description System.Single m12 Declaration public float m12 Field Value Type Description System.Single m13 Declaration public float m13 Field Value Type Description System.Single m14 Declaration public float m14 Field Value Type Description System.Single m15 Declaration public float m15 Field Value Type Description System.Single m2 Declaration public float m2 Field Value Type Description System.Single m3 Declaration public float m3 Field Value Type Description System.Single m4 Declaration public float m4 Field Value Type Description System.Single m5 Declaration public float m5 Field Value Type Description System.Single m6 Declaration public float m6 Field Value Type Description System.Single m7 Declaration public float m7 Field Value Type Description System.Single m8 Declaration public float m8 Field Value Type Description System.Single m9 Declaration public float m9 Field Value Type Description System.Single"
  },
  "api/Valve.VR.EVRSubmitFlags.html": {
    "href": "api/Valve.VR.EVRSubmitFlags.html",
    "title": "Enum EVRSubmitFlags | SteamVR Unity Plugin",
    "keywords": "Enum EVRSubmitFlags Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSubmitFlags Fields Name Description Submit_Default Submit_GlRenderBuffer Submit_LensDistortionAlreadyApplied Submit_Reserved Submit_TextureWithDepth Submit_TextureWithPose"
  },
  "api/Valve.VR.EVRSettingsError.html": {
    "href": "api/Valve.VR.EVRSettingsError.html",
    "title": "Enum EVRSettingsError | SteamVR Unity Plugin",
    "keywords": "Enum EVRSettingsError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSettingsError Fields Name Description IPCFailed JsonParseFailed None ReadFailed UnsetSettingHasNoDefault WriteFailed"
  },
  "api/Valve.VR.EVROverlayIntersectionMaskPrimitiveType.html": {
    "href": "api/Valve.VR.EVROverlayIntersectionMaskPrimitiveType.html",
    "title": "Enum EVROverlayIntersectionMaskPrimitiveType | SteamVR Unity Plugin",
    "keywords": "Enum EVROverlayIntersectionMaskPrimitiveType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVROverlayIntersectionMaskPrimitiveType Fields Name Description OverlayIntersectionPrimitiveType_Circle OverlayIntersectionPrimitiveType_Rectangle"
  },
  "api/Valve.VR.InteractionSystem.BalloonSpawner.html": {
    "href": "api/Valve.VR.InteractionSystem.BalloonSpawner.html",
    "title": "Class BalloonSpawner | SteamVR Unity Plugin",
    "keywords": "Class BalloonSpawner Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour BalloonSpawner Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class BalloonSpawner : MonoBehaviour Fields attachBalloon Declaration public bool attachBalloon Field Value Type Description System.Boolean autoSpawn Declaration public bool autoSpawn Field Value Type Description System.Boolean balloonPrefab Declaration public GameObject balloonPrefab Field Value Type Description UnityEngine.GameObject color Declaration public Balloon.BalloonColor color Field Value Type Description Balloon.BalloonColor inflateSound Declaration public SoundPlayOneshot inflateSound Field Value Type Description SoundPlayOneshot maxSpawnTime Declaration public float maxSpawnTime Field Value Type Description System.Single minSpawnTime Declaration public float minSpawnTime Field Value Type Description System.Single playSounds Declaration public bool playSounds Field Value Type Description System.Boolean scale Declaration public float scale Field Value Type Description System.Single sendSpawnMessageToParent Declaration public bool sendSpawnMessageToParent Field Value Type Description System.Boolean spawnAtStartup Declaration public bool spawnAtStartup Field Value Type Description System.Boolean spawnDirectionTransform Declaration public Transform spawnDirectionTransform Field Value Type Description UnityEngine.Transform spawnForce Declaration public float spawnForce Field Value Type Description System.Single stretchSound Declaration public SoundPlayOneshot stretchSound Field Value Type Description SoundPlayOneshot Methods SpawnBalloon(Balloon.BalloonColor) Declaration public GameObject SpawnBalloon(Balloon.BalloonColor color = Balloon.BalloonColor.Red) Parameters Type Name Description Balloon.BalloonColor color Returns Type Description UnityEngine.GameObject SpawnBalloonFromEvent(Int32) Declaration public void SpawnBalloonFromEvent(int color) Parameters Type Name Description System.Int32 color"
  },
  "api/Valve.VR.InteractionSystem.BalloonHapticBump.html": {
    "href": "api/Valve.VR.InteractionSystem.BalloonHapticBump.html",
    "title": "Class BalloonHapticBump | SteamVR Unity Plugin",
    "keywords": "Class BalloonHapticBump Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour BalloonHapticBump Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class BalloonHapticBump : MonoBehaviour Fields physParent Declaration public GameObject physParent Field Value Type Description UnityEngine.GameObject"
  },
  "api/Valve.VR.EVRCompositorTimingMode.html": {
    "href": "api/Valve.VR.EVRCompositorTimingMode.html",
    "title": "Enum EVRCompositorTimingMode | SteamVR Unity Plugin",
    "keywords": "Enum EVRCompositorTimingMode Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRCompositorTimingMode Fields Name Description Explicit_ApplicationPerformsPostPresentHandoff Explicit_RuntimePerformsPostPresentHandoff Implicit"
  },
  "api/Valve.VR.EVRCompositorError.html": {
    "href": "api/Valve.VR.EVRCompositorError.html",
    "title": "Enum EVRCompositorError | SteamVR Unity Plugin",
    "keywords": "Enum EVRCompositorError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRCompositorError Fields Name Description AlreadySubmitted DoNotHaveFocus IncompatibleVersion IndexOutOfRange InvalidBounds InvalidTexture IsNotSceneApplication None RequestFailed SharedTexturesNotSupported TextureIsOnWrongDevice TextureUsesUnsupportedFormat"
  },
  "api/Valve.VR.ETrackingUniverseOrigin.html": {
    "href": "api/Valve.VR.ETrackingUniverseOrigin.html",
    "title": "Enum ETrackingUniverseOrigin | SteamVR Unity Plugin",
    "keywords": "Enum ETrackingUniverseOrigin Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackingUniverseOrigin Fields Name Description TrackingUniverseRawAndUncalibrated TrackingUniverseSeated TrackingUniverseStanding"
  },
  "api/Valve.VR.EShowUIType.html": {
    "href": "api/Valve.VR.EShowUIType.html",
    "title": "Enum EShowUIType | SteamVR Unity Plugin",
    "keywords": "Enum EShowUIType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EShowUIType Fields Name Description ShowUI_ControllerBinding ShowUI_ManageTrackers ShowUI_Pairing ShowUI_QuickStart ShowUI_Settings"
  },
  "api/Valve.VR.VREvent_ApplicationLaunch_t.html": {
    "href": "api/Valve.VR.VREvent_ApplicationLaunch_t.html",
    "title": "Struct VREvent_ApplicationLaunch_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_ApplicationLaunch_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_ApplicationLaunch_t Fields pid Declaration public uint pid Field Value Type Description System.UInt32 unArgsHandle Declaration public uint unArgsHandle Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VRControllerState_t_Packed.html": {
    "href": "api/Valve.VR.VRControllerState_t_Packed.html",
    "title": "Struct VRControllerState_t_Packed | SteamVR Unity Plugin",
    "keywords": "Struct VRControllerState_t_Packed Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRControllerState_t_Packed Constructors VRControllerState_t_Packed(VRControllerState_t) Declaration public VRControllerState_t_Packed(VRControllerState_t unpacked) Parameters Type Name Description VRControllerState_t unpacked Fields rAxis0 Declaration public VRControllerAxis_t rAxis0 Field Value Type Description VRControllerAxis_t rAxis1 Declaration public VRControllerAxis_t rAxis1 Field Value Type Description VRControllerAxis_t rAxis2 Declaration public VRControllerAxis_t rAxis2 Field Value Type Description VRControllerAxis_t rAxis3 Declaration public VRControllerAxis_t rAxis3 Field Value Type Description VRControllerAxis_t rAxis4 Declaration public VRControllerAxis_t rAxis4 Field Value Type Description VRControllerAxis_t ulButtonPressed Declaration public ulong ulButtonPressed Field Value Type Description System.UInt64 ulButtonTouched Declaration public ulong ulButtonTouched Field Value Type Description System.UInt64 unPacketNum Declaration public uint unPacketNum Field Value Type Description System.UInt32 Methods Unpack(ref VRControllerState_t) Declaration public void Unpack(ref VRControllerState_t unpacked) Parameters Type Name Description VRControllerState_t unpacked"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerExtensionTypeLists.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerExtensionTypeLists.html",
    "title": "Class SteamVR_Skeleton_FingerExtensionTypeLists | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_FingerExtensionTypeLists Inheritance System.Object SteamVR_Skeleton_FingerExtensionTypeLists Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_FingerExtensionTypeLists Properties enumList Declaration public SteamVR_Skeleton_FingerExtensionTypes[] enumList { get; } Property Value Type Description SteamVR_Skeleton_FingerExtensionTypes [] stringList Declaration public string[] stringList { get; } Property Value Type Description System.String []"
  },
  "api/Valve.VR.SteamVR_Settings.html": {
    "href": "api/Valve.VR.SteamVR_Settings.html",
    "title": "Class SteamVR_Settings | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Settings Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject SteamVR_Settings Inherited Members UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Settings : ScriptableObject Fields actionsFilePath Declaration [Tooltip(\"Filename local to the project root (or executable, in a build)\")] public string actionsFilePath Field Value Type Description System.String activateFirstActionSetOnStart Declaration public bool activateFirstActionSetOnStart Field Value Type Description System.Boolean autoEnableVR Declaration [Tooltip(\"The SteamVR Plugin can automatically make sure VR is enabled in your player settings and if not, enable it.\")] public bool autoEnableVR Field Value Type Description System.Boolean editorAppKey Declaration [Tooltip(\"This is the app key the unity editor will use to identify your application. (can be \\\"steam.app.[appid]\\\" to persist bindings between editor steam)\")] public string editorAppKey Field Value Type Description System.String inputUpdateMode Declaration public SteamVR_UpdateModes inputUpdateMode Field Value Type Description SteamVR_UpdateModes lockPhysicsUpdateRateToRenderFrequency Declaration public bool lockPhysicsUpdateRateToRenderFrequency Field Value Type Description System.Boolean pauseGameWhenDashboardVisible Declaration public bool pauseGameWhenDashboardVisible Field Value Type Description System.Boolean poseUpdateMode Declaration public SteamVR_UpdateModes poseUpdateMode Field Value Type Description SteamVR_UpdateModes steamVRInputPath Declaration [Tooltip(\"Path local to the Assets folder\")] public string steamVRInputPath Field Value Type Description System.String trackingSpace Declaration public ETrackingUniverseOrigin trackingSpace Field Value Type Description ETrackingUniverseOrigin Properties instance Declaration public static SteamVR_Settings instance { get; } Property Value Type Description SteamVR_Settings Methods IsInputUpdateMode(SteamVR_UpdateModes) Declaration public bool IsInputUpdateMode(SteamVR_UpdateModes tocheck) Parameters Type Name Description SteamVR_UpdateModes tocheck Returns Type Description System.Boolean IsPoseUpdateMode(SteamVR_UpdateModes) Declaration public bool IsPoseUpdateMode(SteamVR_UpdateModes tocheck) Parameters Type Name Description SteamVR_UpdateModes tocheck Returns Type Description System.Boolean VerifyScriptableObject() Declaration public static void VerifyScriptableObject()"
  },
  "api/Valve.VR.SteamVR_Skeleton_Pose_Hand.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Pose_Hand.html",
    "title": "Class SteamVR_Skeleton_Pose_Hand | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_Pose_Hand Inheritance System.Object SteamVR_Skeleton_Pose_Hand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Skeleton_Pose_Hand Constructors SteamVR_Skeleton_Pose_Hand(SteamVR_Input_Sources) Declaration public SteamVR_Skeleton_Pose_Hand(SteamVR_Input_Sources source) Parameters Type Name Description SteamVR_Input_Sources source Fields bonePositions Declaration public Vector3[] bonePositions Field Value Type Description UnityEngine.Vector3 [] boneRotations Declaration public Quaternion[] boneRotations Field Value Type Description UnityEngine.Quaternion [] ignoreRootPoseData Declaration public bool ignoreRootPoseData Field Value Type Description System.Boolean ignoreWristPoseData Declaration public bool ignoreWristPoseData Field Value Type Description System.Boolean indexFingerMovementType Declaration public SteamVR_Skeleton_FingerExtensionTypes indexFingerMovementType Field Value Type Description SteamVR_Skeleton_FingerExtensionTypes inputSource Declaration public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources middleFingerMovementType Declaration public SteamVR_Skeleton_FingerExtensionTypes middleFingerMovementType Field Value Type Description SteamVR_Skeleton_FingerExtensionTypes pinkyFingerMovementType Declaration public SteamVR_Skeleton_FingerExtensionTypes pinkyFingerMovementType Field Value Type Description SteamVR_Skeleton_FingerExtensionTypes position Declaration public Vector3 position Field Value Type Description UnityEngine.Vector3 ringFingerMovementType Declaration public SteamVR_Skeleton_FingerExtensionTypes ringFingerMovementType Field Value Type Description SteamVR_Skeleton_FingerExtensionTypes rotation Declaration public Quaternion rotation Field Value Type Description UnityEngine.Quaternion thumbFingerMovementType Declaration public SteamVR_Skeleton_FingerExtensionTypes thumbFingerMovementType Field Value Type Description SteamVR_Skeleton_FingerExtensionTypes Methods GetFingerExtensionType(Int32) Get extension type for a particular finger. Thumb is 0, Index is 1, etc. Declaration public SteamVR_Skeleton_FingerExtensionTypes GetFingerExtensionType(int finger) Parameters Type Name Description System.Int32 finger Returns Type Description SteamVR_Skeleton_FingerExtensionTypes GetMovementTypeForBone(Int32) Declaration public SteamVR_Skeleton_FingerExtensionTypes GetMovementTypeForBone(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description SteamVR_Skeleton_FingerExtensionTypes"
  },
  "api/Valve.VR.SteamVR_Skeleton_PoseSnapshot.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_PoseSnapshot.html",
    "title": "Class SteamVR_Skeleton_PoseSnapshot | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_PoseSnapshot PoseSnapshots hold a skeleton pose for one hand, as well as storing which hand they contain. They have several functions for combining BlendablePoses. Inheritance System.Object SteamVR_Skeleton_PoseSnapshot Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_PoseSnapshot Constructors SteamVR_Skeleton_PoseSnapshot(Int32, SteamVR_Input_Sources) Declaration public SteamVR_Skeleton_PoseSnapshot(int boneCount, SteamVR_Input_Sources source) Parameters Type Name Description System.Int32 boneCount SteamVR_Input_Sources source Fields bonePositions Declaration public Vector3[] bonePositions Field Value Type Description UnityEngine.Vector3 [] boneRotations Declaration public Quaternion[] boneRotations Field Value Type Description UnityEngine.Quaternion [] inputSource Declaration public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources position Declaration public Vector3 position Field Value Type Description UnityEngine.Vector3 rotation Declaration public Quaternion rotation Field Value Type Description UnityEngine.Quaternion Methods CopyFrom(SteamVR_Skeleton_PoseSnapshot) Perform a deep copy from one poseSnapshot to another. Declaration public void CopyFrom(SteamVR_Skeleton_PoseSnapshot source) Parameters Type Name Description SteamVR_Skeleton_PoseSnapshot source"
  },
  "api/Valve.VR.SteamVR_Skeleton_Poser.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Poser.html",
    "title": "Class SteamVR_Skeleton_Poser | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_Poser Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Skeleton_Poser Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_Poser : MonoBehaviour Fields blendEditorExpanded Declaration public bool blendEditorExpanded Field Value Type Description System.Boolean blendedSnapshotL Declaration public SteamVR_Skeleton_PoseSnapshot blendedSnapshotL Field Value Type Description SteamVR_Skeleton_PoseSnapshot blendedSnapshotR Declaration public SteamVR_Skeleton_PoseSnapshot blendedSnapshotR Field Value Type Description SteamVR_Skeleton_PoseSnapshot blendingBehaviours Declaration public List<SteamVR_Skeleton_Poser.PoseBlendingBehaviour> blendingBehaviours Field Value Type Description System.Collections.Generic.List < SteamVR_Skeleton_Poser.PoseBlendingBehaviour > poseEditorExpanded Declaration public bool poseEditorExpanded Field Value Type Description System.Boolean poseNames Declaration public string[] poseNames Field Value Type Description System.String [] previewLeftHandPrefab Declaration public GameObject previewLeftHandPrefab Field Value Type Description UnityEngine.GameObject previewLeftInstance Declaration [SerializeField] protected GameObject previewLeftInstance Field Value Type Description UnityEngine.GameObject previewPoseSelection Declaration [SerializeField] protected int previewPoseSelection Field Value Type Description System.Int32 previewRightHandPrefab Declaration public GameObject previewRightHandPrefab Field Value Type Description UnityEngine.GameObject previewRightInstance Declaration [SerializeField] protected GameObject previewRightInstance Field Value Type Description UnityEngine.GameObject scale Declaration public float scale Field Value Type Description System.Single showLeftPreview Declaration [SerializeField] protected bool showLeftPreview Field Value Type Description System.Boolean showRightPreview Declaration [SerializeField] protected bool showRightPreview Field Value Type Description System.Boolean skeletonAdditionalPoses Declaration public List<SteamVR_Skeleton_Pose> skeletonAdditionalPoses Field Value Type Description System.Collections.Generic.List < SteamVR_Skeleton_Pose > skeletonMainPose Declaration public SteamVR_Skeleton_Pose skeletonMainPose Field Value Type Description SteamVR_Skeleton_Pose Properties blendPoseCount Declaration public int blendPoseCount { get; } Property Value Type Description System.Int32 Methods ApplyBlenderBehaviours(SteamVR_Action_Skeleton, SteamVR_Input_Sources, SteamVR_Skeleton_PoseSnapshot) Declaration protected void ApplyBlenderBehaviours(SteamVR_Action_Skeleton skeletonAction, SteamVR_Input_Sources inputSource, SteamVR_Skeleton_PoseSnapshot snapshot) Parameters Type Name Description SteamVR_Action_Skeleton skeletonAction SteamVR_Input_Sources inputSource SteamVR_Skeleton_PoseSnapshot snapshot Awake() Declaration protected void Awake() BlendQuaternions(Quaternion[], Single[]) Weighted average of n quaternions Declaration protected Quaternion BlendQuaternions(Quaternion[] quaternions, float[] weights) Parameters Type Name Description UnityEngine.Quaternion [] quaternions System.Single [] weights Returns Type Description UnityEngine.Quaternion BlendVectors(Vector3[], Single[]) Weighted average of n vector3s Declaration protected Vector3 BlendVectors(Vector3[] vectors, float[] weights) Parameters Type Name Description UnityEngine.Vector3 [] vectors System.Single [] weights Returns Type Description UnityEngine.Vector3 GetBlendedPose(SteamVR_Action_Skeleton, SteamVR_Input_Sources) Retrieve the final animated pose, to be applied to a hand skeleton Declaration public SteamVR_Skeleton_PoseSnapshot GetBlendedPose(SteamVR_Action_Skeleton skeletonAction, SteamVR_Input_Sources handType) Parameters Type Name Description SteamVR_Action_Skeleton skeletonAction SteamVR_Input_Sources handType If this is for the left or right hand Returns Type Description SteamVR_Skeleton_PoseSnapshot GetBlendedPose(SteamVR_Behaviour_Skeleton) Retrieve the final animated pose, to be applied to a hand skeleton Declaration public SteamVR_Skeleton_PoseSnapshot GetBlendedPose(SteamVR_Behaviour_Skeleton skeletonBehaviour) Parameters Type Name Description SteamVR_Behaviour_Skeleton skeletonBehaviour The skeleton behaviour you want to get the action/input source from to blend between Returns Type Description SteamVR_Skeleton_PoseSnapshot GetBlendingBehaviour(String) Get a blending behaviour by name. Declaration public SteamVR_Skeleton_Poser.PoseBlendingBehaviour GetBlendingBehaviour(string behaviourName) Parameters Type Name Description System.String behaviourName Returns Type Description SteamVR_Skeleton_Poser.PoseBlendingBehaviour GetBlendingBehaviourEnabled(String) Check if a blending behaviour is enabled. Declaration public bool GetBlendingBehaviourEnabled(string behaviourName) Parameters Type Name Description System.String behaviourName Returns Type Description System.Boolean GetBlendingBehaviourValue(String) Get the blending value of a blendingBehaviour. Declaration public float GetBlendingBehaviourValue(string behaviourName) Parameters Type Name Description System.String behaviourName Returns Type Description System.Single GetPoseByIndex(Int32) Declaration public SteamVR_Skeleton_Pose GetPoseByIndex(int index) Parameters Type Name Description System.Int32 index Returns Type Description SteamVR_Skeleton_Pose LateUpdate() Declaration protected void LateUpdate() SetBlendingBehaviourEnabled(String, Boolean) Enable or disable a blending behaviour. Declaration public void SetBlendingBehaviourEnabled(string behaviourName, bool value) Parameters Type Name Description System.String behaviourName System.Boolean value SetBlendingBehaviourValue(String, Single) Set the blending value of a blendingBehaviour. Works best on Manual type behaviours. Declaration public void SetBlendingBehaviourValue(string behaviourName, float value) Parameters Type Name Description System.String behaviourName System.Single value UpdatePose(SteamVR_Action_Skeleton, SteamVR_Input_Sources) Updates all pose animation and blending. Can be called from different places without performance concerns, as it will only let itself run once per frame. Declaration public void UpdatePose(SteamVR_Action_Skeleton skeletonAction, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Skeleton skeletonAction SteamVR_Input_Sources inputSource"
  },
  "api/Valve.VR.SteamVR_Input_ActionSet_platformer.html": {
    "href": "api/Valve.VR.SteamVR_Input_ActionSet_platformer.html",
    "title": "Class SteamVR_Input_ActionSet_platformer | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input_ActionSet_platformer Inheritance System.Object SteamVR_ActionSet SteamVR_Input_ActionSet_platformer Implements System.IEquatable < SteamVR_ActionSet > ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_ActionSet.setData SteamVR_ActionSet.allActions SteamVR_ActionSet.nonVisualInActions SteamVR_ActionSet.visualActions SteamVR_ActionSet.poseActions SteamVR_ActionSet.skeletonActions SteamVR_ActionSet.outActionArray SteamVR_ActionSet.fullPath SteamVR_ActionSet.usage SteamVR_ActionSet.handle SteamVR_ActionSet.initialized SteamVR_ActionSet.Create<CreateType>(String) SteamVR_ActionSet.CreateFromName<CreateType>(String) SteamVR_ActionSet.PreInitialize(String) SteamVR_ActionSet.FinishPreInitialize() SteamVR_ActionSet.Initialize(Boolean, Boolean) SteamVR_ActionSet.GetPath() SteamVR_ActionSet.IsActive(SteamVR_Input_Sources) SteamVR_ActionSet.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.Activate(SteamVR_Input_Sources, Int32, Boolean) SteamVR_ActionSet.Deactivate(SteamVR_Input_Sources) SteamVR_ActionSet.GetShortName() SteamVR_ActionSet.ReadRawSetActive(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetPriority(SteamVR_Input_Sources) SteamVR_ActionSet.GetActionSetData() SteamVR_ActionSet.GetCopy<CreateType>() SteamVR_ActionSet.Equals(SteamVR_ActionSet) SteamVR_ActionSet.Equals(Object) SteamVR_ActionSet.GetHashCode() SteamVR_ActionSet.ISerializationCallbackReceiver.OnBeforeSerialize() SteamVR_ActionSet.ISerializationCallbackReceiver.OnAfterDeserialize() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Input_ActionSet_platformer : SteamVR_ActionSet, IEquatable<SteamVR_ActionSet>, ISteamVR_ActionSet, ISerializationCallbackReceiver Properties Jump Declaration public virtual SteamVR_Action_Boolean Jump { get; } Property Value Type Description SteamVR_Action_Boolean Move Declaration public virtual SteamVR_Action_Vector2 Move { get; } Property Value Type Description SteamVR_Action_Vector2 Implements System.IEquatable<T> ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.InteractionSystem.LinearAudioPitch.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearAudioPitch.html",
    "title": "Class LinearAudioPitch | SteamVR Unity Plugin",
    "keywords": "Class LinearAudioPitch Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearAudioPitch Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearAudioPitch : MonoBehaviour Fields applyContinuously Declaration public bool applyContinuously Field Value Type Description System.Boolean linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping maxPitch Declaration public float maxPitch Field Value Type Description System.Single minPitch Declaration public float minPitch Field Value Type Description System.Single pitchCurve Declaration public AnimationCurve pitchCurve Field Value Type Description UnityEngine.AnimationCurve"
  },
  "api/Valve.VR.InteractionSystem.HoverButton.html": {
    "href": "api/Valve.VR.InteractionSystem.HoverButton.html",
    "title": "Class HoverButton | SteamVR Unity Plugin",
    "keywords": "Class HoverButton Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour HoverButton Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class HoverButton : MonoBehaviour Fields buttonDown Declaration public bool buttonDown Field Value Type Description System.Boolean buttonUp Declaration public bool buttonUp Field Value Type Description System.Boolean disengageAtPercent Declaration [Range(0F, 1F)] public float disengageAtPercent Field Value Type Description System.Single engageAtPercent Declaration [Range(0F, 1F)] public float engageAtPercent Field Value Type Description System.Single engaged Declaration public bool engaged Field Value Type Description System.Boolean localMoveDistance Declaration public Vector3 localMoveDistance Field Value Type Description UnityEngine.Vector3 movingPart Declaration public Transform movingPart Field Value Type Description UnityEngine.Transform onButtonDown Declaration public HandEvent onButtonDown Field Value Type Description HandEvent onButtonIsPressed Declaration public HandEvent onButtonIsPressed Field Value Type Description HandEvent onButtonUp Declaration public HandEvent onButtonUp Field Value Type Description HandEvent"
  },
  "api/Valve.VR.CVRSettingHelper.html": {
    "href": "api/Valve.VR.CVRSettingHelper.html",
    "title": "Struct CVRSettingHelper | SteamVR Unity Plugin",
    "keywords": "Struct CVRSettingHelper Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct CVRSettingHelper Fields m_pSettings Declaration public IntPtr m_pSettings Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.CVRChaperone.html": {
    "href": "api/Valve.VR.CVRChaperone.html",
    "title": "Class CVRChaperone | SteamVR Unity Plugin",
    "keywords": "Class CVRChaperone Inheritance System.Object CVRChaperone Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRChaperone Methods AreBoundsVisible() Declaration public bool AreBoundsVisible() Returns Type Description System.Boolean ForceBoundsVisible(Boolean) Declaration public void ForceBoundsVisible(bool bForce) Parameters Type Name Description System.Boolean bForce GetBoundsColor(ref HmdColor_t, Int32, Single, ref HmdColor_t) Declaration public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor) Parameters Type Name Description HmdColor_t pOutputColorArray System.Int32 nNumOutputColors System.Single flCollisionBoundsFadeDistance HmdColor_t pOutputCameraColor GetCalibrationState() Declaration public ChaperoneCalibrationState GetCalibrationState() Returns Type Description ChaperoneCalibrationState GetPlayAreaRect(ref HmdQuad_t) Declaration public bool GetPlayAreaRect(ref HmdQuad_t rect) Parameters Type Name Description HmdQuad_t rect Returns Type Description System.Boolean GetPlayAreaSize(ref Single, ref Single) Declaration public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ) Parameters Type Name Description System.Single pSizeX System.Single pSizeZ Returns Type Description System.Boolean ReloadInfo() Declaration public void ReloadInfo() SetSceneColor(HmdColor_t) Declaration public void SetSceneColor(HmdColor_t color) Parameters Type Name Description HmdColor_t color"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Skeleton fromAction, bool active); Parameters Type Name Description SteamVR_Action_Skeleton fromAction System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.html",
    "title": "Class SteamVR_Action_Boolean | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Boolean Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Boolean_Source_Map , SteamVR_Action_Boolean_Source > SteamVR_Action_In < SteamVR_Action_Boolean_Source_Map , SteamVR_Action_Boolean_Source > SteamVR_Action_Boolean Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Boolean ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.changed SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.sourceMap SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.fullPath SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.handle SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.actionSet SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.direction SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.active SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.lastActive SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.activeBinding SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.initialized SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Boolean : SteamVR_Action_In<SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Boolean, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Boolean() Declaration public SteamVR_Action_Boolean() Properties lastState [Shortcut to: SteamVR_Input_Sources.Any] (previous update) True when the boolean action is true Declaration public bool lastState { get; } Property Value Type Description System.Boolean lastStateDown [Shortcut to: SteamVR_Input_Sources.Any] (previous update) True when the boolean action is true and the last state was false Declaration public bool lastStateDown { get; } Property Value Type Description System.Boolean lastStateUp [Shortcut to: SteamVR_Input_Sources.Any] (previous update) True when the boolean action is false and the last state was true Declaration public bool lastStateUp { get; } Property Value Type Description System.Boolean state [Shortcut to: SteamVR_Input_Sources.Any] True when the boolean action is true Declaration public bool state { get; } Property Value Type Description System.Boolean stateDown [Shortcut to: SteamVR_Input_Sources.Any] True when the boolean action is true and the last state was false Declaration public bool stateDown { get; } Property Value Type Description System.Boolean stateUp [Shortcut to: SteamVR_Input_Sources.Any] True when the boolean action is false and the last state was true Declaration public bool stateUp { get; } Property Value Type Description System.Boolean Methods AddOnActiveBindingChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound Declaration public void AddOnActiveBindingChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnActiveChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void AddOnActiveChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnChangeListener(SteamVR_Action_Boolean.ChangeHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) changes Declaration public void AddOnChangeListener(SteamVR_Action_Boolean.ChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnStateDownListener(SteamVR_Action_Boolean.StateDownHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) changes to true (from false). Declaration public void AddOnStateDownListener(SteamVR_Action_Boolean.StateDownHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.StateDownHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnStateUpListener(SteamVR_Action_Boolean.StateUpHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) changes to false (from true). Declaration public void AddOnStateUpListener(SteamVR_Action_Boolean.StateUpHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.StateUpHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnUpdateListener(SteamVR_Action_Boolean.UpdateHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) is updated. Declaration public void AddOnUpdateListener(SteamVR_Action_Boolean.UpdateHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. GetLastState(SteamVR_Input_Sources) [For the previous update] Returns true if the value of the action was true. Declaration public bool GetLastState(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastStateDown(SteamVR_Input_Sources) [For the previous update] Returns true if the value of the action has been set to true (from false). Declaration public bool GetLastStateDown(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastStateUp(SteamVR_Input_Sources) [For the previous update] Returns true if the value of the action has been set to false (from true). Declaration public bool GetLastStateUp(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetState(SteamVR_Input_Sources) Returns true if the value of the action (state) is currently true Declaration public bool GetState(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetStateDown(SteamVR_Input_Sources) Returns true if the value of the action has been changed to true (from false) in the most recent update. Declaration public bool GetStateDown(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetStateUp(SteamVR_Input_Sources) Returns true if the value of the action has been changed to false (from true) in the most recent update. Declaration public bool GetStateUp(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean RemoveOnActiveBindingChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveBindingChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnActiveChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Boolean.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnChangeListener(SteamVR_Action_Boolean.ChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Action_Boolean.ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnStateDownListener(SteamVR_Action_Boolean.StateDownHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnStateDownListener(SteamVR_Action_Boolean.StateDownHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.StateDownHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnStateUpListener(SteamVR_Action_Boolean.StateUpHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnStateUpListener(SteamVR_Action_Boolean.StateUpHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.StateUpHandler functionToStopCalling The local function that you've setup to receive events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnUpdateListener(SteamVR_Action_Boolean.UpdateHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Action_Boolean.UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Boolean.UpdateHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Events onActiveBindingChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the bound state of the binding changes Declaration public event SteamVR_Action_Boolean.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Boolean.ActiveChangeHandler onActiveChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Boolean.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Boolean.ActiveChangeHandler onChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever a state changes from false to true or true to false Declaration public event SteamVR_Action_Boolean.ChangeHandler onChange Event Type Type Description SteamVR_Action_Boolean.ChangeHandler onState [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the boolean action is true and gets updated Declaration public event SteamVR_Action_Boolean.StateHandler onState Event Type Type Description SteamVR_Action_Boolean.StateHandler onStateDown [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the state of the boolean action has changed from false to true in the most recent update Declaration public event SteamVR_Action_Boolean.StateDownHandler onStateDown Event Type Type Description SteamVR_Action_Boolean.StateDownHandler onStateUp [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the state of the boolean action has changed from true to false in the most recent update Declaration public event SteamVR_Action_Boolean.StateUpHandler onStateUp Event Type Type Description SteamVR_Action_Boolean.StateUpHandler onUpdate [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the action is updated Declaration public event SteamVR_Action_Boolean.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Boolean.UpdateHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Boolean ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.InteractionSystem.Longbow.html": {
    "href": "api/Valve.VR.InteractionSystem.Longbow.html",
    "title": "Class Longbow | SteamVR Unity Plugin",
    "keywords": "Class Longbow Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Longbow Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class Longbow : MonoBehaviour Fields arrowHandItemPackage Declaration public ItemPackage arrowHandItemPackage Field Value Type Description ItemPackage arrowHandPrefab Declaration public GameObject arrowHandPrefab Field Value Type Description UnityEngine.GameObject arrowMaxVelocity Declaration public float arrowMaxVelocity Field Value Type Description System.Single arrowMinVelocity Declaration public float arrowMinVelocity Field Value Type Description System.Single arrowSlideSound Declaration public SoundPlayOneshot arrowSlideSound Field Value Type Description SoundPlayOneshot autoSpawnArrowHand Declaration public bool autoSpawnArrowHand Field Value Type Description System.Boolean bowDrawLinearMapping Declaration public LinearMapping bowDrawLinearMapping Field Value Type Description LinearMapping currentHandGuess Declaration public Longbow.Handedness currentHandGuess Field Value Type Description Longbow.Handedness drawOffset Declaration public float drawOffset Field Value Type Description System.Single drawSound Declaration public SoundBowClick drawSound Field Value Type Description SoundBowClick handleTransform Declaration public Transform handleTransform Field Value Type Description UnityEngine.Transform nocked Declaration public bool nocked Field Value Type Description System.Boolean nockRestTransform Declaration public Transform nockRestTransform Field Value Type Description UnityEngine.Transform nockSound Declaration public SoundPlayOneshot nockSound Field Value Type Description SoundPlayOneshot nockTransform Declaration public Transform nockTransform Field Value Type Description UnityEngine.Transform pivotTransform Declaration public Transform pivotTransform Field Value Type Description UnityEngine.Transform pulled Declaration public bool pulled Field Value Type Description System.Boolean releaseSound Declaration public SoundPlayOneshot releaseSound Field Value Type Description SoundPlayOneshot Methods ArrowInPosition() Declaration public void ArrowInPosition() ArrowReleased() Declaration public void ArrowReleased() GetArrowVelocity() Declaration public float GetArrowVelocity() Returns Type Description System.Single ReleaseNock() Declaration public void ReleaseNock() StartNock(ArrowHand) Declaration public void StartNock(ArrowHand currentArrowHand) Parameters Type Name Description ArrowHand currentArrowHand StartRotationLerp() Declaration public void StartRotationLerp()"
  },
  "api/Valve.VR.InteractionSystem.Interactable.OnDetachedFromHandDelegate.html": {
    "href": "api/Valve.VR.InteractionSystem.Interactable.OnDetachedFromHandDelegate.html",
    "title": "Delegate Interactable.OnDetachedFromHandDelegate | SteamVR Unity Plugin",
    "keywords": "Delegate Interactable.OnDetachedFromHandDelegate Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public delegate void OnDetachedFromHandDelegate(Hand hand); Parameters Type Name Description Hand hand"
  },
  "api/Valve.VR.EVROverlayError.html": {
    "href": "api/Valve.VR.EVROverlayError.html",
    "title": "Enum EVROverlayError | SteamVR Unity Plugin",
    "keywords": "Enum EVROverlayError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVROverlayError Fields Name Description ArrayTooSmall BadMaskPrimitive InvalidHandle InvalidParameter InvalidTexture InvalidTrackedDevice KeyboardAlreadyInUse KeyInUse KeyTooLong NameTooLong None NoNeighbor OverlayLimitExceeded PermissionDenied RequestFailed TextureAlreadyLocked TextureLockCapacityReached TextureNotLocked ThumbnailCantBeDestroyed TooManyMaskPrimitives UnableToLoadFile UnknownOverlay WrongTransformType WrongVisibilityType"
  },
  "api/Valve.VR.InteractionSystem.ChaperoneInfo.html": {
    "href": "api/Valve.VR.InteractionSystem.ChaperoneInfo.html",
    "title": "Class ChaperoneInfo | SteamVR Unity Plugin",
    "keywords": "Class ChaperoneInfo Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ChaperoneInfo Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ChaperoneInfo : MonoBehaviour Fields Initialized Declaration public static SteamVR_Events.Event Initialized Field Value Type Description SteamVR_Events.Event Properties initialized Declaration public bool initialized { get; } Property Value Type Description System.Boolean instance Declaration public static ChaperoneInfo instance { get; } Property Value Type Description ChaperoneInfo playAreaSizeX Declaration public float playAreaSizeX { get; } Property Value Type Description System.Single playAreaSizeZ Declaration public float playAreaSizeZ { get; } Property Value Type Description System.Single roomscale Declaration public bool roomscale { get; } Property Value Type Description System.Boolean Methods InitializedAction(UnityAction) Declaration public static SteamVR_Events.Action InitializedAction(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action Returns Type Description SteamVR_Events.Action"
  },
  "api/Valve.VR.InteractionSystem.BodyCollider.html": {
    "href": "api/Valve.VR.InteractionSystem.BodyCollider.html",
    "title": "Class BodyCollider | SteamVR Unity Plugin",
    "keywords": "Class BodyCollider Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour BodyCollider Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(CapsuleCollider))] public class BodyCollider : MonoBehaviour Fields head Declaration public Transform head Field Value Type Description UnityEngine.Transform"
  },
  "api/Valve.VR.InputDigitalActionData_t.html": {
    "href": "api/Valve.VR.InputDigitalActionData_t.html",
    "title": "Struct InputDigitalActionData_t | SteamVR Unity Plugin",
    "keywords": "Struct InputDigitalActionData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct InputDigitalActionData_t Fields activeOrigin Declaration public ulong activeOrigin Field Value Type Description System.UInt64 bActive Declaration public bool bActive Field Value Type Description System.Boolean bChanged Declaration public bool bChanged Field Value Type Description System.Boolean bState Declaration public bool bState Field Value Type Description System.Boolean fUpdateTime Declaration public float fUpdateTime Field Value Type Description System.Single"
  },
  "api/Valve.VR.InputAnalogActionData_t.html": {
    "href": "api/Valve.VR.InputAnalogActionData_t.html",
    "title": "Struct InputAnalogActionData_t | SteamVR Unity Plugin",
    "keywords": "Struct InputAnalogActionData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct InputAnalogActionData_t Fields activeOrigin Declaration public ulong activeOrigin Field Value Type Description System.UInt64 bActive Declaration public bool bActive Field Value Type Description System.Boolean deltaX Declaration public float deltaX Field Value Type Description System.Single deltaY Declaration public float deltaY Field Value Type Description System.Single deltaZ Declaration public float deltaZ Field Value Type Description System.Single fUpdateTime Declaration public float fUpdateTime Field Value Type Description System.Single x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single z Declaration public float z Field Value Type Description System.Single"
  },
  "api/Valve.VR.HmdColor_t.html": {
    "href": "api/Valve.VR.HmdColor_t.html",
    "title": "Struct HmdColor_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdColor_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdColor_t Fields a Declaration public float a Field Value Type Description System.Single b Declaration public float b Field Value Type Description System.Single g Declaration public float g Field Value Type Description System.Single r Declaration public float r Field Value Type Description System.Single"
  },
  "api/Valve.VR.HiddenAreaMesh_t.html": {
    "href": "api/Valve.VR.HiddenAreaMesh_t.html",
    "title": "Struct HiddenAreaMesh_t | SteamVR Unity Plugin",
    "keywords": "Struct HiddenAreaMesh_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HiddenAreaMesh_t Fields pVertexData Declaration public IntPtr pVertexData Field Value Type Description System.IntPtr unTriangleCount Declaration public uint unTriangleCount Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.EVRScreenshotType.html": {
    "href": "api/Valve.VR.EVRScreenshotType.html",
    "title": "Enum EVRScreenshotType | SteamVR Unity Plugin",
    "keywords": "Enum EVRScreenshotType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRScreenshotType Fields Name Description Cubemap Mono MonoPanorama None Stereo StereoPanorama"
  },
  "api/Valve.VR.EVRScreenshotPropertyFilenames.html": {
    "href": "api/Valve.VR.EVRScreenshotPropertyFilenames.html",
    "title": "Enum EVRScreenshotPropertyFilenames | SteamVR Unity Plugin",
    "keywords": "Enum EVRScreenshotPropertyFilenames Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRScreenshotPropertyFilenames Fields Name Description Preview VR"
  },
  "api/Valve.VR.EVRFirmwareError.html": {
    "href": "api/Valve.VR.EVRFirmwareError.html",
    "title": "Enum EVRFirmwareError | SteamVR Unity Plugin",
    "keywords": "Enum EVRFirmwareError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRFirmwareError Fields Name Description Fail None Success"
  },
  "api/Valve.VR.EVRFingerSplay.html": {
    "href": "api/Valve.VR.EVRFingerSplay.html",
    "title": "Enum EVRFingerSplay | SteamVR Unity Plugin",
    "keywords": "Enum EVRFingerSplay Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRFingerSplay Fields Name Description Count Index_Middle Middle_Ring Ring_Pinky Thumb_Index"
  },
  "api/Valve.VR.EVRControllerAxisType.html": {
    "href": "api/Valve.VR.EVRControllerAxisType.html",
    "title": "Enum EVRControllerAxisType | SteamVR Unity Plugin",
    "keywords": "Enum EVRControllerAxisType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRControllerAxisType Fields Name Description k_eControllerAxis_Joystick k_eControllerAxis_None k_eControllerAxis_TrackPad k_eControllerAxis_Trigger"
  },
  "api/Valve.VR.SteamVR_Skeleton_Poser.PoseBlendingBehaviour.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Poser.PoseBlendingBehaviour.html",
    "title": "Class SteamVR_Skeleton_Poser.PoseBlendingBehaviour | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_Poser.PoseBlendingBehaviour A filter applied to the base pose. Blends to a secondary pose by a certain weight. Can be masked per-finger Inheritance System.Object SteamVR_Skeleton_Poser.PoseBlendingBehaviour Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class PoseBlendingBehaviour Constructors PoseBlendingBehaviour() Declaration public PoseBlendingBehaviour() Fields action_bool Declaration public SteamVR_Action_Boolean action_bool Field Value Type Description SteamVR_Action_Boolean action_single Declaration public SteamVR_Action_Single action_single Field Value Type Description SteamVR_Action_Single enabled Declaration public bool enabled Field Value Type Description System.Boolean influence Declaration public float influence Field Value Type Description System.Single mask Declaration public SteamVR_Skeleton_HandMask mask Field Value Type Description SteamVR_Skeleton_HandMask name Declaration public string name Field Value Type Description System.String pose Declaration public int pose Field Value Type Description System.Int32 previewEnabled Declaration public bool previewEnabled Field Value Type Description System.Boolean smoothingSpeed Declaration public float smoothingSpeed Field Value Type Description System.Single type Declaration public SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes type Field Value Type Description SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes useMask Declaration public bool useMask Field Value Type Description System.Boolean value Declaration public float value Field Value Type Description System.Single Methods ApplyBlending(SteamVR_Skeleton_PoseSnapshot, SteamVR_Skeleton_Poser.SkeletonBlendablePose[], SteamVR_Input_Sources) Apply blending to this behaviour's pose to an existing snapshot. Declaration public void ApplyBlending(SteamVR_Skeleton_PoseSnapshot snapshot, SteamVR_Skeleton_Poser.SkeletonBlendablePose[] blendPoses, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Skeleton_PoseSnapshot snapshot Snapshot to modify SteamVR_Skeleton_Poser.SkeletonBlendablePose [] blendPoses List of blend poses to get the target pose SteamVR_Input_Sources inputSource Which hand to receive input from Update(Single, SteamVR_Input_Sources) Performs smoothing based on deltaTime parameter. Declaration public void Update(float deltaTime, SteamVR_Input_Sources inputSource) Parameters Type Name Description System.Single deltaTime SteamVR_Input_Sources inputSource"
  },
  "api/Valve.VR.SteamVR_Action_Vector3.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Vector3.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector3.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta); Parameters Type Name Description SteamVR_Action_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 axis UnityEngine.Vector3 delta"
  },
  "api/Valve.VR.SteamVR_Action_Vector3.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3.AxisHandler.html",
    "title": "Delegate SteamVR_Action_Vector3.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector3.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta); Parameters Type Name Description SteamVR_Action_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 axis UnityEngine.Vector3 delta"
  },
  "api/Valve.VR.SteamVR_Action_Pose_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose_Source.html",
    "title": "Class SteamVR_Action_Pose_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Pose_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Pose_Source SteamVR_Action_Skeleton_Source Implements ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Pose_Source : SteamVR_Action_In_Source, ISteamVR_Action_Pose, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields changeTolerance The distance the pose needs to move/rotate before a change is detected Declaration public float changeTolerance Field Value Type Description System.Single lastPoseActionData Declaration protected InputPoseActionData_t lastPoseActionData Field Value Type Description InputPoseActionData_t poseAction Declaration protected SteamVR_Action_Pose poseAction Field Value Type Description SteamVR_Action_Pose poseActionData Declaration protected InputPoseActionData_t poseActionData Field Value Type Description InputPoseActionData_t poseActionData_size Declaration protected static uint poseActionData_size Field Value Type Description System.UInt32 predictedSecondsFromNow The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. Declaration public float predictedSecondsFromNow Field Value Type Description System.Single tempPoseActionData Declaration protected InputPoseActionData_t tempPoseActionData Field Value Type Description InputPoseActionData_t universeOrigin Declaration public ETrackingUniverseOrigin universeOrigin Field Value Type Description ETrackingUniverseOrigin Properties active True if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding True if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding activeOrigin The handle to the origin of the component that was used to update this pose Declaration public override ulong activeOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.activeOrigin angularVelocity The local angular velocity of this pose relative to the universe origin Declaration public Vector3 angularVelocity { get; protected set; } Property Value Type Description UnityEngine.Vector3 changed True when the orientation of the pose has changhed more than changeTolerance in the last update. Note: Will only return true if the action is also active. Declaration public override bool changed { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.changed deviceIsConnected True if the device bound to this action and input source is connected Declaration public bool deviceIsConnected { get; } Property Value Type Description System.Boolean lastActive If the action was active (ActionSet active and binding active) during the last update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding If the action's binding was active during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding lastActiveOrigin The handle to the origin of the component that was used to update the value for this action (for the previous update) Declaration public override ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.lastActiveOrigin lastAngularVelocity The angular velocity for this pose during the previous update Declaration public Vector3 lastAngularVelocity { get; protected set; } Property Value Type Description UnityEngine.Vector3 lastChanged The value of the action's 'changed' during the previous update Declaration public override bool lastChanged { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.lastChanged lastDeviceIsConnected True if the device bound to this action was connected during the previous update Declaration public bool lastDeviceIsConnected { get; } Property Value Type Description System.Boolean lastLocalPosition The local position for this pose during the previous update Declaration public Vector3 lastLocalPosition { get; protected set; } Property Value Type Description UnityEngine.Vector3 lastLocalRotation The local rotation for this pose during the previous update Declaration public Quaternion lastLocalRotation { get; protected set; } Property Value Type Description UnityEngine.Quaternion lastPoseIsValid True if the pose was valid during the previous update Declaration public bool lastPoseIsValid { get; } Property Value Type Description System.Boolean lastTrackingState The tracking state for this pose during the previous update Declaration public ETrackingResult lastTrackingState { get; } Property Value Type Description ETrackingResult lastVelocity The velocity for this pose during the previous update Declaration public Vector3 lastVelocity { get; protected set; } Property Value Type Description UnityEngine.Vector3 localPosition The local position of this action relative to the universe origin Declaration public Vector3 localPosition { get; protected set; } Property Value Type Description UnityEngine.Vector3 localRotation The local rotation of this action relative to the universe origin Declaration public Quaternion localRotation { get; protected set; } Property Value Type Description UnityEngine.Quaternion poseIsValid True if the pose retrieved for this action and input source is valid (good data from the tracking source) Declaration public bool poseIsValid { get; } Property Value Type Description System.Boolean trackingState The state of the tracking system that is used to create pose data (position, rotation, etc) Declaration public ETrackingResult trackingState { get; } Property Value Type Description ETrackingResult velocity The local velocity of this pose relative to the universe origin Declaration public Vector3 velocity { get; protected set; } Property Value Type Description UnityEngine.Vector3 Methods CheckAndSendEvents() Declaration protected virtual void CheckAndSendEvents() GetChanged() Declaration protected bool GetChanged() Returns Type Description System.Boolean GetPoseAtTimeOffset(Single, out Vector3, out Quaternion, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetPoseAtTimeOffset(float secondsFromNow, out Vector3 positionAtTime, out Quaternion rotationAtTime, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime) Parameters Type Name Description System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 positionAtTime UnityEngine.Quaternion rotationAtTime UnityEngine.Vector3 velocityAtTime UnityEngine.Vector3 angularVelocityAtTime Returns Type Description System.Boolean true if we successfully returned a pose GetUnityCoordinateAngularVelocity(Single, Single, Single) Declaration protected Vector3 GetUnityCoordinateAngularVelocity(float x, float y, float z) Parameters Type Name Description System.Single x System.Single y System.Single z Returns Type Description UnityEngine.Vector3 GetUnityCoordinateAngularVelocity(HmdVector3_t) Declaration protected Vector3 GetUnityCoordinateAngularVelocity(HmdVector3_t vector) Parameters Type Name Description HmdVector3_t vector Returns Type Description UnityEngine.Vector3 GetUnityCoordinateVelocity(Single, Single, Single) Declaration protected Vector3 GetUnityCoordinateVelocity(float x, float y, float z) Parameters Type Name Description System.Single x System.Single y System.Single z Returns Type Description UnityEngine.Vector3 GetUnityCoordinateVelocity(HmdVector3_t) Declaration protected Vector3 GetUnityCoordinateVelocity(HmdVector3_t vector) Parameters Type Name Description HmdVector3_t vector Returns Type Description UnityEngine.Vector3 GetVelocitiesAtTimeOffset(Single, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetVelocitiesAtTimeOffset(float secondsFromNow, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime) Parameters Type Name Description System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 velocityAtTime UnityEngine.Vector3 angularVelocityAtTime Returns Type Description System.Boolean true if we successfully returned a pose Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the pose action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_In_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) SetCacheVariables() Declaration protected void SetCacheVariables() UpdateTransform(Transform) Update a transform's local position and local roation to match the pose. Declaration public void UpdateTransform(Transform transformToUpdate) Parameters Type Name Description UnityEngine.Transform transformToUpdate The transform of the object to be updated UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_In_Source.UpdateValue() UpdateValue(Boolean) [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public virtual void UpdateValue(bool skipStateAndEventUpdates) Parameters Type Name Description System.Boolean skipStateAndEventUpdates Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Pose.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Pose.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Pose.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Pose.ActiveChangeHandler onChange Event fires when the orientation of the pose changes more than the changeTolerance Declaration public event SteamVR_Action_Pose.ChangeHandler onChange Event Type Type Description SteamVR_Action_Pose.ChangeHandler onDeviceConnectedChanged Event fires when the device bound to this action is connected or disconnected Declaration public event SteamVR_Action_Pose.DeviceConnectedChangeHandler onDeviceConnectedChanged Event Type Type Description SteamVR_Action_Pose.DeviceConnectedChangeHandler onTrackingChanged Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes Declaration public event SteamVR_Action_Pose.TrackingChangeHandler onTrackingChanged Event Type Type Description SteamVR_Action_Pose.TrackingChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Pose.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Pose.UpdateHandler onValidPoseChanged Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) Declaration public event SteamVR_Action_Pose.ValidPoseChangeHandler onValidPoseChanged Event Type Type Description SteamVR_Action_Pose.ValidPoseChangeHandler Implements ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Pose_Base-2.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose_Base-2.html",
    "title": "Class SteamVR_Action_Pose_Base<SourceMap, SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Pose_Base<SourceMap, SourceElement> Inheritance System.Object SteamVR_Action SteamVR_Action <SourceMap, SourceElement> SteamVR_Action_In <SourceMap, SourceElement> SteamVR_Action_Pose_Base<SourceMap, SourceElement> SteamVR_Action_Pose SteamVR_Action_Skeleton Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In<SourceMap, SourceElement>.changed SteamVR_Action_In<SourceMap, SourceElement>.lastChanged SteamVR_Action_In<SourceMap, SourceElement>.changedTime SteamVR_Action_In<SourceMap, SourceElement>.updateTime SteamVR_Action_In<SourceMap, SourceElement>.activeOrigin SteamVR_Action_In<SourceMap, SourceElement>.lastActiveOrigin SteamVR_Action_In<SourceMap, SourceElement>.activeDevice SteamVR_Action_In<SourceMap, SourceElement>.trackedDeviceIndex SteamVR_Action_In<SourceMap, SourceElement>.renderModelComponentName SteamVR_Action_In<SourceMap, SourceElement>.localizedOriginName SteamVR_Action_In<SourceMap, SourceElement>.UpdateValues() SteamVR_Action_In<SourceMap, SourceElement>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SourceMap, SourceElement>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SourceMap, SourceElement>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.sourceMap SteamVR_Action<SourceMap, SourceElement>.Item[SteamVR_Input_Sources] SteamVR_Action<SourceMap, SourceElement>.fullPath SteamVR_Action<SourceMap, SourceElement>.handle SteamVR_Action<SourceMap, SourceElement>.actionSet SteamVR_Action<SourceMap, SourceElement>.direction SteamVR_Action<SourceMap, SourceElement>.active SteamVR_Action<SourceMap, SourceElement>.lastActive SteamVR_Action<SourceMap, SourceElement>.activeBinding SteamVR_Action<SourceMap, SourceElement>.lastActiveBinding SteamVR_Action<SourceMap, SourceElement>.initialized SteamVR_Action<SourceMap, SourceElement>.PreInitialize(String) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, Boolean) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SourceMap, SourceElement>.TryNeedsInitData() SteamVR_Action<SourceMap, SourceElement>.Initialize(Boolean, Boolean) SteamVR_Action<SourceMap, SourceElement>.GetSourceMap() SteamVR_Action<SourceMap, SourceElement>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SourceMap, SourceElement>.InitAfterDeserialize() SteamVR_Action<SourceMap, SourceElement>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public abstract class SteamVR_Action_Pose_Base<SourceMap, SourceElement> : SteamVR_Action_In<SourceMap, SourceElement>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Pose, ISteamVR_Action_In_Source, ISteamVR_Action_Source where SourceMap : SteamVR_Action_Pose_Source_Map<SourceElement>, new() where SourceElement : SteamVR_Action_Pose_Source, new() Type Parameters Name Description SourceMap SourceElement Constructors SteamVR_Action_Pose_Base() Declaration public SteamVR_Action_Pose_Base() Properties angularVelocity [Shortcut to: SteamVR_Input_Sources.Any] The local angular velocity of this pose relative to the universe origin Declaration public Vector3 angularVelocity { get; } Property Value Type Description UnityEngine.Vector3 deviceIsConnected [Shortcut to: SteamVR_Input_Sources.Any] True if the device bound to this action and input source is connected Declaration public bool deviceIsConnected { get; } Property Value Type Description System.Boolean lastAngularVelocity [Shortcut to: SteamVR_Input_Sources.Any] The angular velocity for this pose during the previous update Declaration public Vector3 lastAngularVelocity { get; } Property Value Type Description UnityEngine.Vector3 lastDeviceIsConnected [Shortcut to: SteamVR_Input_Sources.Any] True if the device bound to this action was connected during the previous update Declaration public bool lastDeviceIsConnected { get; } Property Value Type Description System.Boolean lastLocalPosition [Shortcut to: SteamVR_Input_Sources.Any] The local position for this pose during the previous update Declaration public Vector3 lastLocalPosition { get; } Property Value Type Description UnityEngine.Vector3 lastLocalRotation [Shortcut to: SteamVR_Input_Sources.Any] The local rotation for this pose during the previous update Declaration public Quaternion lastLocalRotation { get; } Property Value Type Description UnityEngine.Quaternion lastPoseIsValid [Shortcut to: SteamVR_Input_Sources.Any] True if the pose was valid during the previous update Declaration public bool lastPoseIsValid { get; } Property Value Type Description System.Boolean lastTrackingState [Shortcut to: SteamVR_Input_Sources.Any] The tracking state for this pose during the previous update Declaration public ETrackingResult lastTrackingState { get; } Property Value Type Description ETrackingResult lastVelocity [Shortcut to: SteamVR_Input_Sources.Any] The velocity for this pose during the previous update Declaration public Vector3 lastVelocity { get; } Property Value Type Description UnityEngine.Vector3 localPosition [Shortcut to: SteamVR_Input_Sources.Any] The local position of this action relative to the universe origin Declaration public Vector3 localPosition { get; } Property Value Type Description UnityEngine.Vector3 localRotation [Shortcut to: SteamVR_Input_Sources.Any] The local rotation of this action relative to the universe origin Declaration public Quaternion localRotation { get; } Property Value Type Description UnityEngine.Quaternion poseIsValid [Shortcut to: SteamVR_Input_Sources.Any] True if the pose retrieved for this action and input source is valid (good data from the tracking source) Declaration public bool poseIsValid { get; } Property Value Type Description System.Boolean trackingState [Shortcut to: SteamVR_Input_Sources.Any] The state of the tracking system that is used to create pose data (position, rotation, etc) Declaration public ETrackingResult trackingState { get; } Property Value Type Description ETrackingResult velocity [Shortcut to: SteamVR_Input_Sources.Any] The local velocity of this pose relative to the universe origin Declaration public Vector3 velocity { get; } Property Value Type Description UnityEngine.Vector3 Methods GetAngularVelocity(SteamVR_Input_Sources) The local angular velocity of this pose relative to the universe origin Declaration public Vector3 GetAngularVelocity(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetDeviceIsConnected(SteamVR_Input_Sources) True if the device bound to this action and input source is connected Declaration public bool GetDeviceIsConnected(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastAngularVelocity(SteamVR_Input_Sources) The angular velocity for this pose during the previous update Declaration public Vector3 GetLastAngularVelocity(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLastDeviceIsConnected(SteamVR_Input_Sources) True if the device bound to this action was connected during the previous update Declaration public bool GetLastDeviceIsConnected(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastLocalPosition(SteamVR_Input_Sources) The local position for this pose during the previous update Declaration public Vector3 GetLastLocalPosition(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLastLocalRotation(SteamVR_Input_Sources) The local rotation for this pose during the previous update Declaration public Quaternion GetLastLocalRotation(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Quaternion GetLastPoseIsValid(SteamVR_Input_Sources) True if the pose was valid during the previous update Declaration public bool GetLastPoseIsValid(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetLastTrackingResult(SteamVR_Input_Sources) The tracking state for this pose during the previous update Declaration public ETrackingResult GetLastTrackingResult(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description ETrackingResult GetLastVelocity(SteamVR_Input_Sources) The velocity for this pose during the previous update Declaration public Vector3 GetLastVelocity(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLocalPosition(SteamVR_Input_Sources) The local position of this action relative to the universe origin Declaration public Vector3 GetLocalPosition(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLocalRotation(SteamVR_Input_Sources) The local rotation of this action relative to the universe origin Declaration public Quaternion GetLocalRotation(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Quaternion GetPoseAtTimeOffset(SteamVR_Input_Sources, Single, out Vector3, out Quaternion, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetPoseAtTimeOffset(SteamVR_Input_Sources inputSource, float secondsFromNow, out Vector3 localPosition, out Quaternion localRotation, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 localPosition UnityEngine.Quaternion localRotation UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity Returns Type Description System.Boolean true if the call succeeded GetPoseIsValid(SteamVR_Input_Sources) True if the pose retrieved for this action and input source is valid (good data from the tracking source) Declaration public bool GetPoseIsValid(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetTrackingResult(SteamVR_Input_Sources) The state of the tracking system that is used to create pose data (position, rotation, etc) Declaration public ETrackingResult GetTrackingResult(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description ETrackingResult GetVelocitiesAtTimeOffset(SteamVR_Input_Sources, Single, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetVelocitiesAtTimeOffset(SteamVR_Input_Sources inputSource, float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity Returns Type Description System.Boolean true if the call succeeded GetVelocity(SteamVR_Input_Sources) The local velocity of this pose relative to the universe origin Declaration public Vector3 GetVelocity(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 SetUniverseOrigin(ETrackingUniverseOrigin) Sets all pose (and skeleton) actions to use the specified universe origin. Declaration protected static void SetUniverseOrigin(ETrackingUniverseOrigin newOrigin) Parameters Type Name Description ETrackingUniverseOrigin newOrigin UpdateTransform(SteamVR_Input_Sources, Transform) Update a transform's local position and local roation to match the pose from the most recent update Declaration public virtual void UpdateTransform(SteamVR_Input_Sources inputSource, Transform transformToUpdate) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. UnityEngine.Transform transformToUpdate The transform of the object to be updated UpdateValues(Boolean) [Should not be called by user code] Updates the data for all the input sources the system has detected need to be updated. Declaration public virtual void UpdateValues(bool skipStateAndEventUpdates) Parameters Type Name Description System.Boolean skipStateAndEventUpdates Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Pose.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.html",
    "title": "Class SteamVR_Action_Pose | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Pose Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Pose_Source_Map < SteamVR_Action_Pose_Source >, SteamVR_Action_Pose_Source > SteamVR_Action_In < SteamVR_Action_Pose_Source_Map < SteamVR_Action_Pose_Source >, SteamVR_Action_Pose_Source > SteamVR_Action_Pose_Base < SteamVR_Action_Pose_Source_Map < SteamVR_Action_Pose_Source >, SteamVR_Action_Pose_Source > SteamVR_Action_Pose Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.SetUniverseOrigin(ETrackingUniverseOrigin) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.localPosition SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.localRotation SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.trackingState SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.velocity SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.angularVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.poseIsValid SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.deviceIsConnected SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastLocalPosition SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastLocalRotation SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastTrackingState SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastAngularVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastPoseIsValid SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastDeviceIsConnected SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.UpdateValues(Boolean) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetVelocitiesAtTimeOffset(SteamVR_Input_Sources, Single, Vector3, Vector3) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetPoseAtTimeOffset(SteamVR_Input_Sources, Single, Vector3, Quaternion, Vector3, Vector3) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.UpdateTransform(SteamVR_Input_Sources, Transform) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLocalPosition(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLocalRotation(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetAngularVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetDeviceIsConnected(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetPoseIsValid(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetTrackingResult(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastLocalPosition(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastLocalRotation(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastAngularVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastDeviceIsConnected(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastPoseIsValid(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastTrackingResult(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.changed SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.sourceMap SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.fullPath SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.handle SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.actionSet SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.direction SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.active SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastActive SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.activeBinding SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.initialized SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Pose : SteamVR_Action_Pose_Base<SteamVR_Action_Pose_Source_Map<SteamVR_Action_Pose_Source>, SteamVR_Action_Pose_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Pose, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Methods AddOnActiveChangeListener(SteamVR_Input_Sources, SteamVR_Action_Pose.ActiveChangeHandler) Executes a function when this action's bound state changes Declaration public void AddOnActiveChangeListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ActiveChangeHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.ActiveChangeHandler functionToCall AddOnChangeListener(SteamVR_Input_Sources, SteamVR_Action_Pose.ChangeHandler) Executes a function when the state of this action (with the specified inputSource) changes Declaration public void AddOnChangeListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ChangeHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value AddOnDeviceConnectedChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.DeviceConnectedChangeHandler) Fires an event when a device is connected or disconnected. Declaration public void AddOnDeviceConnectedChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.DeviceConnectedChangeHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to add an event to. Any if the action is not device specific. SteamVR_Action_Pose.DeviceConnectedChangeHandler functionToCall The method you would like to be called when a device is connected. Should take a SteamVR_Action_Pose as a param AddOnTrackingChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.TrackingChangeHandler) Fires an event when the tracking of the device has changed Declaration public void AddOnTrackingChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.TrackingChangeHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to add an event to. Any if the action is not device specific. SteamVR_Action_Pose.TrackingChangeHandler functionToCall The method you would like to be called when tracking has changed. Should take a SteamVR_Action_Pose as a param AddOnUpdateListener(SteamVR_Input_Sources, SteamVR_Action_Pose.UpdateHandler) Executes a function when the state of this action (with the specified inputSource) is updated. Declaration public void AddOnUpdateListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.UpdateHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value AddOnValidPoseChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.ValidPoseChangeHandler) Fires an event when the device now has a valid pose or no longer has a valid pose Declaration public void AddOnValidPoseChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ValidPoseChangeHandler functionToCall) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to add an event to. Any if the action is not device specific. SteamVR_Action_Pose.ValidPoseChangeHandler functionToCall The method you would like to be called when the pose has become valid or invalid. Should take a SteamVR_Action_Pose as a param RemoveOnActiveChangeListener(SteamVR_Input_Sources, SteamVR_Action_Pose.ActiveChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveChangeListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ActiveChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events RemoveOnChangeListener(SteamVR_Input_Sources, SteamVR_Action_Pose.ChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events RemoveOnDeviceConnectedChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.DeviceConnectedChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnDeviceConnectedChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.DeviceConnectedChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to remove an event from. Any if the action is not device specific. SteamVR_Action_Pose.DeviceConnectedChangeHandler functionToStopCalling The method you would like to stop calling when a device is connected. Should take a SteamVR_Action_Pose as a param RemoveOnTrackingChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.TrackingChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnTrackingChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.TrackingChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to remove an event from. Any if the action is not device specific. SteamVR_Action_Pose.TrackingChangeHandler functionToStopCalling The method you would like to stop calling when tracking has changed. Should take a SteamVR_Action_Pose as a param RemoveOnUpdateListener(SteamVR_Input_Sources, SteamVR_Action_Pose.UpdateHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.UpdateHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. SteamVR_Action_Pose.UpdateHandler functionToStopCalling The local function that you've setup to receive update events RemoveOnValidPoseChanged(SteamVR_Input_Sources, SteamVR_Action_Pose.ValidPoseChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnValidPoseChanged(SteamVR_Input_Sources inputSource, SteamVR_Action_Pose.ValidPoseChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to remove an event from. Any if the action is not device specific. SteamVR_Action_Pose.ValidPoseChangeHandler functionToStopCalling The method you would like to stop calling when the pose has become valid or invalid. Should take a SteamVR_Action_Pose as a param SetTrackingUniverseOrigin(ETrackingUniverseOrigin) Sets all pose and skeleton actions to use the specified universe origin. Declaration public static void SetTrackingUniverseOrigin(ETrackingUniverseOrigin newOrigin) Parameters Type Name Description ETrackingUniverseOrigin newOrigin Events onActiveBindingChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Pose.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Pose.ActiveChangeHandler onActiveChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Pose.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Pose.ActiveChangeHandler onChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the orientation of the pose changes more than the changeTolerance Declaration public event SteamVR_Action_Pose.ChangeHandler onChange Event Type Type Description SteamVR_Action_Pose.ChangeHandler onDeviceConnectedChanged [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the device bound to this pose is connected or disconnected Declaration public event SteamVR_Action_Pose.DeviceConnectedChangeHandler onDeviceConnectedChanged Event Type Type Description SteamVR_Action_Pose.DeviceConnectedChangeHandler onTrackingChanged [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the state of the tracking has changed Declaration public event SteamVR_Action_Pose.TrackingChangeHandler onTrackingChanged Event Type Type Description SteamVR_Action_Pose.TrackingChangeHandler onUpdate [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the action is updated Declaration public event SteamVR_Action_Pose.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Pose.UpdateHandler onValidPoseChanged [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the validity of the pose has changed Declaration public event SteamVR_Action_Pose.ValidPoseChangeHandler onValidPoseChanged Event Type Type Description SteamVR_Action_Pose.ValidPoseChangeHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Pose.ValidPoseChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.ValidPoseChangeHandler.html",
    "title": "Delegate SteamVR_Action_Pose.ValidPoseChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.ValidPoseChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ValidPoseChangeHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource, bool validPose); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean validPose"
  },
  "api/Valve.VR.RenderModel_TextureMap_t_Packed.html": {
    "href": "api/Valve.VR.RenderModel_TextureMap_t_Packed.html",
    "title": "Struct RenderModel_TextureMap_t_Packed | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_TextureMap_t_Packed Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_TextureMap_t_Packed Constructors RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t) Declaration public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked) Parameters Type Name Description RenderModel_TextureMap_t unpacked Fields rubTextureMapData Declaration public IntPtr rubTextureMapData Field Value Type Description System.IntPtr unHeight Declaration public ushort unHeight Field Value Type Description System.UInt16 unWidth Declaration public ushort unWidth Field Value Type Description System.UInt16 Methods Unpack(ref RenderModel_TextureMap_t) Declaration public void Unpack(ref RenderModel_TextureMap_t unpacked) Parameters Type Name Description RenderModel_TextureMap_t unpacked"
  },
  "api/Valve.VR.RenderModel_TextureMap_t.html": {
    "href": "api/Valve.VR.RenderModel_TextureMap_t.html",
    "title": "Struct RenderModel_TextureMap_t | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_TextureMap_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_TextureMap_t Fields rubTextureMapData Declaration public IntPtr rubTextureMapData Field Value Type Description System.IntPtr unHeight Declaration public ushort unHeight Field Value Type Description System.UInt16 unWidth Declaration public ushort unWidth Field Value Type Description System.UInt16"
  },
  "api/Valve.VR.IVRScreenshots.html": {
    "href": "api/Valve.VR.IVRScreenshots.html",
    "title": "Struct IVRScreenshots | SteamVR Unity Plugin",
    "keywords": "Struct IVRScreenshots Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRScreenshots"
  },
  "api/Valve.VR.IVRResources.html": {
    "href": "api/Valve.VR.IVRResources.html",
    "title": "Struct IVRResources | SteamVR Unity Plugin",
    "keywords": "Struct IVRResources Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRResources"
  },
  "api/Valve.VR.ISteamVR_Action.html": {
    "href": "api/Valve.VR.ISteamVR_Action.html",
    "title": "Interface ISteamVR_Action | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action Inherited Members ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action : ISteamVR_Action_Source Methods GetActive(SteamVR_Input_Sources) Returns the active state of the action for the specified Input Source Declaration bool GetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The input source to check Returns Type Description System.Boolean GetShortName() Returns the name of the action without the action set or direction Declaration string GetShortName() Returns Type Description System.String"
  },
  "api/Valve.VR.IntersectionMaskRectangle_t.html": {
    "href": "api/Valve.VR.IntersectionMaskRectangle_t.html",
    "title": "Struct IntersectionMaskRectangle_t | SteamVR Unity Plugin",
    "keywords": "Struct IntersectionMaskRectangle_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IntersectionMaskRectangle_t Fields m_flHeight Declaration public float m_flHeight Field Value Type Description System.Single m_flTopLeftX Declaration public float m_flTopLeftX Field Value Type Description System.Single m_flTopLeftY Declaration public float m_flTopLeftY Field Value Type Description System.Single m_flWidth Declaration public float m_flWidth Field Value Type Description System.Single"
  },
  "api/Valve.VR.IntersectionMaskCircle_t.html": {
    "href": "api/Valve.VR.IntersectionMaskCircle_t.html",
    "title": "Struct IntersectionMaskCircle_t | SteamVR Unity Plugin",
    "keywords": "Struct IntersectionMaskCircle_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IntersectionMaskCircle_t Fields m_flCenterX Declaration public float m_flCenterX Field Value Type Description System.Single m_flCenterY Declaration public float m_flCenterY Field Value Type Description System.Single m_flRadius Declaration public float m_flRadius Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.html": {
    "href": "api/Valve.VR.InteractionSystem.html",
    "title": "Namespace Valve.VR.InteractionSystem | SteamVR Unity Plugin",
    "keywords": "Namespace Valve.VR.InteractionSystem Classes AfterTimer_Component AllowTeleportWhileAttachedToHand ArcheryTarget Arrow ArrowHand ArrowheadRotation Balloon BalloonColliders BalloonHapticBump BalloonSpawner BodyCollider ChaperoneInfo CircularDrive ComplexThrowable ControllerButtonHints ControllerHoverHighlight CustomEvents CustomEvents.UnityEventHand CustomEvents.UnityEventSingleFloat DebugUI DestroyOnDetachedFromHand DestroyOnParticleSystemDeath DestroyOnTriggerEnter DistanceHaptics DontDestroyOnLoad EnumFlags EnumFlagsPropertyDrawer Equippable ExplosionWobble FallbackCameraController FireSource Hand HandEditor HandEvent HapticRack HideOnHandFocusLost HoverButton IgnoreHovering IgnoreTeleportTrace InputModule Interactable InteractableDebug InteractableHoverEvents ItemPackage ItemPackageReference ItemPackageSpawner LinearAnimation LinearAnimator LinearAudioPitch LinearBlendshape LinearDisplacement LinearDrive LinearMapping Longbow ModalThrowable Player PlaySound RenderModel SeeThru SleepOnAwake SoundBowClick SoundDeparent SoundPlayOneshot SpawnAndAttachAfterControllerIsTracking SpawnAndAttachToHand Teleport TeleportArc TeleportArea TeleportAreaEditor TeleportMarkerBase TeleportPoint TeleportPointEditor Throwable UIElement UIElementEditor Unparent Util VelocityEstimator Structs Hand.AttachedObject Enums Balloon.BalloonColor CircularDrive.Axis_t ComplexThrowable.AttachMode GrabTypes Hand.AttachmentFlags ItemPackage.ItemPackageType Longbow.Handedness ReleaseStyle TeleportPoint.TeleportPointType WhichHand Delegates Interactable.OnAttachedToHandDelegate Interactable.OnDetachedFromHandDelegate"
  },
  "api/Valve.VR.InteractionSystem.ItemPackageSpawner.html": {
    "href": "api/Valve.VR.InteractionSystem.ItemPackageSpawner.html",
    "title": "Class ItemPackageSpawner | SteamVR Unity Plugin",
    "keywords": "Class ItemPackageSpawner Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ItemPackageSpawner Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class ItemPackageSpawner : MonoBehaviour Fields _itemPackage Declaration public ItemPackage _itemPackage Field Value Type Description ItemPackage acceptDifferentItems Declaration public bool acceptDifferentItems Field Value Type Description System.Boolean attachmentFlags Declaration [EnumFlags] public Hand.AttachmentFlags attachmentFlags Field Value Type Description Hand.AttachmentFlags dropEvent Declaration public UnityEvent dropEvent Field Value Type Description UnityEngine.Events.UnityEvent justPickedUpItem Declaration public bool justPickedUpItem Field Value Type Description System.Boolean pickupEvent Declaration public UnityEvent pickupEvent Field Value Type Description UnityEngine.Events.UnityEvent requireGrabActionToTake Declaration public bool requireGrabActionToTake Field Value Type Description System.Boolean requireReleaseActionToReturn Declaration public bool requireReleaseActionToReturn Field Value Type Description System.Boolean showTriggerHint Declaration public bool showTriggerHint Field Value Type Description System.Boolean takeBackItem Declaration public bool takeBackItem Field Value Type Description System.Boolean Properties itemPackage Declaration public ItemPackage itemPackage { get; set; } Property Value Type Description ItemPackage"
  },
  "api/Valve.VR.InteractionSystem.ItemPackageReference.html": {
    "href": "api/Valve.VR.InteractionSystem.ItemPackageReference.html",
    "title": "Class ItemPackageReference | SteamVR Unity Plugin",
    "keywords": "Class ItemPackageReference Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ItemPackageReference Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ItemPackageReference : MonoBehaviour Fields itemPackage Declaration public ItemPackage itemPackage Field Value Type Description ItemPackage"
  },
  "api/Valve.VR.SteamVR_Action_Vector2_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2_Source.html",
    "title": "Class SteamVR_Action_Vector2_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector2_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Vector2_Source Implements ISteamVR_Action_Vector2 ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vector2_Source : SteamVR_Action_In_Source, ISteamVR_Action_Vector2, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields actionData Declaration protected InputAnalogActionData_t actionData Field Value Type Description InputAnalogActionData_t actionData_size Declaration protected static uint actionData_size Field Value Type Description System.UInt32 changeTolerance The amount the axis needs to change before a change is detected Declaration public float changeTolerance Field Value Type Description System.Single lastActionData Declaration protected InputAnalogActionData_t lastActionData Field Value Type Description InputAnalogActionData_t vector2Action Declaration protected SteamVR_Action_Vector2 vector2Action Field Value Type Description SteamVR_Action_Vector2 Properties active Returns true if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding activeOrigin The handle to the origin of the component that was used to update the value for this action Declaration public override ulong activeOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.activeOrigin axis The current Vector2 value of the action. Note: Will only return non-zero if the action is also active. Declaration public Vector2 axis { get; protected set; } Property Value Type Description UnityEngine.Vector2 changed If the Vector2 value of this action has changed more than the changeTolerance since the last update Declaration public override bool changed { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.changed delta The Vector2 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector2 delta { get; protected set; } Property Value Type Description UnityEngine.Vector2 lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding Returns true if the action was bound during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding lastActiveOrigin The handle to the origin of the component that was used to update the value for this action (for the previous update) Declaration public override ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.lastActiveOrigin lastAxis The Vector2 value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector2 lastAxis { get; protected set; } Property Value Type Description UnityEngine.Vector2 lastChanged If the Vector2 value of this action has changed more than the changeTolerance between the previous update and the update before that Declaration public override bool lastChanged { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.lastChanged lastDelta The Vector2 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public Vector2 lastDelta { get; protected set; } Property Value Type Description UnityEngine.Vector2 Methods Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_In_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_In_Source.UpdateValue() Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Vector2.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vector2.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Vector2.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vector2.ActiveChangeHandler onAxis Event fires when the value of the action is non-zero Declaration public event SteamVR_Action_Vector2.AxisHandler onAxis Event Type Type Description SteamVR_Action_Vector2.AxisHandler onChange This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Vector2.ChangeHandler onChange Event Type Type Description SteamVR_Action_Vector2.ChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Vector2.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Vector2.UpdateHandler Implements ISteamVR_Action_Vector2 ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Vector2.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2.html",
    "title": "Class SteamVR_Action_Vector2 | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector2 Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Vector2_Source_Map , SteamVR_Action_Vector2_Source > SteamVR_Action_In < SteamVR_Action_Vector2_Source_Map , SteamVR_Action_Vector2_Source > SteamVR_Action_Vector2 Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Vector2 ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.changed SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.sourceMap SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.fullPath SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.handle SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.actionSet SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.direction SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.active SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.lastActive SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.activeBinding SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.initialized SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Vector2 : SteamVR_Action_In<SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Vector2, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Vector2() Declaration public SteamVR_Action_Vector2() Properties axis [Shortcut to: SteamVR_Input_Sources.Any] The current Vector2 value of the action. Note: Will only return non-zero if the action is also active. Declaration public Vector2 axis { get; } Property Value Type Description UnityEngine.Vector2 delta [Shortcut to: SteamVR_Input_Sources.Any] The Vector2 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector2 delta { get; } Property Value Type Description UnityEngine.Vector2 lastAxis [Shortcut to: SteamVR_Input_Sources.Any] The Vector2 value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector2 lastAxis { get; } Property Value Type Description UnityEngine.Vector2 lastDelta [Shortcut to: SteamVR_Input_Sources.Any] The Vector2 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public Vector2 lastDelta { get; } Property Value Type Description UnityEngine.Vector2 Methods AddOnActiveBindingChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound Declaration public void AddOnActiveBindingChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnActiveChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void AddOnActiveChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnAxisListener(SteamVR_Action_Vector2.AxisHandler, SteamVR_Input_Sources) Executes a function when the Vector2 value of the action is non-zero. Declaration public void AddOnAxisListener(SteamVR_Action_Vector2.AxisHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.AxisHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnChangeListener(SteamVR_Action_Vector2.ChangeHandler, SteamVR_Input_Sources) Executes a function when the axis changes by more than the specified changeTolerance Declaration public void AddOnChangeListener(SteamVR_Action_Vector2.ChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnUpdateListener(SteamVR_Action_Vector2.UpdateHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) is updated. Declaration public void AddOnUpdateListener(SteamVR_Action_Vector2.UpdateHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. GetAxis(SteamVR_Input_Sources) The current Vector2 value of the action Declaration public Vector2 GetAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector2 GetAxisDelta(SteamVR_Input_Sources) The Vector2 value difference between this update and the previous update. Declaration public Vector2 GetAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector2 GetLastAxis(SteamVR_Input_Sources) The Vector2 value of the action from the previous update. Declaration public Vector2 GetLastAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector2 GetLastAxisDelta(SteamVR_Input_Sources) The Vector2 value difference between the previous update and update before that. Declaration public Vector2 GetLastAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector2 RemoveOnActiveBindingChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveBindingChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnActiveChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Vector2.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnAxisListener(SteamVR_Action_Vector2.AxisHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnAxisListener(SteamVR_Action_Vector2.AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.AxisHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnChangeListener(SteamVR_Action_Vector2.ChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Action_Vector2.ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnUpdateListener(SteamVR_Action_Vector2.UpdateHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Action_Vector2.UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector2.UpdateHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Events onActiveBindingChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Vector2.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vector2.ActiveChangeHandler onActiveChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Vector2.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vector2.ActiveChangeHandler onAxis [Shortcut to: SteamVR_Input_Sources.Any] This event will fire whenever the Vector2 value of the action is non-zero Declaration public event SteamVR_Action_Vector2.AxisHandler onAxis Event Type Type Description SteamVR_Action_Vector2.AxisHandler onChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Vector2.ChangeHandler onChange Event Type Type Description SteamVR_Action_Vector2.ChangeHandler onUpdate [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the action is updated Declaration public event SteamVR_Action_Vector2.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Vector2.UpdateHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Vector2 ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Pose.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Pose.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Action_Pose.TrackingChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.TrackingChangeHandler.html",
    "title": "Delegate SteamVR_Action_Pose.TrackingChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.TrackingChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void TrackingChangeHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource, ETrackingResult trackingState); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource ETrackingResult trackingState"
  },
  "api/Valve.VR.SteamVR_Action_Pose.DeviceConnectedChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.DeviceConnectedChangeHandler.html",
    "title": "Delegate SteamVR_Action_Pose.DeviceConnectedChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.DeviceConnectedChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void DeviceConnectedChangeHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource, bool deviceConnected); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean deviceConnected"
  },
  "api/Valve.VR.SteamVR_Action_Pose.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Pose.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SpatialAnchorPose_t.html": {
    "href": "api/Valve.VR.SpatialAnchorPose_t.html",
    "title": "Struct SpatialAnchorPose_t | SteamVR Unity Plugin",
    "keywords": "Struct SpatialAnchorPose_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct SpatialAnchorPose_t Fields mAnchorToAbsoluteTracking Declaration public HmdMatrix34_t mAnchorToAbsoluteTracking Field Value Type Description HmdMatrix34_t"
  },
  "api/Valve.VR.SkeletalMotionRangeChange.html": {
    "href": "api/Valve.VR.SkeletalMotionRangeChange.html",
    "title": "Enum SkeletalMotionRangeChange | SteamVR Unity Plugin",
    "keywords": "Enum SkeletalMotionRangeChange The change in range of the motion of the bones in the skeleton. Options are \"With Controller\" as if your hand is holding your VR controller. Or \"Without Controller\" as if your hand is empty. Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SkeletalMotionRangeChange Fields Name Description None WithController Estimation of bones in hand while holding a controller WithoutController Estimation of bones in hand while hand is empty (allowing full fist)"
  },
  "api/Valve.VR.SteamVR_Behaviour_SkeletonEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_SkeletonEvent.html",
    "title": "Class SteamVR_Behaviour_SkeletonEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_SkeletonEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Skeleton , SteamVR_Input_Sources > SteamVR_Behaviour_SkeletonEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources>.Invoke(Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_SkeletonEvent : UnityEvent<SteamVR_Behaviour_Skeleton, SteamVR_Input_Sources>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_SkeletonCustom.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_SkeletonCustom.html",
    "title": "Class SteamVR_Behaviour_SkeletonCustom | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_SkeletonCustom The major difference between this component and the standard SteamVR_Behaviour_Skeleton is this one lets you only use the joints you care about. You can set the transforms you're concerned with and ignore the ones you're not. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Skeleton SteamVR_Behaviour_SkeletonCustom Inherited Members SteamVR_Behaviour_Skeleton.skeletonAction SteamVR_Behaviour_Skeleton.inputSource SteamVR_Behaviour_Skeleton.rangeOfMotion SteamVR_Behaviour_Skeleton.skeletonRoot SteamVR_Behaviour_Skeleton.origin SteamVR_Behaviour_Skeleton.updatePose SteamVR_Behaviour_Skeleton.onlySetRotations SteamVR_Behaviour_Skeleton.skeletonBlend SteamVR_Behaviour_Skeleton.onBoneTransformsUpdated SteamVR_Behaviour_Skeleton.onTransformUpdated SteamVR_Behaviour_Skeleton.onTransformChanged SteamVR_Behaviour_Skeleton.onConnectedChanged SteamVR_Behaviour_Skeleton.onTrackingChanged SteamVR_Behaviour_Skeleton.onBoneTransformsUpdatedEvent SteamVR_Behaviour_Skeleton.onTransformUpdatedEvent SteamVR_Behaviour_Skeleton.onTransformChangedEvent SteamVR_Behaviour_Skeleton.onConnectedChangedEvent SteamVR_Behaviour_Skeleton.onTrackingChangedEvent SteamVR_Behaviour_Skeleton.blendPoser SteamVR_Behaviour_Skeleton.blendSnapshot SteamVR_Behaviour_Skeleton.mirroring SteamVR_Behaviour_Skeleton.isActive SteamVR_Behaviour_Skeleton.fingerCurls SteamVR_Behaviour_Skeleton.thumbCurl SteamVR_Behaviour_Skeleton.indexCurl SteamVR_Behaviour_Skeleton.middleCurl SteamVR_Behaviour_Skeleton.ringCurl SteamVR_Behaviour_Skeleton.pinkyCurl SteamVR_Behaviour_Skeleton.root SteamVR_Behaviour_Skeleton.wrist SteamVR_Behaviour_Skeleton.indexMetacarpal SteamVR_Behaviour_Skeleton.indexProximal SteamVR_Behaviour_Skeleton.indexMiddle SteamVR_Behaviour_Skeleton.indexDistal SteamVR_Behaviour_Skeleton.indexTip SteamVR_Behaviour_Skeleton.middleMetacarpal SteamVR_Behaviour_Skeleton.middleProximal SteamVR_Behaviour_Skeleton.middleMiddle SteamVR_Behaviour_Skeleton.middleDistal SteamVR_Behaviour_Skeleton.middleTip SteamVR_Behaviour_Skeleton.pinkyMetacarpal SteamVR_Behaviour_Skeleton.pinkyProximal SteamVR_Behaviour_Skeleton.pinkyMiddle SteamVR_Behaviour_Skeleton.pinkyDistal SteamVR_Behaviour_Skeleton.pinkyTip SteamVR_Behaviour_Skeleton.ringMetacarpal SteamVR_Behaviour_Skeleton.ringProximal SteamVR_Behaviour_Skeleton.ringMiddle SteamVR_Behaviour_Skeleton.ringDistal SteamVR_Behaviour_Skeleton.ringTip SteamVR_Behaviour_Skeleton.thumbMetacarpal SteamVR_Behaviour_Skeleton.thumbProximal SteamVR_Behaviour_Skeleton.thumbMiddle SteamVR_Behaviour_Skeleton.thumbDistal SteamVR_Behaviour_Skeleton.thumbTip SteamVR_Behaviour_Skeleton.thumbAux SteamVR_Behaviour_Skeleton.indexAux SteamVR_Behaviour_Skeleton.middleAux SteamVR_Behaviour_Skeleton.ringAux SteamVR_Behaviour_Skeleton.pinkyAux SteamVR_Behaviour_Skeleton.proximals SteamVR_Behaviour_Skeleton.middles SteamVR_Behaviour_Skeleton.distals SteamVR_Behaviour_Skeleton.tips SteamVR_Behaviour_Skeleton.auxs SteamVR_Behaviour_Skeleton.blendRoutine SteamVR_Behaviour_Skeleton.rangeOfMotionBlendRoutine SteamVR_Behaviour_Skeleton.attachRoutine SteamVR_Behaviour_Skeleton.bones SteamVR_Behaviour_Skeleton.temporaryRangeOfMotion SteamVR_Behaviour_Skeleton.skeletalTrackingLevel SteamVR_Behaviour_Skeleton.isBlending SteamVR_Behaviour_Skeleton.predictedSecondsFromNow SteamVR_Behaviour_Skeleton.actionSet SteamVR_Behaviour_Skeleton.direction SteamVR_Behaviour_Skeleton.Awake() SteamVR_Behaviour_Skeleton.CheckSkeletonAction() SteamVR_Behaviour_Skeleton.OnEnable() SteamVR_Behaviour_Skeleton.OnDisable() SteamVR_Behaviour_Skeleton.SteamVR_Input_OnSkeletonsUpdated(Boolean) SteamVR_Behaviour_Skeleton.UpdateSkeleton() SteamVR_Behaviour_Skeleton.SetTemporaryRangeOfMotion(EVRSkeletalMotionRange, Single) SteamVR_Behaviour_Skeleton.ResetTemporaryRangeOfMotion(Single) SteamVR_Behaviour_Skeleton.SetRangeOfMotion(EVRSkeletalMotionRange, Single) SteamVR_Behaviour_Skeleton.BlendToSkeleton(Single) SteamVR_Behaviour_Skeleton.BlendToPoser(SteamVR_Skeleton_Poser, Single) SteamVR_Behaviour_Skeleton.BlendToAnimation(Single) SteamVR_Behaviour_Skeleton.BlendTo(Single, Single) SteamVR_Behaviour_Skeleton.DoBlendRoutine(Single, Single) SteamVR_Behaviour_Skeleton.RangeOfMotionBlend(EVRSkeletalMotionRange, Single) SteamVR_Behaviour_Skeleton.TemporaryRangeOfMotionBlend(EVRSkeletalMotionRange, Single) SteamVR_Behaviour_Skeleton.ResetTemporaryRangeOfMotionBlend(Single) SteamVR_Behaviour_Skeleton.DoRangeOfMotionBlend(EVRSkeletalMotionRange, EVRSkeletalMotionRange, Single) SteamVR_Behaviour_Skeleton.GetBlendPoseForBone(Int32, Quaternion) SteamVR_Behaviour_Skeleton.UpdateSkeletonTransforms() SteamVR_Behaviour_Skeleton.SetBonePosition(Int32, Vector3) SteamVR_Behaviour_Skeleton.SetBoneRotation(Int32, Quaternion) SteamVR_Behaviour_Skeleton.GetBone(Int32) SteamVR_Behaviour_Skeleton.GetBonePosition(Int32, Boolean) SteamVR_Behaviour_Skeleton.GetBoneRotation(Int32, Boolean) SteamVR_Behaviour_Skeleton.GetBonePositions() SteamVR_Behaviour_Skeleton.rightFlipAngle SteamVR_Behaviour_Skeleton.GetBoneRotations() SteamVR_Behaviour_Skeleton.UpdatePose() SteamVR_Behaviour_Skeleton.ForceToReferencePose(EVRSkeletalReferencePose) SteamVR_Behaviour_Skeleton.IsMetacarpal(Int32) UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_SkeletonCustom : SteamVR_Behaviour_Skeleton Fields _indexAux Declaration [SerializeField] protected Transform _indexAux Field Value Type Description UnityEngine.Transform _indexDistal Declaration [SerializeField] protected Transform _indexDistal Field Value Type Description UnityEngine.Transform _indexMetacarpal Declaration [SerializeField] protected Transform _indexMetacarpal Field Value Type Description UnityEngine.Transform _indexMiddle Declaration [SerializeField] protected Transform _indexMiddle Field Value Type Description UnityEngine.Transform _indexProximal Declaration [SerializeField] protected Transform _indexProximal Field Value Type Description UnityEngine.Transform _indexTip Declaration [SerializeField] protected Transform _indexTip Field Value Type Description UnityEngine.Transform _middleAux Declaration [SerializeField] protected Transform _middleAux Field Value Type Description UnityEngine.Transform _middleDistal Declaration [SerializeField] protected Transform _middleDistal Field Value Type Description UnityEngine.Transform _middleMetacarpal Declaration [SerializeField] protected Transform _middleMetacarpal Field Value Type Description UnityEngine.Transform _middleMiddle Declaration [SerializeField] protected Transform _middleMiddle Field Value Type Description UnityEngine.Transform _middleProximal Declaration [SerializeField] protected Transform _middleProximal Field Value Type Description UnityEngine.Transform _middleTip Declaration [SerializeField] protected Transform _middleTip Field Value Type Description UnityEngine.Transform _pinkyAux Declaration [SerializeField] protected Transform _pinkyAux Field Value Type Description UnityEngine.Transform _pinkyDistal Declaration [SerializeField] protected Transform _pinkyDistal Field Value Type Description UnityEngine.Transform _pinkyMetacarpal Declaration [SerializeField] protected Transform _pinkyMetacarpal Field Value Type Description UnityEngine.Transform _pinkyMiddle Declaration [SerializeField] protected Transform _pinkyMiddle Field Value Type Description UnityEngine.Transform _pinkyProximal Declaration [SerializeField] protected Transform _pinkyProximal Field Value Type Description UnityEngine.Transform _pinkyTip Declaration [SerializeField] protected Transform _pinkyTip Field Value Type Description UnityEngine.Transform _ringAux Declaration [SerializeField] protected Transform _ringAux Field Value Type Description UnityEngine.Transform _ringDistal Declaration [SerializeField] protected Transform _ringDistal Field Value Type Description UnityEngine.Transform _ringMetacarpal Declaration [SerializeField] protected Transform _ringMetacarpal Field Value Type Description UnityEngine.Transform _ringMiddle Declaration [SerializeField] protected Transform _ringMiddle Field Value Type Description UnityEngine.Transform _ringProximal Declaration [SerializeField] protected Transform _ringProximal Field Value Type Description UnityEngine.Transform _ringTip Declaration [SerializeField] protected Transform _ringTip Field Value Type Description UnityEngine.Transform _thumbAux Declaration [SerializeField] protected Transform _thumbAux Field Value Type Description UnityEngine.Transform _thumbDistal Declaration [SerializeField] protected Transform _thumbDistal Field Value Type Description UnityEngine.Transform _thumbMetacarpal Declaration [SerializeField] protected Transform _thumbMetacarpal Field Value Type Description UnityEngine.Transform _thumbMiddle Declaration [SerializeField] protected Transform _thumbMiddle Field Value Type Description UnityEngine.Transform _thumbProximal Declaration [SerializeField] protected Transform _thumbProximal Field Value Type Description UnityEngine.Transform _thumbTip Declaration [SerializeField] protected Transform _thumbTip Field Value Type Description UnityEngine.Transform _wrist Declaration [SerializeField] protected Transform _wrist Field Value Type Description UnityEngine.Transform Methods AssignBonesArray() Declaration protected override void AssignBonesArray() Overrides SteamVR_Behaviour_Skeleton.AssignBonesArray()"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.html",
    "title": "Class SteamVR_Behaviour_Skeleton | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Skeleton Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Skeleton SteamVR_Behaviour_SkeletonCustom Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Skeleton : MonoBehaviour Fields attachRoutine Declaration protected Coroutine attachRoutine Field Value Type Description UnityEngine.Coroutine blendPoser Declaration protected SteamVR_Skeleton_Poser blendPoser Field Value Type Description SteamVR_Skeleton_Poser blendRoutine Declaration protected Coroutine blendRoutine Field Value Type Description UnityEngine.Coroutine blendSnapshot Declaration protected SteamVR_Skeleton_PoseSnapshot blendSnapshot Field Value Type Description SteamVR_Skeleton_PoseSnapshot bones Declaration protected Transform[] bones Field Value Type Description UnityEngine.Transform [] inputSource The device this action should apply to. Any if the action is not device specific. Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources mirroring Can be set to mirror the bone data across the x axis Declaration [Tooltip(\"Is this rendermodel a mirror of another one?\")] public SteamVR_Behaviour_Skeleton.MirrorType mirroring Field Value Type Description SteamVR_Behaviour_Skeleton.MirrorType onBoneTransformsUpdated This Unity event will fire whenever the position or rotation of the bones are updated. Declaration public SteamVR_Behaviour_SkeletonEvent onBoneTransformsUpdated Field Value Type Description SteamVR_Behaviour_SkeletonEvent onBoneTransformsUpdatedEvent This C# event will fire whenever the position or rotation of this transform is updated. Declaration public SteamVR_Behaviour_Skeleton.UpdateHandler onBoneTransformsUpdatedEvent Field Value Type Description SteamVR_Behaviour_Skeleton.UpdateHandler onConnectedChanged This Unity event will fire whenever the device is connected or disconnected Declaration public SteamVR_Behaviour_Skeleton_ConnectedChangedEvent onConnectedChanged Field Value Type Description SteamVR_Behaviour_Skeleton_ConnectedChangedEvent onConnectedChangedEvent This C# event will fire whenever the device is connected or disconnected Declaration public SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler onConnectedChangedEvent Field Value Type Description SteamVR_Behaviour_Skeleton.DeviceConnectedChangeHandler onlySetRotations Check this to not set the positions of the bones. This is helpful for differently scaled skeletons. Declaration [Tooltip(\"Check this to not set the positions of the bones. This is helpful for differently scaled skeletons.\")] public bool onlySetRotations Field Value Type Description System.Boolean onTrackingChanged This Unity event will fire whenever the device's tracking state changes Declaration public SteamVR_Behaviour_Skeleton_TrackingChangedEvent onTrackingChanged Field Value Type Description SteamVR_Behaviour_Skeleton_TrackingChangedEvent onTrackingChangedEvent This C# event will fire whenever the device's tracking state changes Declaration public SteamVR_Behaviour_Skeleton.TrackingChangeHandler onTrackingChangedEvent Field Value Type Description SteamVR_Behaviour_Skeleton.TrackingChangeHandler onTransformChanged This Unity event will fire whenever the position or rotation of this transform is changed. Declaration public SteamVR_Behaviour_SkeletonEvent onTransformChanged Field Value Type Description SteamVR_Behaviour_SkeletonEvent onTransformChangedEvent This C# event will fire whenever the position or rotation of this transform is changed. Declaration public SteamVR_Behaviour_Skeleton.ChangeHandler onTransformChangedEvent Field Value Type Description SteamVR_Behaviour_Skeleton.ChangeHandler onTransformUpdated This Unity event will fire whenever the position or rotation of this transform is updated. Declaration public SteamVR_Behaviour_SkeletonEvent onTransformUpdated Field Value Type Description SteamVR_Behaviour_SkeletonEvent onTransformUpdatedEvent This C# event will fire whenever the position or rotation of this transform is updated. Declaration public SteamVR_Behaviour_Skeleton.UpdateHandler onTransformUpdatedEvent Field Value Type Description SteamVR_Behaviour_Skeleton.UpdateHandler origin The transform this transform should be relative to Declaration [Tooltip(\"If not set, relative to parent\")] public Transform origin Field Value Type Description UnityEngine.Transform rangeOfMotion The range of motion you'd like the hand to move in. With controller is the best estimate of the fingers wrapped around a controller. Without is from a flat hand to a fist. Declaration [Tooltip(\"The range of motion you'd like the hand to move in. With controller is the best estimate of the fingers wrapped around a controller. Without is from a flat hand to a fist.\")] public EVRSkeletalMotionRange rangeOfMotion Field Value Type Description EVRSkeletalMotionRange rangeOfMotionBlendRoutine Declaration protected Coroutine rangeOfMotionBlendRoutine Field Value Type Description UnityEngine.Coroutine rightFlipAngle Declaration protected Quaternion rightFlipAngle Field Value Type Description UnityEngine.Quaternion skeletonAction Declaration [Tooltip(\"If not set, will try to auto assign this based on 'Skeleton' + inputSource\")] public SteamVR_Action_Skeleton skeletonAction Field Value Type Description SteamVR_Action_Skeleton skeletonBlend How much of a blend to apply to the transform positions and rotations. Set to 0 for the transform orientation to be set by an animation. Set to 1 for the transform orientation to be set by the skeleton action. Declaration [Range(0F, 1F)] [Tooltip(\"Modify this to blend between animations setup on the hand\")] public float skeletonBlend Field Value Type Description System.Single skeletonRoot The root Transform of the skeleton. Needs to have a child (wrist) then wrist should have children in the order thumb, index, middle, ring, pinky Declaration [Tooltip(\"This needs to be in the order of: root -> wrist -> thumb, index, middle, ring, pinky\")] public Transform skeletonRoot Field Value Type Description UnityEngine.Transform temporaryRangeOfMotion The range of motion that is set temporarily (call ResetTemporaryRangeOfMotion to reset to rangeOfMotion) Declaration protected EVRSkeletalMotionRange? temporaryRangeOfMotion Field Value Type Description System.Nullable < EVRSkeletalMotionRange > updatePose Whether or not to update this transform's position and rotation inline with the skeleton transforms or if this is handled in another script Declaration [Tooltip(\"Set to true if you want this script to update its position and rotation. False if this will be handled elsewhere\")] public bool updatePose Field Value Type Description System.Boolean Properties actionSet Declaration public SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet auxs An array of all the finger aux transforms Declaration public Transform[] auxs { get; protected set; } Property Value Type Description UnityEngine.Transform [] direction Declaration public SteamVR_ActionDirections direction { get; } Property Value Type Description SteamVR_ActionDirections distals An array of all the finger distal joint transforms Declaration public Transform[] distals { get; protected set; } Property Value Type Description UnityEngine.Transform [] fingerCurls An array of five 0-1 values representing how curled a finger is. 0 being straight, 1 being fully curled. Index 0 being thumb, index 4 being pinky Declaration public float[] fingerCurls { get; } Property Value Type Description System.Single [] indexAux Declaration public Transform indexAux { get; } Property Value Type Description UnityEngine.Transform indexCurl An 0-1 value representing how curled a finger is. 0 being straight, 1 being fully curled. Declaration public float indexCurl { get; } Property Value Type Description System.Single indexDistal Declaration public Transform indexDistal { get; } Property Value Type Description UnityEngine.Transform indexMetacarpal Declaration public Transform indexMetacarpal { get; } Property Value Type Description UnityEngine.Transform indexMiddle Declaration public Transform indexMiddle { get; } Property Value Type Description UnityEngine.Transform indexProximal Declaration public Transform indexProximal { get; } Property Value Type Description UnityEngine.Transform indexTip Declaration public Transform indexTip { get; } Property Value Type Description UnityEngine.Transform isActive Returns whether this action is bound and the action set is active Declaration public bool isActive { get; } Property Value Type Description System.Boolean isBlending Returns true if we are in the process of blending the skeletonBlend field (between animation and bone data) Declaration public bool isBlending { get; } Property Value Type Description System.Boolean middleAux Declaration public Transform middleAux { get; } Property Value Type Description UnityEngine.Transform middleCurl An 0-1 value representing how curled a finger is. 0 being straight, 1 being fully curled. Declaration public float middleCurl { get; } Property Value Type Description System.Single middleDistal Declaration public Transform middleDistal { get; } Property Value Type Description UnityEngine.Transform middleMetacarpal Declaration public Transform middleMetacarpal { get; } Property Value Type Description UnityEngine.Transform middleMiddle Declaration public Transform middleMiddle { get; } Property Value Type Description UnityEngine.Transform middleProximal Declaration public Transform middleProximal { get; } Property Value Type Description UnityEngine.Transform middles An array of all the finger middle joint transforms Declaration public Transform[] middles { get; protected set; } Property Value Type Description UnityEngine.Transform [] middleTip Declaration public Transform middleTip { get; } Property Value Type Description UnityEngine.Transform pinkyAux Declaration public Transform pinkyAux { get; } Property Value Type Description UnityEngine.Transform pinkyCurl An 0-1 value representing how curled a finger is. 0 being straight, 1 being fully curled. Declaration public float pinkyCurl { get; } Property Value Type Description System.Single pinkyDistal Declaration public Transform pinkyDistal { get; } Property Value Type Description UnityEngine.Transform pinkyMetacarpal Declaration public Transform pinkyMetacarpal { get; } Property Value Type Description UnityEngine.Transform pinkyMiddle Declaration public Transform pinkyMiddle { get; } Property Value Type Description UnityEngine.Transform pinkyProximal Declaration public Transform pinkyProximal { get; } Property Value Type Description UnityEngine.Transform pinkyTip Declaration public Transform pinkyTip { get; } Property Value Type Description UnityEngine.Transform predictedSecondsFromNow Declaration public float predictedSecondsFromNow { get; set; } Property Value Type Description System.Single proximals An array of all the finger proximal joint transforms Declaration public Transform[] proximals { get; protected set; } Property Value Type Description UnityEngine.Transform [] ringAux Declaration public Transform ringAux { get; } Property Value Type Description UnityEngine.Transform ringCurl An 0-1 value representing how curled a finger is. 0 being straight, 1 being fully curled. Declaration public float ringCurl { get; } Property Value Type Description System.Single ringDistal Declaration public Transform ringDistal { get; } Property Value Type Description UnityEngine.Transform ringMetacarpal Declaration public Transform ringMetacarpal { get; } Property Value Type Description UnityEngine.Transform ringMiddle Declaration public Transform ringMiddle { get; } Property Value Type Description UnityEngine.Transform ringProximal Declaration public Transform ringProximal { get; } Property Value Type Description UnityEngine.Transform ringTip Declaration public Transform ringTip { get; } Property Value Type Description UnityEngine.Transform root Declaration public Transform root { get; } Property Value Type Description UnityEngine.Transform skeletalTrackingLevel Get the accuracy level of the skeletal tracking data. * Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. * Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl * Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. Declaration public EVRSkeletalTrackingLevel skeletalTrackingLevel { get; } Property Value Type Description EVRSkeletalTrackingLevel thumbAux Declaration public Transform thumbAux { get; } Property Value Type Description UnityEngine.Transform thumbCurl An 0-1 value representing how curled a finger is. 0 being straight, 1 being fully curled. Declaration public float thumbCurl { get; } Property Value Type Description System.Single thumbDistal Declaration public Transform thumbDistal { get; } Property Value Type Description UnityEngine.Transform thumbMetacarpal Declaration public Transform thumbMetacarpal { get; } Property Value Type Description UnityEngine.Transform thumbMiddle Declaration public Transform thumbMiddle { get; } Property Value Type Description UnityEngine.Transform thumbProximal Declaration public Transform thumbProximal { get; } Property Value Type Description UnityEngine.Transform thumbTip Declaration public Transform thumbTip { get; } Property Value Type Description UnityEngine.Transform tips An array of all the finger tip transforms Declaration public Transform[] tips { get; protected set; } Property Value Type Description UnityEngine.Transform [] wrist Declaration public Transform wrist { get; } Property Value Type Description UnityEngine.Transform Methods AssignBonesArray() Declaration protected virtual void AssignBonesArray() Awake() Declaration protected virtual void Awake() BlendTo(Single, Single) Blend from the current skeletonBlend amount to a specified new amount. Declaration public void BlendTo(float blendToAmount, float overTime) Parameters Type Name Description System.Single blendToAmount The amount of blend you want to apply. 0 being fully set by animations, 1 being fully set by bone data from the action. System.Single overTime How long you want the blend to take (in seconds) BlendToAnimation(Single) Blend from the current skeletonBlend amount to full animation data (no bone data. skeletonBlend = 0) Declaration public void BlendToAnimation(float overTime = 0.1F) Parameters Type Name Description System.Single overTime How long you want the blend to take (in seconds) BlendToPoser(SteamVR_Skeleton_Poser, Single) Blend from the current skeletonBlend amount to pose animation. (skeletonBlend = 0) Note: This will ignore the root position and rotation of the pose. Declaration public void BlendToPoser(SteamVR_Skeleton_Poser poser, float overTime = 0.1F) Parameters Type Name Description SteamVR_Skeleton_Poser poser System.Single overTime How long you want the blend to take (in seconds) BlendToSkeleton(Single) Blend from the current skeletonBlend amount to full bone data. (skeletonBlend = 1) Declaration public void BlendToSkeleton(float overTime = 0.1F) Parameters Type Name Description System.Single overTime How long you want the blend to take (in seconds) CheckSkeletonAction() Declaration protected virtual void CheckSkeletonAction() DoBlendRoutine(Single, Single) Declaration protected IEnumerator DoBlendRoutine(float blendToAmount, float overTime) Parameters Type Name Description System.Single blendToAmount System.Single overTime Returns Type Description System.Collections.IEnumerator DoRangeOfMotionBlend(EVRSkeletalMotionRange, EVRSkeletalMotionRange, Single) Declaration protected IEnumerator DoRangeOfMotionBlend(EVRSkeletalMotionRange oldRangeOfMotion, EVRSkeletalMotionRange newRangeOfMotion, float overTime) Parameters Type Name Description EVRSkeletalMotionRange oldRangeOfMotion EVRSkeletalMotionRange newRangeOfMotion System.Single overTime Returns Type Description System.Collections.IEnumerator ForceToReferencePose(EVRSkeletalReferencePose) Returns an array of positions/rotations that represent the state of each bone in a reference pose. Declaration public void ForceToReferencePose(EVRSkeletalReferencePose referencePose) Parameters Type Name Description EVRSkeletalReferencePose referencePose Which reference pose to return GetBlendPoseForBone(Int32, Quaternion) Declaration protected virtual Quaternion GetBlendPoseForBone(int boneIndex, Quaternion skeletonRotation) Parameters Type Name Description System.Int32 boneIndex UnityEngine.Quaternion skeletonRotation Returns Type Description UnityEngine.Quaternion GetBone(Int32) Gets the transform for a bone by the joint index. Joint indexes specified in: SteamVR_Skeleton_JointIndexes Declaration public virtual Transform GetBone(int joint) Parameters Type Name Description System.Int32 joint The joint index of the bone. Specified in SteamVR_Skeleton_JointIndexes Returns Type Description UnityEngine.Transform GetBonePosition(Int32, Boolean) Gets the position of the transform for a bone by the joint index. Joint indexes specified in: SteamVR_Skeleton_JointIndexes Declaration public Vector3 GetBonePosition(int joint, bool local = false) Parameters Type Name Description System.Int32 joint The joint index of the bone. Specified in SteamVR_Skeleton_JointIndexes System.Boolean local true to get the localspace position for the joint (position relative to this joint's parent) Returns Type Description UnityEngine.Vector3 GetBonePositions() Declaration protected Vector3[] GetBonePositions() Returns Type Description UnityEngine.Vector3 [] GetBoneRotation(Int32, Boolean) Gets the rotation of the transform for a bone by the joint index. Joint indexes specified in: SteamVR_Skeleton_JointIndexes Declaration public Quaternion GetBoneRotation(int joint, bool local = false) Parameters Type Name Description System.Int32 joint The joint index of the bone. Specified in SteamVR_Skeleton_JointIndexes System.Boolean local true to get the localspace rotation for the joint (rotation relative to this joint's parent) Returns Type Description UnityEngine.Quaternion GetBoneRotations() Declaration protected Quaternion[] GetBoneRotations() Returns Type Description UnityEngine.Quaternion [] IsMetacarpal(Int32) Declaration protected bool IsMetacarpal(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description System.Boolean OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RangeOfMotionBlend(EVRSkeletalMotionRange, Single) Declaration protected void RangeOfMotionBlend(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion System.Single blendOverSeconds ResetTemporaryRangeOfMotion(Single) Resets the previously set temporary range of motion. Will return to the range of motion defined by the rangeOfMotion field. Declaration public void ResetTemporaryRangeOfMotion(float blendOverSeconds = 0.1F) Parameters Type Name Description System.Single blendOverSeconds How long you want the blend to the standard range of motion to take (in seconds) ResetTemporaryRangeOfMotionBlend(Single) Declaration protected void ResetTemporaryRangeOfMotionBlend(float blendOverSeconds) Parameters Type Name Description System.Single blendOverSeconds SetBonePosition(Int32, Vector3) Declaration protected virtual void SetBonePosition(int boneIndex, Vector3 localPosition) Parameters Type Name Description System.Int32 boneIndex UnityEngine.Vector3 localPosition SetBoneRotation(Int32, Quaternion) Declaration protected virtual void SetBoneRotation(int boneIndex, Quaternion localRotation) Parameters Type Name Description System.Int32 boneIndex UnityEngine.Quaternion localRotation SetRangeOfMotion(EVRSkeletalMotionRange, Single) Permanently sets the range of motion for this component. Declaration public void SetRangeOfMotion(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds = 0.1F) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion The new range of motion to be set. WithController being the best estimation of where fingers are wrapped around the controller (pressing buttons, etc). WithoutController being a range between a flat hand and a fist. System.Single blendOverSeconds How long you want the blend to the new range of motion to take (in seconds) SetTemporaryRangeOfMotion(EVRSkeletalMotionRange, Single) Sets a temporary range of motion for this action that can easily be reset (using ResetTemporaryRangeOfMotion). This is useful for short range of motion changes, for example picking up a controller shaped object Declaration public void SetTemporaryRangeOfMotion(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds = 0.1F) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion The new range of motion you want to apply (temporarily) System.Single blendOverSeconds How long you want the blend to the new range of motion to take (in seconds) SteamVR_Input_OnSkeletonsUpdated(Boolean) Declaration protected virtual void SteamVR_Input_OnSkeletonsUpdated(bool skipSendingEvents) Parameters Type Name Description System.Boolean skipSendingEvents TemporaryRangeOfMotionBlend(EVRSkeletalMotionRange, Single) Declaration protected void TemporaryRangeOfMotionBlend(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion System.Single blendOverSeconds UpdatePose() Declaration protected virtual void UpdatePose() UpdateSkeleton() Declaration protected virtual void UpdateSkeleton() UpdateSkeletonTransforms() Declaration protected virtual void UpdateSkeletonTransforms()"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.ValidPoseChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.ValidPoseChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.ValidPoseChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.ValidPoseChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ValidPoseChangeHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource, bool validPose); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource System.Boolean validPose"
  },
  "api/Valve.VR.EVRInputError.html": {
    "href": "api/Valve.VR.EVRInputError.html",
    "title": "Enum EVRInputError | SteamVR Unity Plugin",
    "keywords": "Enum EVRInputError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRInputError Fields Name Description BufferTooSmall InvalidBoneCount InvalidBoneIndex InvalidCompressedData InvalidDevice InvalidHandle InvalidParam InvalidSkeleton IPCError MaxCapacityReached MismatchedActionManifest MissingSkeletonData NameNotFound NoActiveActionSet NoData None NoSteam WrongType"
  },
  "api/Valve.VR.VREvent_ProgressUpdate_t.html": {
    "href": "api/Valve.VR.VREvent_ProgressUpdate_t.html",
    "title": "Struct VREvent_ProgressUpdate_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_ProgressUpdate_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_ProgressUpdate_t Fields fProgress Declaration public float fProgress Field Value Type Description System.Single pathDevice Declaration public ulong pathDevice Field Value Type Description System.UInt64 pathIcon Declaration public ulong pathIcon Field Value Type Description System.UInt64 pathInputSource Declaration public ulong pathInputSource Field Value Type Description System.UInt64 pathProgressAction Declaration public ulong pathProgressAction Field Value Type Description System.UInt64 ulApplicationPropertyContainer Declaration public ulong ulApplicationPropertyContainer Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_Process_t.html": {
    "href": "api/Valve.VR.VREvent_Process_t.html",
    "title": "Struct VREvent_Process_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Process_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Process_t Fields bConnectionLost Declaration public bool bConnectionLost Field Value Type Description System.Boolean bForced Declaration public bool bForced Field Value Type Description System.Boolean oldPid Declaration public uint oldPid Field Value Type Description System.UInt32 pid Declaration public uint pid Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Behaviour.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour.html",
    "title": "Class SteamVR_Behaviour | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour : MonoBehaviour Fields doNotDestroy Declaration public bool doNotDestroy Field Value Type Description System.Boolean forcingInitialization Declaration public static bool forcingInitialization Field Value Type Description System.Boolean initializeSteamVROnAwake Declaration public bool initializeSteamVROnAwake Field Value Type Description System.Boolean lastFrameCount Declaration protected static int lastFrameCount Field Value Type Description System.Int32 steamvr_render Declaration [HideInInspector] public SteamVR_Render steamvr_render Field Value Type Description SteamVR_Render Properties instance Declaration public static SteamVR_Behaviour instance { get; } Property Value Type Description SteamVR_Behaviour Methods Awake() Declaration protected void Awake() FixedUpdate() Declaration protected void FixedUpdate() Initialize(Boolean) Declaration public static void Initialize(bool forceUnityVRToOpenVR = false) Parameters Type Name Description System.Boolean forceUnityVRToOpenVR InitializeSteamVR(Boolean) Declaration public void InitializeSteamVR(bool forceUnityVRToOpenVR = false) Parameters Type Name Description System.Boolean forceUnityVRToOpenVR LateUpdate() Declaration protected void LateUpdate() OnCameraPreCull(Camera) Declaration protected void OnCameraPreCull(Camera cam) Parameters Type Name Description UnityEngine.Camera cam OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() OnQuit(VREvent_t) Declaration protected void OnQuit(VREvent_t vrEvent) Parameters Type Name Description VREvent_t vrEvent PreCull() Declaration protected void PreCull() Update() Declaration protected void Update()"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Skeleton fromAction); Parameters Type Name Description SteamVR_Action_Skeleton fromAction"
  },
  "api/Valve.VR.EVRInitError.html": {
    "href": "api/Valve.VR.EVRInitError.html",
    "title": "Enum EVRInitError | SteamVR Unity Plugin",
    "keywords": "Enum EVRInitError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRInitError Fields Name Description Compositor_CreateAlphaBlendState Compositor_CreateAnisoSamplerState Compositor_CreateBlendState Compositor_CreateBlendStateMaskB Compositor_CreateBlendStateMaskG Compositor_CreateBlendStateMaskR Compositor_CreateClampToBorderSamplerState Compositor_CreateComputeHmdPoseConstantBuffer Compositor_CreateComputeResolveRenderTextures Compositor_CreateConstantBuffer Compositor_CreateDepthStencilState Compositor_CreateDepthStencilStateNoDepth Compositor_CreateDepthStencilStateNoWrite Compositor_CreateDistortionSurfaces Compositor_CreateDriverDirectModeResolveTextures Compositor_CreateFallbackSyncTexture Compositor_CreateFlushTexture Compositor_CreateFontSamplerState Compositor_CreateFullscreenWindowFailed Compositor_CreateGeomConstantBuffer Compositor_CreateHmdPoseConstantBuffer Compositor_CreateHmdPoseStagingConstantBuffer Compositor_CreateLastFrameRenderTexture Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer Compositor_CreateLayerComputeTextureIndexConstantBuffer Compositor_CreateLayerGraphicsTextureIndexConstantBuffer Compositor_CreateMirrorTextures Compositor_CreateMSAARenderTextures Compositor_CreateNoBlendState Compositor_CreateOverlayConstantBuffer Compositor_CreateOverlayIndexBuffer Compositor_CreateOverlaySamplerState Compositor_CreateOverlayVertextBuffer Compositor_CreatePanelMaskConstantBuffer Compositor_CreatePanoramaSamplerState Compositor_CreatePixelSimUBO Compositor_CreateRasterizerState Compositor_CreateReadableSceneTextureIndexConstantBuffer Compositor_CreateResolveRenderTextures Compositor_CreateSamplerState Compositor_CreateSceneTextureIndexConstantBuffer Compositor_CreateSharedFrameInfoConstantBuffer Compositor_CreateTextIndexBuffer Compositor_CreateTextVertexBuffer Compositor_CreateWireframeRasterizerState Compositor_D3D11HardwareRequired Compositor_D3D11RendererInitializationFailed Compositor_DisplayFrequencyFailure Compositor_DistortInterfaceIsNull Compositor_DXGIFactoryCreateFailed Compositor_DXGIFactoryInterfaceIsNull Compositor_DXGIFactoryQueryFailed Compositor_Failed Compositor_FailedToCreateDirectModeDisplay Compositor_FailedToCreateDXGI2RenderTarget Compositor_FailedToCreateDXGI2SwapChain Compositor_FailedToCreateNvAPIRenderTargets Compositor_FailedToCreateRenderTarget Compositor_FailedToCreateSwapChain Compositor_FailedToFindDisplayMode Compositor_FailedToGetBackBuffer Compositor_FailedtoGetDXGI2BackBuffer Compositor_FailedToGetDXGIDeviceInterface Compositor_FailedToShowWindow Compositor_FirmwareRequiresUpdate Compositor_InvalidAdapterDesktop Compositor_InvalidDeviceProvided Compositor_InvalidHmdAttachment Compositor_InvalidHmdPropertyContainer Compositor_InvalidOutputDesktop Compositor_MessageOverlaySharedStateInitFailure Compositor_NotificationManagerIsNull Compositor_NvAPISetDisplayMode Compositor_OpenDriverDirectModeResolveTextures Compositor_OverlayInitFailed Compositor_PropertiesInterfaceIsNull Compositor_RendererInitializationFailed Compositor_ResourceManagerClientIsNull Compositor_ScreenshotsInitFailed Compositor_SelectDisplayMode Compositor_SettingsInterfaceIsNull Compositor_SharedStateIsNull Compositor_ShareFallbackSyncTexture Compositor_UnableToCreateDevice Compositor_UpdateDisplayFrequency Driver_CalibrationInvalid Driver_Failed Driver_HmdDisplayMirrored Driver_HmdDisplayNotFound Driver_HmdDriverIdOutOfBounds Driver_HmdInUse Driver_HmdUnknown Driver_NotCalibrated Driver_NotLoaded Driver_RuntimeOutOfDate Driver_TrackedDeviceInterfaceUnknown Driver_Unknown Init_AnotherAppLaunching Init_AppInfoInitFailed Init_FactoryNotFound Init_FileNotFound Init_FirmwareRecoveryBusy Init_FirmwareUpdateBusy Init_HmdDriverIdIsNone Init_HmdNotFound Init_HmdNotFoundPresenceFailed Init_InitCanceledByUser Init_InstallationCorrupt Init_InstallationNotFound Init_InterfaceNotFound Init_Internal Init_InvalidApplicationType Init_InvalidInterface Init_LowPowerWatchdogNotSupported Init_NoConfigPath Init_NoLogPath Init_NoServerForBackgroundApp Init_NotAvailableToUtilityApps Init_NotAvailableToWatchdogApps Init_NotInitialized Init_NotSupportedWithCompositor Init_PathRegistryNotFound Init_PathRegistryNotWritable Init_RebootingBusy Init_Retry Init_SettingsInitFailed Init_ShuttingDown Init_TooManyObjects Init_TrackerManagerInitFailed Init_USBServiceBusy Init_UserConfigDirectoryInvalid Init_VRClientDLLNotFound Init_VRDashboardNotFound Init_VRDashboardStartupFailed Init_VRHomeNotFound Init_VRHomeStartupFailed Init_VRMonitorNotFound Init_VRMonitorStartupFailed Init_VRWebHelperStartupFailed Init_WatchdogDisabledInSettings IPC_CompositorConnectFailed IPC_CompositorInitFailed IPC_CompositorInvalidConnectResponse IPC_ConnectFailed IPC_ConnectFailedAfterMultipleAttempts IPC_Failed IPC_MutexInitFailed IPC_ServerInitFailed IPC_SharedStateInitFailed None Steam_SteamInstallationNotFound Unknown VendorSpecific_HmdFound_CantOpenDevice VendorSpecific_HmdFound_CantReadFirmwareVersion VendorSpecific_HmdFound_ConfigFailedSanityCheck VendorSpecific_HmdFound_ConfigTooBig VendorSpecific_HmdFound_ConfigTooSmall VendorSpecific_HmdFound_NoStoredConfig VendorSpecific_HmdFound_UnableToGetUserDataNext VendorSpecific_HmdFound_UnableToGetUserDataStart VendorSpecific_HmdFound_UnableToInitZLib VendorSpecific_HmdFound_UnableToRequestConfigStart VendorSpecific_HmdFound_UnableToSendUserDataStart VendorSpecific_HmdFound_UserDataAddressRange VendorSpecific_HmdFound_UserDataError VendorSpecific_UnableToConnectToOculusRuntime VendorSpecific_WindowsNotInDevMode"
  },
  "api/Valve.VR.EGamepadTextInputLineMode.html": {
    "href": "api/Valve.VR.EGamepadTextInputLineMode.html",
    "title": "Enum EGamepadTextInputLineMode | SteamVR Unity Plugin",
    "keywords": "Enum EGamepadTextInputLineMode Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EGamepadTextInputLineMode Fields Name Description k_EGamepadTextInputLineModeMultipleLines k_EGamepadTextInputLineModeSingleLine"
  },
  "api/Valve.VR.InteractionSystem.IgnoreHovering.html": {
    "href": "api/Valve.VR.InteractionSystem.IgnoreHovering.html",
    "title": "Class IgnoreHovering | SteamVR Unity Plugin",
    "keywords": "Class IgnoreHovering Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour IgnoreHovering Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class IgnoreHovering : MonoBehaviour Fields onlyIgnoreHand Declaration [Tooltip(\"If Hand is not null, only ignore the specified hand\")] public Hand onlyIgnoreHand Field Value Type Description Hand"
  },
  "api/Valve.VR.InteractionSystem.DistanceHaptics.html": {
    "href": "api/Valve.VR.InteractionSystem.DistanceHaptics.html",
    "title": "Class DistanceHaptics | SteamVR Unity Plugin",
    "keywords": "Class DistanceHaptics Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DistanceHaptics Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class DistanceHaptics : MonoBehaviour Fields distanceIntensityCurve Declaration public AnimationCurve distanceIntensityCurve Field Value Type Description UnityEngine.AnimationCurve firstTransform Declaration public Transform firstTransform Field Value Type Description UnityEngine.Transform pulseIntervalCurve Declaration public AnimationCurve pulseIntervalCurve Field Value Type Description UnityEngine.AnimationCurve secondTransform Declaration public Transform secondTransform Field Value Type Description UnityEngine.Transform"
  },
  "api/Valve.VR.InteractionSystem.DestroyOnTriggerEnter.html": {
    "href": "api/Valve.VR.InteractionSystem.DestroyOnTriggerEnter.html",
    "title": "Class DestroyOnTriggerEnter | SteamVR Unity Plugin",
    "keywords": "Class DestroyOnTriggerEnter Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DestroyOnTriggerEnter Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class DestroyOnTriggerEnter : MonoBehaviour Fields tagFilter Declaration public string tagFilter Field Value Type Description System.String"
  },
  "api/Valve.VR.SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes.html",
    "title": "Enum SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skeleton_Poser.PoseBlendingBehaviour.BlenderTypes Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum BlenderTypes Fields Name Description AnalogAction BooleanAction Manual"
  },
  "api/Valve.VR.SteamVR_Skeleton_Pose.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Pose.html",
    "title": "Class SteamVR_Skeleton_Pose | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_Pose Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject SteamVR_Skeleton_Pose Inherited Members UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_Pose : ScriptableObject Fields leftHand Declaration public SteamVR_Skeleton_Pose_Hand leftHand Field Value Type Description SteamVR_Skeleton_Pose_Hand leftHandInputSource Declaration protected const int leftHandInputSource = 1 Field Value Type Description System.Int32 rightHand Declaration public SteamVR_Skeleton_Pose_Hand rightHand Field Value Type Description SteamVR_Skeleton_Pose_Hand rightHandInputSource Declaration protected const int rightHandInputSource = 2 Field Value Type Description System.Int32 Methods GetHand(Int32) Declaration public SteamVR_Skeleton_Pose_Hand GetHand(int hand) Parameters Type Name Description System.Int32 hand Returns Type Description SteamVR_Skeleton_Pose_Hand GetHand(SteamVR_Input_Sources) Declaration public SteamVR_Skeleton_Pose_Hand GetHand(SteamVR_Input_Sources hand) Parameters Type Name Description SteamVR_Input_Sources hand Returns Type Description SteamVR_Skeleton_Pose_Hand"
  },
  "api/Valve.VR.SteamVR_Input.html": {
    "href": "api/Valve.VR.SteamVR_Input.html",
    "title": "Class SteamVR_Input | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input Inheritance System.Object SteamVR_Input Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Input Fields actionFile The serialized version of the actions file we're currently using (only used in editor) Declaration public static SteamVR_Input_ActionFile actionFile Field Value Type Description Valve.VR.SteamVR_Input_ActionFile actionFileHash The hash of the current action file on disk Declaration public static string actionFileHash Field Value Type Description System.String actions An array of all actions (in all action sets) Declaration public static SteamVR_Action[] actions Field Value Type Description SteamVR_Action [] actionsBoolean An array of all the boolean actions Declaration public static SteamVR_Action_Boolean[] actionsBoolean Field Value Type Description SteamVR_Action_Boolean [] actionsByNameCache Declaration protected static Dictionary<string, SteamVR_Action> actionsByNameCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_Action > actionsByPath Declaration protected static Dictionary<string, SteamVR_Action> actionsByPath Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_Action > actionsByPathCache Declaration protected static Dictionary<string, SteamVR_Action> actionsByPathCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_Action > actionsByPathLowered Declaration protected static Dictionary<string, SteamVR_Action> actionsByPathLowered Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_Action > actionSets An array of all action sets Declaration public static SteamVR_ActionSet[] actionSets Field Value Type Description SteamVR_ActionSet [] actionSetsByNameCache Declaration protected static Dictionary<string, SteamVR_ActionSet> actionSetsByNameCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_ActionSet > actionSetsByPath Declaration protected static Dictionary<string, SteamVR_ActionSet> actionSetsByPath Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_ActionSet > actionSetsByPathCache Declaration protected static Dictionary<string, SteamVR_ActionSet> actionSetsByPathCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_ActionSet > actionSetsByPathLowered Declaration protected static Dictionary<string, SteamVR_ActionSet> actionSetsByPathLowered Field Value Type Description System.Collections.Generic.Dictionary < System.String , SteamVR_ActionSet > actionsFilePath Declaration public static string actionsFilePath Field Value Type Description System.String actionsIn An array of all input actions Declaration public static ISteamVR_Action_In[] actionsIn Field Value Type Description ISteamVR_Action_In [] actionsNonPoseNonSkeletonIn An array of all the input actions that are not pose or skeleton actions (boolean, single, vector2, vector3) Declaration public static ISteamVR_Action_In[] actionsNonPoseNonSkeletonIn Field Value Type Description ISteamVR_Action_In [] actionsOut An array of all output actions (haptic) Declaration public static ISteamVR_Action_Out[] actionsOut Field Value Type Description ISteamVR_Action_Out [] actionsPose An array of all the pose actions Declaration public static SteamVR_Action_Pose[] actionsPose Field Value Type Description SteamVR_Action_Pose [] actionsSingle An array of all the single actions Declaration public static SteamVR_Action_Single[] actionsSingle Field Value Type Description SteamVR_Action_Single [] actionsSkeleton An array of all the skeleton actions Declaration public static SteamVR_Action_Skeleton[] actionsSkeleton Field Value Type Description SteamVR_Action_Skeleton [] actionsVector2 An array of all the vector2 actions Declaration public static SteamVR_Action_Vector2[] actionsVector2 Field Value Type Description SteamVR_Action_Vector2 [] actionsVector3 An array of all the vector3 actions Declaration public static SteamVR_Action_Vector3[] actionsVector3 Field Value Type Description SteamVR_Action_Vector3 [] actionsVibration An array of all the vibration (haptic) actions Declaration public static SteamVR_Action_Vibration[] actionsVibration Field Value Type Description SteamVR_Action_Vibration [] defaultInputGameObjectName Declaration public const string defaultInputGameObjectName = \"[SteamVR Input]\" Field Value Type Description System.String fileInitialized True if the actions file has been initialized Declaration public static bool fileInitialized Field Value Type Description System.Boolean initialized True if the steamvr input system initialization process has completed successfully Declaration public static bool initialized Field Value Type Description System.Boolean initializing Declaration protected static bool initializing Field Value Type Description System.Boolean preInitialized True if the preinitialization process (setting up dictionaries, etc) has completed successfully Declaration public static bool preInitialized Field Value Type Description System.Boolean startupFrame Declaration protected static int startupFrame Field Value Type Description System.Int32 Properties isStartupFrame Declaration public static bool isStartupFrame { get; } Property Value Type Description System.Boolean Methods CreateEmptyActionsFile(Boolean) Declaration public static bool CreateEmptyActionsFile(bool completelyEmpty = false) Parameters Type Name Description System.Boolean completelyEmpty Returns Type Description System.Boolean DeleteManifestAndBindings() Deletes the action manifest file and all the default bindings it had listed in the default bindings section Declaration public static bool DeleteManifestAndBindings() Returns Type Description System.Boolean True if we deleted an action file, false if not. DoesActionsFileExist() Declaration public static bool DoesActionsFileExist() Returns Type Description System.Boolean FixedUpdate() Gets called by SteamVR_Behaviour every FixedUpdate and updates actions if the steamvr settings are configured to update then. Declaration public static void FixedUpdate() ForcePreinitialize() Declaration public static void ForcePreinitialize() GetAction<T>(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static T GetAction<T>(string actionName, bool caseSensitive = false) where T : SteamVR_Action, new() Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description T Type Parameters Name Description T The type of action you're expecting to get back GetAction<T>(String, String, Boolean, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static T GetAction<T>(string actionSetName, string actionName, bool caseSensitive = false, bool returnNulls = false) where T : SteamVR_Action, new() Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster System.Boolean returnNulls returns null if the action does not exist Returns Type Description T Type Parameters Name Description T The type of action you're expecting to get back GetActionDataFromPath<T>(String, Boolean) Get an action's action data by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static T GetActionDataFromPath<T>(string path, bool caseSensitive = false) where T : SteamVR_Action_Source_Map Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description T Type Parameters Name Description T The type of action you're expecting to get back GetActionFromPath<T>(String, Boolean, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static T GetActionFromPath<T>(string path, bool caseSensitive = false, bool returnNulls = false) where T : SteamVR_Action, new() Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster System.Boolean returnNulls Returns Type Description T Type Parameters Name Description T The type of action you're expecting to get back GetActions<T>() Returns all of the actions of the specified type. If we're in the editor, doesn't rely on the arrays being filled. Declaration public static T[] GetActions<T>() where T : SteamVR_Action Returns Type Description T[] Type Parameters Name Description T The type of actions you want to get GetActionSet(String, Boolean, Boolean) Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] Declaration public static SteamVR_ActionSet GetActionSet(string actionSetName, bool caseSensitive = false, bool returnsNulls = false) Parameters Type Name Description System.String actionSetName The name to the action set you want System.Boolean caseSensitive case sensitive searches are faster System.Boolean returnsNulls Returns Type Description SteamVR_ActionSet GetActionSet<T>(String, Boolean, Boolean) Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] Declaration public static T GetActionSet<T>(string actionSetName, bool caseSensitive = false, bool returnNulls = false) where T : SteamVR_ActionSet, new() Parameters Type Name Description System.String actionSetName The name to the action set you want System.Boolean caseSensitive case sensitive searches are faster System.Boolean returnNulls returns a null if the set does not exist Returns Type Description T Type Parameters Name Description T The type of action set you're expecting to get back GetActionSetDataFromPath(String, Boolean) Get an action set's data by the full path to that action. Action set paths are in the format /actions/[actionSet] Declaration public static SteamVR_ActionSet_Data GetActionSetDataFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action set paths are in the format /actions/[actionSet]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_ActionSet_Data GetActionSetFromPath(String, Boolean) Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] Declaration public static SteamVR_ActionSet GetActionSetFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action set you want (Action paths are in the format /actions/[actionSet]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_ActionSet GetActionSetFromPath<T>(String, Boolean, Boolean) Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] Declaration public static T GetActionSetFromPath<T>(string path, bool caseSensitive = false, bool returnsNulls = false) where T : SteamVR_ActionSet, new() Parameters Type Name Description System.String path The full path to the action set you want (Action paths are in the format /actions/[actionSet]) System.Boolean caseSensitive case sensitive searches are faster System.Boolean returnsNulls Returns Type Description T Type Parameters Name Description T The type of action set you're expecting to get back GetActionSets() Returns all of the action sets. If we're in the editor, doesn't rely on the actionSets field being filled. Declaration public static SteamVR_ActionSet[] GetActionSets() Returns Type Description SteamVR_ActionSet [] GetBaseAction(String, String, Boolean) Declaration public static SteamVR_Action GetBaseAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive Returns Type Description SteamVR_Action GetBaseActionFromPath(String, Boolean) Declaration public static SteamVR_Action GetBaseActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path System.Boolean caseSensitive Returns Type Description SteamVR_Action GetBooleanAction(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Boolean GetBooleanAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Boolean GetBooleanAction(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Boolean GetBooleanAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Boolean GetBooleanActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Boolean GetBooleanActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Boolean GetFloat(String, String, SteamVR_Input_Sources, Boolean) Get the float value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results). (same as GetSingle) Declaration public static float GetFloat(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Single GetFloat(String, SteamVR_Input_Sources, Boolean) Get the float value of an action by the action name and input source. Optionally case sensitive (for faster results). (same as GetSingle) Declaration public static float GetFloat(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Single GetLocalizedName(UInt64, EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public static string GetLocalizedName(ulong originHandle, params EVRInputStringBits[] localizedParts) Parameters Type Name Description System.UInt64 originHandle EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String GetPoseAction(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Pose GetPoseAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Pose GetPoseAction(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Pose GetPoseAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Pose GetPoseActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Pose GetPoseActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Pose GetResourcesFolderPath(Boolean) Declaration public static string GetResourcesFolderPath(bool fromAssetsDirectory = false) Parameters Type Name Description System.Boolean fromAssetsDirectory Returns Type Description System.String GetSingle(String, String, SteamVR_Input_Sources, Boolean) Get the float value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results). (same as GetFloat) Declaration public static float GetSingle(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Single GetSingle(String, SteamVR_Input_Sources, Boolean) Get the float value of an action by the action name and input source. Optionally case sensitive (for faster results). (same as GetFloat) Declaration public static float GetSingle(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Single GetSingleAction(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Single GetSingleAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Single GetSingleAction(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Single GetSingleAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Single GetSingleActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Single GetSingleActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Single GetSkeletonAction(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Skeleton GetSkeletonAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Skeleton GetSkeletonAction(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Skeleton GetSkeletonAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Skeleton GetSkeletonActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Skeleton GetSkeletonActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Skeleton GetState(String, String, SteamVR_Input_Sources, Boolean) Get the state of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) Declaration public static bool GetState(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean GetState(String, SteamVR_Input_Sources, Boolean) Get the state of an action by the action name and input source. Optionally case sensitive (for faster results) Declaration public static bool GetState(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean GetStateDown(String, String, SteamVR_Input_Sources, Boolean) Get the state down of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) Declaration public static bool GetStateDown(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean True when the action was false last update and is now true. Returns false again afterwards. GetStateDown(String, SteamVR_Input_Sources, Boolean) Get the state down of an action by the action name and input source. Optionally case sensitive (for faster results) Declaration public static bool GetStateDown(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean True when the action was false last update and is now true. Returns false again afterwards. GetStateUp(String, String, SteamVR_Input_Sources, Boolean) Get the state up of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) Declaration public static bool GetStateUp(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean True when the action was true last update and is now false. Returns false again afterwards. GetStateUp(String, SteamVR_Input_Sources, Boolean) Get the state up of an action by the action name and input source. Optionally case sensitive (for faster results) Declaration public static bool GetStateUp(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description System.Boolean True when the action was true last update and is now false. Returns false again afterwards. GetVector2(String, String, SteamVR_Input_Sources, Boolean) Get the Vector2 value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) Declaration public static Vector2 GetVector2(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description UnityEngine.Vector2 GetVector2(String, SteamVR_Input_Sources, Boolean) Get the Vector2 value of an action by the action name and input source. Optionally case sensitive (for faster results) Declaration public static Vector2 GetVector2(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description UnityEngine.Vector2 GetVector2Action(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector2 GetVector2Action(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector2 GetVector2Action(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector2 GetVector2Action(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector2 GetVector2ActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector2 GetVector2ActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector2 GetVector3(String, String, SteamVR_Input_Sources, Boolean) Get the Vector3 value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) Declaration public static Vector3 GetVector3(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String actionSet The name of the action set the action is contained in System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description UnityEngine.Vector3 GetVector3(String, SteamVR_Input_Sources, Boolean) Get the Vector3 value of an action by the action name and input source. Optionally case sensitive (for faster results) Declaration public static Vector3 GetVector3(string action, SteamVR_Input_Sources inputSource, bool caseSensitive = false) Parameters Type Name Description System.String action The name of the action to get the state of SteamVR_Input_Sources inputSource The input source to get the action state from System.Boolean caseSensitive Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster) Returns Type Description UnityEngine.Vector3 GetVector3Action(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector3 GetVector3Action(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector3 GetVector3Action(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector3 GetVector3Action(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector3 GetVector3ActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vector3 GetVector3ActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vector3 GetVibrationAction(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vibration GetVibrationAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vibration GetVibrationAction(String, String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vibration GetVibrationAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vibration GetVibrationActionFromPath(String, Boolean) Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] Declaration public static SteamVR_Action_Vibration GetVibrationActionFromPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName]) System.Boolean caseSensitive case sensitive searches are faster Returns Type Description SteamVR_Action_Vibration HasAction(String, Boolean) Declaration public static bool HasAction(string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionName System.Boolean caseSensitive Returns Type Description System.Boolean HasAction(String, String, Boolean) Declaration public static bool HasAction(string actionSetName, string actionName, bool caseSensitive = false) Parameters Type Name Description System.String actionSetName System.String actionName System.Boolean caseSensitive Returns Type Description System.Boolean HasActionPath(String, Boolean) Declaration public static bool HasActionPath(string path, bool caseSensitive = false) Parameters Type Name Description System.String path System.Boolean caseSensitive Returns Type Description System.Boolean HasActionSet(String, Boolean) Declaration protected static bool HasActionSet(string name, bool caseSensitive = false) Parameters Type Name Description System.String name System.Boolean caseSensitive Returns Type Description System.Boolean HasFileInMemoryBeenModified() Does the actions file in memory differ from the one on disk as determined by a md5 hash Declaration public static bool HasFileInMemoryBeenModified() Returns Type Description System.Boolean IdentifyActionsFile(Boolean) Tell SteamVR that we're using the actions file at the path defined in SteamVR_Settings. Declaration public static void IdentifyActionsFile(bool showLogs = true) Parameters Type Name Description System.Boolean showLogs Initialize(Boolean) Get all the handles for actions and action sets. Initialize our dictionaries of action / action set names. Setup the tracking space universe origin Declaration public static void Initialize(bool force = false) Parameters Type Name Description System.Boolean force InitializeFile(Boolean, Boolean) Load from disk and deserialize the actions file Declaration public static bool InitializeFile(bool force = false, bool showErrors = true) Parameters Type Name Description System.Boolean force Force a refresh of this file from disk System.Boolean showErrors Returns Type Description System.Boolean IsOpeningSetup() Declaration public static bool IsOpeningSetup() Returns Type Description System.Boolean LateUpdate() Gets called by SteamVR_Behaviour every LateUpdate and updates actions if the steamvr settings are configured to update then. Also updates skeletons regardless of settings are configured to so we can account for animations on the skeletons. Declaration public static void LateUpdate() OnPreCull() Gets called by SteamVR_Behaviour every OnPreCull and updates actions if the steamvr settings are configured to update then. Declaration public static void OnPreCull() PreinitializeActionDictionaries() Declaration public static void PreinitializeActionDictionaries() PreinitializeActionSetDictionaries() Declaration public static void PreinitializeActionSetDictionaries() PreinitializeFinishActionSets() Declaration public static void PreinitializeFinishActionSets() Update() Gets called by SteamVR_Behaviour every Update and updates actions if the steamvr settings are configured to update then. Declaration public static void Update() UpdateNonVisualActions() Updates the states of all the non visual actions (boolean, single, vector2, vector3) Declaration public static void UpdateNonVisualActions() UpdatePoseActions(Boolean) Updates the states of all the pose actions Declaration public static void UpdatePoseActions(bool skipSendingEvents = false) Parameters Type Name Description System.Boolean skipSendingEvents Controls whether or not events are fired from this update call UpdateSkeletonActions(Boolean) Updates the states of all the skeleton actions Declaration public static void UpdateSkeletonActions(bool skipSendingEvents = false) Parameters Type Name Description System.Boolean skipSendingEvents Controls whether or not events are fired from this update call UpdateVisualActions(Boolean) Updates the states of all the visual actions (pose / skeleton) Declaration public static void UpdateVisualActions(bool skipStateAndEventUpdates = false) Parameters Type Name Description System.Boolean skipStateAndEventUpdates Controls whether or not events are fired from this update call Events onNonVisualActionsUpdated An event that fires when the non visual actions (everything except poses / skeletons) have been updated Declaration public static event Action onNonVisualActionsUpdated Event Type Type Description System.Action onPosesUpdated An event that fires when the pose actions have been updated Declaration public static event SteamVR_Input.PosesUpdatedHandler onPosesUpdated Event Type Type Description SteamVR_Input.PosesUpdatedHandler onSkeletonsUpdated An event that fires when the skeleton actions have been updated Declaration public static event SteamVR_Input.SkeletonsUpdatedHandler onSkeletonsUpdated Event Type Type Description SteamVR_Input.SkeletonsUpdatedHandler"
  },
  "api/Valve.VR.SteamVR_Input.SkeletonsUpdatedHandler.html": {
    "href": "api/Valve.VR.SteamVR_Input.SkeletonsUpdatedHandler.html",
    "title": "Delegate SteamVR_Input.SkeletonsUpdatedHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Input.SkeletonsUpdatedHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void SkeletonsUpdatedHandler(bool skipSendingEvents); Parameters Type Name Description System.Boolean skipSendingEvents"
  },
  "api/Valve.VR.SteamVR_Input.PosesUpdatedHandler.html": {
    "href": "api/Valve.VR.SteamVR_Input.PosesUpdatedHandler.html",
    "title": "Delegate SteamVR_Input.PosesUpdatedHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Input.PosesUpdatedHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void PosesUpdatedHandler(bool skipSendingEvents); Parameters Type Name Description System.Boolean skipSendingEvents"
  },
  "api/Valve.VR.SteamVR_IK.html": {
    "href": "api/Valve.VR.SteamVR_IK.html",
    "title": "Class SteamVR_IK | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_IK Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_IK Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_IK : MonoBehaviour Fields blendPct Declaration public float blendPct Field Value Type Description System.Single end Declaration public Transform end Field Value Type Description UnityEngine.Transform endXform Declaration [HideInInspector] public Transform endXform Field Value Type Description UnityEngine.Transform joint Declaration public Transform joint Field Value Type Description UnityEngine.Transform jointXform Declaration [HideInInspector] public Transform jointXform Field Value Type Description UnityEngine.Transform poleVector Declaration public Transform poleVector Field Value Type Description UnityEngine.Transform start Declaration public Transform start Field Value Type Description UnityEngine.Transform startXform Declaration [HideInInspector] public Transform startXform Field Value Type Description UnityEngine.Transform target Declaration public Transform target Field Value Type Description UnityEngine.Transform upVector Declaration public Transform upVector Field Value Type Description UnityEngine.Transform Methods Solve(Vector3, Vector3, Vector3, Single, Single, ref Vector3, out Vector3, out Vector3) Declaration public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up) Parameters Type Name Description UnityEngine.Vector3 start UnityEngine.Vector3 end UnityEngine.Vector3 poleVector System.Single jointDist System.Single targetDist UnityEngine.Vector3 result UnityEngine.Vector3 forward UnityEngine.Vector3 up Returns Type Description System.Boolean"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.TrackingChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.TrackingChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.TrackingChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.TrackingChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void TrackingChangeHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource, ETrackingResult trackingState); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource ETrackingResult trackingState"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.StateUpHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.StateUpHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.StateUpHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.StateUpHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateUpHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.StateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.StateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.StateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.StateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton_Source.html",
    "title": "Class SteamVR_Action_Skeleton_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Skeleton_Source Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons. We give you 31 bones to help you animate hand models. For more information check out this blog post: https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068 Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Pose_Source SteamVR_Action_Skeleton_Source Implements ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source ISteamVR_Action_Skeleton_Source Inherited Members SteamVR_Action_Pose_Source.universeOrigin SteamVR_Action_Pose_Source.poseActionData_size SteamVR_Action_Pose_Source.predictedSecondsFromNow SteamVR_Action_Pose_Source.changeTolerance SteamVR_Action_Pose_Source.changed SteamVR_Action_Pose_Source.lastChanged SteamVR_Action_Pose_Source.activeOrigin SteamVR_Action_Pose_Source.lastActiveOrigin SteamVR_Action_Pose_Source.active SteamVR_Action_Pose_Source.lastActive SteamVR_Action_Pose_Source.trackingState SteamVR_Action_Pose_Source.lastTrackingState SteamVR_Action_Pose_Source.poseIsValid SteamVR_Action_Pose_Source.lastPoseIsValid SteamVR_Action_Pose_Source.deviceIsConnected SteamVR_Action_Pose_Source.lastDeviceIsConnected SteamVR_Action_Pose_Source.localPosition SteamVR_Action_Pose_Source.localRotation SteamVR_Action_Pose_Source.lastLocalPosition SteamVR_Action_Pose_Source.lastLocalRotation SteamVR_Action_Pose_Source.velocity SteamVR_Action_Pose_Source.lastVelocity SteamVR_Action_Pose_Source.angularVelocity SteamVR_Action_Pose_Source.lastAngularVelocity SteamVR_Action_Pose_Source.poseActionData SteamVR_Action_Pose_Source.lastPoseActionData SteamVR_Action_Pose_Source.tempPoseActionData SteamVR_Action_Pose_Source.poseAction SteamVR_Action_Pose_Source.SetCacheVariables() SteamVR_Action_Pose_Source.GetChanged() SteamVR_Action_Pose_Source.GetVelocitiesAtTimeOffset(Single, Vector3, Vector3) SteamVR_Action_Pose_Source.GetPoseAtTimeOffset(Single, Vector3, Quaternion, Vector3, Vector3) SteamVR_Action_Pose_Source.UpdateTransform(Transform) SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity(HmdVector3_t) SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity(HmdVector3_t) SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity(Single, Single, Single) SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity(Single, Single, Single) SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Skeleton_Source : SteamVR_Action_Pose_Source, ISteamVR_Action_Pose, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISteamVR_Action_Skeleton_Source Fields lastSkeletalSummaryData Declaration protected VRSkeletalSummaryData_t lastSkeletalSummaryData Field Value Type Description VRSkeletalSummaryData_t lastSkeletonActionData Declaration protected InputSkeletalActionData_t lastSkeletonActionData Field Value Type Description InputSkeletalActionData_t skeletalSummaryData Declaration protected VRSkeletalSummaryData_t skeletalSummaryData Field Value Type Description VRSkeletalSummaryData_t skeletonAction Declaration protected SteamVR_Action_Skeleton skeletonAction Field Value Type Description SteamVR_Action_Skeleton skeletonActionData Declaration protected InputSkeletalActionData_t skeletonActionData Field Value Type Description InputSkeletalActionData_t skeletonActionData_size Declaration protected static uint skeletonActionData_size Field Value Type Description System.UInt32 tempBoneTransforms Declaration protected VRBoneTransform_t[] tempBoneTransforms Field Value Type Description VRBoneTransform_t [] tempSkeletonActionData Declaration protected InputSkeletalActionData_t tempSkeletonActionData Field Value Type Description InputSkeletalActionData_t Properties activeBinding True if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Pose_Source.activeBinding boneCount The number of bones in the skeleton for this action Declaration public int boneCount { get; } Property Value Type Description System.Int32 boneHierarchy Gets the ordering of the bone hierarchy Declaration public int[] boneHierarchy { get; } Property Value Type Description System.Int32 [] bonePositions An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Vector3[] bonePositions { get; protected set; } Property Value Type Description UnityEngine.Vector3 [] boneRotations An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Quaternion[] boneRotations { get; protected set; } Property Value Type Description UnityEngine.Quaternion [] fingerCurls 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] fingerCurls { get; protected set; } Property Value Type Description System.Single [] fingerSplays 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] fingerSplays { get; protected set; } Property Value Type Description System.Single [] indexCurl A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration public float indexCurl { get; } Property Value Type Description System.Single indexMiddleSplay A 0-1 value representing the size of the gap between the index and middle fingers Declaration public float indexMiddleSplay { get; } Property Value Type Description System.Single lastActiveBinding True if the action's binding was active during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Pose_Source.lastActiveBinding lastBonePositions From the previous update: An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Vector3[] lastBonePositions { get; protected set; } Property Value Type Description UnityEngine.Vector3 [] lastBoneRotations From the previous update: An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Quaternion[] lastBoneRotations { get; protected set; } Property Value Type Description UnityEngine.Quaternion [] lastFingerCurls [Previous Update] 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] lastFingerCurls { get; protected set; } Property Value Type Description System.Single [] lastFingerSplays [Previous Update] 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] lastFingerSplays { get; protected set; } Property Value Type Description System.Single [] lastIndexCurl [Previous Update] A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration public float lastIndexCurl { get; } Property Value Type Description System.Single lastIndexMiddleSplay [Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers Declaration public float lastIndexMiddleSplay { get; } Property Value Type Description System.Single lastMiddleCurl [Previous Update] A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration public float lastMiddleCurl { get; } Property Value Type Description System.Single lastMiddleRingSplay [Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers Declaration public float lastMiddleRingSplay { get; } Property Value Type Description System.Single lastPinkyCurl [Previous Update] A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration public float lastPinkyCurl { get; } Property Value Type Description System.Single lastRingCurl [Previous Update] A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration public float lastRingCurl { get; } Property Value Type Description System.Single lastRingPinkySplay [Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration public float lastRingPinkySplay { get; } Property Value Type Description System.Single lastThumbCurl [Previous Update] A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration public float lastThumbCurl { get; } Property Value Type Description System.Single lastThumbIndexSplay [Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers Declaration public float lastThumbIndexSplay { get; } Property Value Type Description System.Single middleCurl A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration public float middleCurl { get; } Property Value Type Description System.Single middleRingSplay A 0-1 value representing the size of the gap between the middle and ring fingers Declaration public float middleRingSplay { get; } Property Value Type Description System.Single pinkyCurl A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration public float pinkyCurl { get; } Property Value Type Description System.Single poseChanged Separate from \"changed\". If the pose for this skeleton action has changed (root position/rotation) Declaration public bool poseChanged { get; protected set; } Property Value Type Description System.Boolean rangeOfMotion The range of motion the we're using to get bone data from. With Controller being your hand while holding the controller. Declaration public EVRSkeletalMotionRange rangeOfMotion { get; set; } Property Value Type Description EVRSkeletalMotionRange ringCurl A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration public float ringCurl { get; } Property Value Type Description System.Single ringPinkySplay A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration public float ringPinkySplay { get; } Property Value Type Description System.Single skeletalTrackingLevel Get the accuracy level of the skeletal tracking data. * Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. * Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl * Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. Declaration public EVRSkeletalTrackingLevel skeletalTrackingLevel { get; } Property Value Type Description EVRSkeletalTrackingLevel skeletalTransformSpace The space to get bone data in. Parent space by default Declaration public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; } Property Value Type Description EVRSkeletalTransformSpace thumbCurl A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration public float thumbCurl { get; } Property Value Type Description System.Single thumbIndexSplay A 0-1 value representing the size of the gap between the thumb and index fingers Declaration public float thumbIndexSplay { get; } Property Value Type Description System.Single Methods CheckAndSendEvents() Declaration protected override void CheckAndSendEvents() Overrides SteamVR_Action_Pose_Source.CheckAndSendEvents() GetBoneCount() Gets the number of bones in the skeleton for this action Declaration public uint GetBoneCount() Returns Type Description System.UInt32 GetBoneHierarchy() Gets the ordering of the bone hierarchy Declaration public int[] GetBoneHierarchy() Returns Type Description System.Int32 [] GetBoneName(Int32) Gets the name for a bone at the specified index Declaration public string GetBoneName(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description System.String GetReferenceTransforms(EVRSkeletalTransformSpace, EVRSkeletalReferencePose) Returns an array of positions/rotations that represent the state of each bone in a reference pose. Declaration public SteamVR_Utils.RigidTransform[] GetReferenceTransforms(EVRSkeletalTransformSpace transformSpace, EVRSkeletalReferencePose referencePose) Parameters Type Name Description EVRSkeletalTransformSpace transformSpace What to get the position/rotation data relative to, the model, or the bone's parent EVRSkeletalReferencePose referencePose Which reference pose to return Returns Type Description SteamVR_Utils.RigidTransform [] GetSkeletalSummaryData(Boolean) Get the skeletal summary data structure from OpenVR. Contains curl and splay data in finger order: thumb, index, middlg, ring, pinky. Easier access at named members: indexCurl, ringSplay, etc. Declaration protected VRSkeletalSummaryData_t GetSkeletalSummaryData(bool force = false) Parameters Type Name Description System.Boolean force Returns Type Description VRSkeletalSummaryData_t GetSkeletalTrackingLevel() Get the accuracy level of the skeletal tracking data. * Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. * Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl * Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. Declaration public EVRSkeletalTrackingLevel GetSkeletalTrackingLevel() Returns Type Description EVRSkeletalTrackingLevel Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the skeletal action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_Pose_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Pose_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_Pose_Source.UpdateValue() UpdateValue(Boolean) [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue(bool skipStateAndEventUpdates) Parameters Type Name Description System.Boolean skipStateAndEventUpdates Overrides SteamVR_Action_Pose_Source.UpdateValue(Boolean) Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Skeleton.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Skeleton.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Skeleton.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Skeleton.ActiveChangeHandler onChange Event fires when the orientation of the pose or bones changes more than the changeTolerance Declaration public event SteamVR_Action_Skeleton.ChangeHandler onChange Event Type Type Description SteamVR_Action_Skeleton.ChangeHandler onDeviceConnectedChanged Event fires when the device bound to this action is connected or disconnected Declaration public event SteamVR_Action_Skeleton.DeviceConnectedChangeHandler onDeviceConnectedChanged Event Type Type Description SteamVR_Action_Skeleton.DeviceConnectedChangeHandler onTrackingChanged Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes Declaration public event SteamVR_Action_Skeleton.TrackingChangeHandler onTrackingChanged Event Type Type Description SteamVR_Action_Skeleton.TrackingChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Skeleton.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Skeleton.UpdateHandler onValidPoseChanged Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) Declaration public event SteamVR_Action_Skeleton.ValidPoseChangeHandler onValidPoseChanged Event Type Type Description SteamVR_Action_Skeleton.ValidPoseChangeHandler Implements ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source ISteamVR_Action_Skeleton_Source"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.html",
    "title": "Class SteamVR_Action_Skeleton | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Skeleton Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Skeleton_Source_Map , SteamVR_Action_Skeleton_Source > SteamVR_Action_In < SteamVR_Action_Skeleton_Source_Map , SteamVR_Action_Skeleton_Source > SteamVR_Action_Pose_Base < SteamVR_Action_Skeleton_Source_Map , SteamVR_Action_Skeleton_Source > SteamVR_Action_Skeleton Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source ISteamVR_Action_Skeleton_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.SetUniverseOrigin(ETrackingUniverseOrigin) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.localPosition SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.localRotation SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.trackingState SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.velocity SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.angularVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.poseIsValid SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.deviceIsConnected SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastLocalPosition SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastLocalRotation SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastTrackingState SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastAngularVelocity SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastPoseIsValid SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastDeviceIsConnected SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.UpdateValues(Boolean) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetVelocitiesAtTimeOffset(SteamVR_Input_Sources, Single, Vector3, Vector3) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetPoseAtTimeOffset(SteamVR_Input_Sources, Single, Vector3, Quaternion, Vector3, Vector3) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.UpdateTransform(SteamVR_Input_Sources, Transform) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLocalPosition(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLocalRotation(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetAngularVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetDeviceIsConnected(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetPoseIsValid(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetTrackingResult(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastLocalPosition(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastLocalRotation(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastAngularVelocity(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastDeviceIsConnected(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastPoseIsValid(SteamVR_Input_Sources) SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastTrackingResult(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.changed SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.sourceMap SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.fullPath SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.handle SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.actionSet SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.direction SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.active SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastActive SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.activeBinding SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.initialized SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Skeleton : SteamVR_Action_Pose_Base<SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Pose, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISteamVR_Action_Skeleton_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Skeleton() Declaration public SteamVR_Action_Skeleton() Fields numBones Declaration public const int numBones = 31 Field Value Type Description System.Int32 steamVRFixUpRotation Declaration public static Quaternion steamVRFixUpRotation Field Value Type Description UnityEngine.Quaternion Properties boneCount The number of bones in the skeleton for this action Declaration public int boneCount { get; } Property Value Type Description System.Int32 bonePositions An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Vector3[] bonePositions { get; } Property Value Type Description UnityEngine.Vector3 [] boneRotations An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Quaternion[] boneRotations { get; } Property Value Type Description UnityEngine.Quaternion [] fingerCurls 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] fingerCurls { get; } Property Value Type Description System.Single [] fingerSplays 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] fingerSplays { get; } Property Value Type Description System.Single [] indexCurl A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration public float indexCurl { get; } Property Value Type Description System.Single indexMiddleSplay A 0-1 value representing the size of the gap between the index and middle fingers Declaration public float indexMiddleSplay { get; } Property Value Type Description System.Single lastBonePositions From the previous update: An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Vector3[] lastBonePositions { get; } Property Value Type Description UnityEngine.Vector3 [] lastBoneRotations From the previous update: An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration public Quaternion[] lastBoneRotations { get; } Property Value Type Description UnityEngine.Quaternion [] lastFingerCurls [Previous Update] 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] lastFingerCurls { get; } Property Value Type Description System.Single [] lastFingerSplays [Previous Update] 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration public float[] lastFingerSplays { get; } Property Value Type Description System.Single [] lastIndexCurl [Previous Update] A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration public float lastIndexCurl { get; } Property Value Type Description System.Single lastIndexMiddleSplay [Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers Declaration public float lastIndexMiddleSplay { get; } Property Value Type Description System.Single lastMiddleCurl [Previous Update] A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration public float lastMiddleCurl { get; } Property Value Type Description System.Single lastMiddleRingSplay [Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers Declaration public float lastMiddleRingSplay { get; } Property Value Type Description System.Single lastPinkyCurl [Previous Update] A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration public float lastPinkyCurl { get; } Property Value Type Description System.Single lastRingCurl [Previous Update] A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration public float lastRingCurl { get; } Property Value Type Description System.Single lastRingPinkySplay [Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration public float lastRingPinkySplay { get; } Property Value Type Description System.Single lastThumbCurl [Previous Update] A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration public float lastThumbCurl { get; } Property Value Type Description System.Single lastThumbIndexSplay [Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers Declaration public float lastThumbIndexSplay { get; } Property Value Type Description System.Single middleCurl A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration public float middleCurl { get; } Property Value Type Description System.Single middleRingSplay A 0-1 value representing the size of the gap between the middle and ring fingers Declaration public float middleRingSplay { get; } Property Value Type Description System.Single pinkyCurl A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration public float pinkyCurl { get; } Property Value Type Description System.Single poseChanged Separate from \"changed\". If the pose for this skeleton action has changed (root position/rotation) Declaration public bool poseChanged { get; } Property Value Type Description System.Boolean predictedSecondsFromNow The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. Declaration public float predictedSecondsFromNow { get; set; } Property Value Type Description System.Single rangeOfMotion The range of motion the we're using to get bone data from. With Controller being your hand while holding the controller. Declaration public EVRSkeletalMotionRange rangeOfMotion { get; set; } Property Value Type Description EVRSkeletalMotionRange ringCurl A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration public float ringCurl { get; } Property Value Type Description System.Single ringPinkySplay A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration public float ringPinkySplay { get; } Property Value Type Description System.Single skeletalTrackingLevel Get the accuracy level of the skeletal tracking data. * Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. * Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl * Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. Declaration public EVRSkeletalTrackingLevel skeletalTrackingLevel { get; } Property Value Type Description EVRSkeletalTrackingLevel skeletalTransformSpace The space to get bone data in. Parent space by default Declaration public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; } Property Value Type Description EVRSkeletalTransformSpace thumbCurl A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration public float thumbCurl { get; } Property Value Type Description System.Single thumbIndexSplay A 0-1 value representing the size of the gap between the thumb and index fingers Declaration public float thumbIndexSplay { get; } Property Value Type Description System.Single Methods AddOnActiveChangeListener(SteamVR_Action_Skeleton.ActiveChangeHandler) Executes a function when this action's bound state changes Declaration public void AddOnActiveChangeListener(SteamVR_Action_Skeleton.ActiveChangeHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.ActiveChangeHandler functionToCall AddOnChangeListener(SteamVR_Action_Skeleton.ChangeHandler) Executes a function when the state of this action changes Declaration public void AddOnChangeListener(SteamVR_Action_Skeleton.ChangeHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value AddOnDeviceConnectedChanged(SteamVR_Action_Skeleton.DeviceConnectedChangeHandler) Fires an event when a device is connected or disconnected. Declaration public void AddOnDeviceConnectedChanged(SteamVR_Action_Skeleton.DeviceConnectedChangeHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.DeviceConnectedChangeHandler functionToCall The method you would like to be called when a device is connected. Should take a SteamVR_Action_Pose as a param AddOnTrackingChanged(SteamVR_Action_Skeleton.TrackingChangeHandler) Fires an event when the tracking of the device has changed Declaration public void AddOnTrackingChanged(SteamVR_Action_Skeleton.TrackingChangeHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.TrackingChangeHandler functionToCall The method you would like to be called when tracking has changed. Should take a SteamVR_Action_Pose as a param AddOnUpdateListener(SteamVR_Action_Skeleton.UpdateHandler) Executes a function when the state of this action is updated. Declaration public void AddOnUpdateListener(SteamVR_Action_Skeleton.UpdateHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value AddOnValidPoseChanged(SteamVR_Action_Skeleton.ValidPoseChangeHandler) Fires an event when the device now has a valid pose or no longer has a valid pose Declaration public void AddOnValidPoseChanged(SteamVR_Action_Skeleton.ValidPoseChangeHandler functionToCall) Parameters Type Name Description SteamVR_Action_Skeleton.ValidPoseChangeHandler functionToCall The method you would like to be called when the pose has become valid or invalid. Should take a SteamVR_Action_Pose as a param GetActive() True if this action is bound and the ActionSet is active Declaration public bool GetActive() Returns Type Description System.Boolean GetAngularVelocity() The local angular velocity of the pose relative to the universe origin Declaration public Vector3 GetAngularVelocity() Returns Type Description UnityEngine.Vector3 GetBoneCount() Returns the total number of bones in the skeleton Declaration public uint GetBoneCount() Returns Type Description System.UInt32 GetBoneHierarchy() Returns the order of bones in the hierarchy Declaration public int[] GetBoneHierarchy() Returns Type Description System.Int32 [] GetBoneName(Int32) Returns the name of the bone Declaration public string GetBoneName(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description System.String GetBonePositions(Boolean) Gets the bone positions in local space. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public Vector3[] GetBonePositions(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description UnityEngine.Vector3 [] GetBoneRotations(Boolean) Gets the bone rotations in local space. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public Quaternion[] GetBoneRotations(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description UnityEngine.Quaternion [] GetDeviceIsConnected() True if the device bound to this action is connected Declaration public bool GetDeviceIsConnected() Returns Type Description System.Boolean GetFingerCurl(Int32) Returns a value indicating how much the passed in finger is currently curled. Declaration public float GetFingerCurl(int finger) Parameters Type Name Description System.Int32 finger The index of the finger to return a curl value for. 0-4. thumb, index, middle, ring, pinky Returns Type Description System.Single 0-1 value. 0 being straight, 1 being fully curled. GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum) Returns a value indicating how much the passed in finger is currently curled. Declaration public float GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum finger) Parameters Type Name Description SteamVR_Skeleton_FingerIndexEnum finger The finger to return a curl value for Returns Type Description System.Single 0-1 value. 0 being straight, 1 being fully curled. GetFingerCurls(Boolean) Returns the finger curl data that we calculate each update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public float[] GetFingerCurls(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description System.Single [] GetFingerSplays(Boolean) Returns the finger splay data that we calculate each update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public float[] GetFingerSplays(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description System.Single [] GetLastAngularVelocity() The last local angular velocity of the pose relative to the universe origin Declaration public Vector3 GetLastAngularVelocity() Returns Type Description UnityEngine.Vector3 GetLastBonePositions(Boolean) Gets the bone positions in local space from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public Vector3[] GetLastBonePositions(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description UnityEngine.Vector3 [] GetLastBoneRotations(Boolean) Gets the bone rotations in local space from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public Quaternion[] GetLastBoneRotations(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description UnityEngine.Quaternion [] GetLastDeviceIsConnected() True if the device bound to this action was connected during the previous update Declaration public bool GetLastDeviceIsConnected() Returns Type Description System.Boolean GetLastFingerCurl(Int32) Returns a value indicating how much the passed in finger was curled during the previous update Declaration public float GetLastFingerCurl(int finger) Parameters Type Name Description System.Int32 finger The index of the finger to return a curl value for. 0-4. thumb, index, middle, ring, pinky Returns Type Description System.Single 0-1 value. 0 being straight, 1 being fully curled. GetLastFingerCurl(SteamVR_Skeleton_FingerIndexEnum) Returns a value indicating how much the passed in finger was curled during the previous update Declaration public float GetLastFingerCurl(SteamVR_Skeleton_FingerIndexEnum finger) Parameters Type Name Description SteamVR_Skeleton_FingerIndexEnum finger The finger to return a curl value for Returns Type Description System.Single 0-1 value. 0 being straight, 1 being fully curled. GetLastFingerCurls(Boolean) Returns the finger curl data from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public float[] GetLastFingerCurls(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description System.Single [] GetLastFingerSplays(Boolean) Returns the finger splay data from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Declaration public float[] GetLastFingerSplays(bool copy = false) Parameters Type Name Description System.Boolean copy This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array Returns Type Description System.Single [] GetLastLocalPosition() The last local position of the pose relative to the universe origin Declaration public Vector3 GetLastLocalPosition() Returns Type Description UnityEngine.Vector3 GetLastLocalRotation() The last local rotation of the pose relative to the universe origin Declaration public Quaternion GetLastLocalRotation() Returns Type Description UnityEngine.Quaternion GetLastPoseIsValid() True if the pose was valid during the previous update Declaration public bool GetLastPoseIsValid() Returns Type Description System.Boolean GetLastSplay(Int32) Returns a value indicating the size of the gap between fingers during the previous update Declaration public float GetLastSplay(int fingerGapIndex) Parameters Type Name Description System.Int32 fingerGapIndex The index of the finger gap to return a splay value for. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky. Returns Type Description System.Single 0-1 value. 0 being no gap, 1 being \"full\" gap GetLastSplay(SteamVR_Skeleton_FingerSplayIndexEnum) Returns a value indicating the size of the gap between fingers during the previous update Declaration public float GetLastSplay(SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay) Parameters Type Name Description SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay Returns Type Description System.Single 0-1 value. 0 being no gap, 1 being \"full\" gap GetLastTrackingResult() The tracking state for this pose during the previous update Declaration public ETrackingResult GetLastTrackingResult() Returns Type Description ETrackingResult GetLastVelocity() The last local velocity of the pose relative to the universe origin Declaration public Vector3 GetLastVelocity() Returns Type Description UnityEngine.Vector3 GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. ex: \"Left Hand\". VRInputString_ControllerType - What kind of controller the user has in that hand. ex: \"Vive Controller\". VRInputString_InputSource - What part of that controller is the origin. ex: \"Trackpad\". VRInputString_All - All of the above. ex: \"Left Hand Vive Controller Trackpad\". Returns Type Description System.String GetLocalPosition() The local position of the pose relative to the universe origin Declaration public Vector3 GetLocalPosition() Returns Type Description UnityEngine.Vector3 GetLocalRotation() The local rotation of the pose relative to the universe origin Declaration public Quaternion GetLocalRotation() Returns Type Description UnityEngine.Quaternion GetPoseAtTimeOffset(Single, out Vector3, out Quaternion, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetPoseAtTimeOffset(float secondsFromNow, out Vector3 position, out Quaternion rotation, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 position UnityEngine.Quaternion rotation UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity Returns Type Description System.Boolean true if we successfully returned a pose GetPoseIsValid() True if the pose retrieved for this action is valid (good data from the tracking source) Declaration public bool GetPoseIsValid() Returns Type Description System.Boolean GetReferenceTransforms(EVRSkeletalTransformSpace, EVRSkeletalReferencePose) Returns an array of positions/rotations that represent the state of each bone in a reference pose. Declaration public SteamVR_Utils.RigidTransform[] GetReferenceTransforms(EVRSkeletalTransformSpace transformSpace, EVRSkeletalReferencePose referencePose) Parameters Type Name Description EVRSkeletalTransformSpace transformSpace What to get the position/rotation data relative to, the model, or the bone's parent EVRSkeletalReferencePose referencePose Which reference pose to return Returns Type Description SteamVR_Utils.RigidTransform [] GetSetActive() True if the ActionSet that contains this action is active Declaration public bool GetSetActive() Returns Type Description System.Boolean GetSkeletalTrackingLevel() Get the accuracy level of the skeletal tracking data. Declaration public EVRSkeletalTrackingLevel GetSkeletalTrackingLevel() Returns Type Description EVRSkeletalTrackingLevel Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. GetSplay(Int32) Returns a value indicating how the size of the gap between fingers. Declaration public float GetSplay(int fingerGapIndex) Parameters Type Name Description System.Int32 fingerGapIndex The index of the finger gap to return a splay value for. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky. Returns Type Description System.Single 0-1 value. 0 being no gap, 1 being \"full\" gap GetSplay(SteamVR_Skeleton_FingerSplayIndexEnum) Returns a value indicating how the size of the gap between fingers. Declaration public float GetSplay(SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay) Parameters Type Name Description SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay Returns Type Description System.Single 0-1 value. 0 being no gap, 1 being \"full\" gap GetTrackingResult() The state of the tracking system that is used to create pose data (position, rotation, etc) Declaration public ETrackingResult GetTrackingResult() Returns Type Description ETrackingResult GetVelocitiesAtTimeOffset(Single, out Vector3, out Vector3) SteamVR keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. Declaration public bool GetVelocitiesAtTimeOffset(float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description System.Single secondsFromNow The time offset in the future (estimated) or in the past (previously recorded) you want to get data from UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity Returns Type Description System.Boolean true if we successfully returned a pose GetVelocity() The local velocity of the pose relative to the universe origin Declaration public Vector3 GetVelocity() Returns Type Description UnityEngine.Vector3 RemoveOnActiveChangeListener(SteamVR_Action_Skeleton.ActiveChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Skeleton.ActiveChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events RemoveOnChangeListener(SteamVR_Action_Skeleton.ChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Action_Skeleton.ChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events RemoveOnDeviceConnectedChanged(SteamVR_Action_Skeleton.DeviceConnectedChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnDeviceConnectedChanged(SteamVR_Action_Skeleton.DeviceConnectedChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.DeviceConnectedChangeHandler functionToStopCalling The method you would like to stop calling when a device is connected. Should take a SteamVR_Action_Pose as a param RemoveOnTrackingChanged(SteamVR_Action_Skeleton.TrackingChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnTrackingChanged(SteamVR_Action_Skeleton.TrackingChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.TrackingChangeHandler functionToStopCalling The method you would like to stop calling when tracking has changed. Should take a SteamVR_Action_Pose as a param RemoveOnUpdateListener(SteamVR_Action_Skeleton.UpdateHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Action_Skeleton.UpdateHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.UpdateHandler functionToStopCalling The local function that you've setup to receive update events RemoveOnValidPoseChanged(SteamVR_Action_Skeleton.ValidPoseChangeHandler) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnValidPoseChanged(SteamVR_Action_Skeleton.ValidPoseChangeHandler functionToStopCalling) Parameters Type Name Description SteamVR_Action_Skeleton.ValidPoseChangeHandler functionToStopCalling The method you would like to stop calling when the pose has become valid or invalid. Should take a SteamVR_Action_Pose as a param SetRangeOfMotion(EVRSkeletalMotionRange) Set the range of the motion of the bones in this skeleton. Options are \"With Controller\" as if your hand is holding your VR controller. Or \"Without Controller\" as if your hand is empty. This will set the range for the following update. Declaration public void SetRangeOfMotion(EVRSkeletalMotionRange range) Parameters Type Name Description EVRSkeletalMotionRange range SetSkeletalTransformSpace(EVRSkeletalTransformSpace) Sets the space that you'll get bone data back in. Options are relative to the Model and relative to the Parent bone Declaration public void SetSkeletalTransformSpace(EVRSkeletalTransformSpace space) Parameters Type Name Description EVRSkeletalTransformSpace space the space that you'll get bone data back in. Options are relative to the Model and relative to the Parent bone. UpdateTransform(Transform) Update a transform's local position and local roation to match the pose from the most recent update Declaration public void UpdateTransform(Transform transformToUpdate) Parameters Type Name Description UnityEngine.Transform transformToUpdate The transform of the object to be updated UpdateValue(Boolean) [Should not be called by user code] Updates the skeleton action data Declaration public virtual void UpdateValue(bool skipStateAndEventUpdates) Parameters Type Name Description System.Boolean skipStateAndEventUpdates UpdateValueWithoutEvents() [Should not be called by user code] Updates the skeleton action data without firing events Declaration public void UpdateValueWithoutEvents() Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Skeleton.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Skeleton.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Skeleton.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Skeleton.ActiveChangeHandler onChange Event fires when the state of the pose or bones moves more than the changeTolerance Declaration public event SteamVR_Action_Skeleton.ChangeHandler onChange Event Type Type Description SteamVR_Action_Skeleton.ChangeHandler onDeviceConnectedChanged Event fires when the device bound to this action is connected or disconnected Declaration public event SteamVR_Action_Skeleton.DeviceConnectedChangeHandler onDeviceConnectedChanged Event Type Type Description SteamVR_Action_Skeleton.DeviceConnectedChangeHandler onTrackingChanged Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes Declaration public event SteamVR_Action_Skeleton.TrackingChangeHandler onTrackingChanged Event Type Type Description SteamVR_Action_Skeleton.TrackingChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Skeleton.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Skeleton.UpdateHandler onValidPoseChanged Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) Declaration public event SteamVR_Action_Skeleton.ValidPoseChangeHandler onValidPoseChanged Event Type Type Description SteamVR_Action_Skeleton.ValidPoseChangeHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Pose ISteamVR_Action_In_Source ISteamVR_Action_Source ISteamVR_Action_Skeleton_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.ValidPoseChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.ValidPoseChangeHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.ValidPoseChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.ValidPoseChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ValidPoseChangeHandler(SteamVR_Action_Skeleton fromAction, bool validPose); Parameters Type Name Description SteamVR_Action_Skeleton fromAction System.Boolean validPose"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Skeleton.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Skeleton.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Skeleton fromAction); Parameters Type Name Description SteamVR_Action_Skeleton fromAction"
  },
  "api/Valve.VR.SteamVR_Action_In_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_In_Source.html",
    "title": "Class SteamVR_Action_In_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_In_Source In actions are all input type actions. Boolean, Single, Vector2, Vector3, Skeleton, and Pose. This class fires onChange and onUpdate events. Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Boolean_Source SteamVR_Action_Pose_Source SteamVR_Action_Single_Source SteamVR_Action_Vector2_Source SteamVR_Action_Vector3_Source Implements ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.active SteamVR_Action_Source.activeBinding SteamVR_Action_Source.lastActive SteamVR_Action_Source.lastActiveBinding SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class SteamVR_Action_In_Source : SteamVR_Action_Source, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields inputOriginInfo Declaration protected InputOriginInfo_t inputOriginInfo Field Value Type Description InputOriginInfo_t inputOriginInfo_size Declaration protected static uint inputOriginInfo_size Field Value Type Description System.UInt32 lastInputOriginInfo Declaration protected InputOriginInfo_t lastInputOriginInfo Field Value Type Description InputOriginInfo_t Properties activeDevice The input source that triggered the action to be updated Declaration public SteamVR_Input_Sources activeDevice { get; } Property Value Type Description SteamVR_Input_Sources activeOrigin The handle to the component that triggered the action to be changed Declaration public abstract ulong activeOrigin { get; } Property Value Type Description System.UInt64 changed Returns true if the action has been changed since the previous update Declaration public abstract bool changed { get; protected set; } Property Value Type Description System.Boolean changedTime The Time.realtimeSinceStartup that this action was last changed. Declaration public float changedTime { get; protected set; } Property Value Type Description System.Single isUpdating [Should not be called by user code] Forces the system to start updating the data for this action and the specified input source. Should only be used if you've set SteamVR_Action.startUpdatingSourceOnAccess to false. Declaration public bool isUpdating { get; set; } Property Value Type Description System.Boolean lastActiveOrigin The handle to the component that triggered the action to be changed in the previous update Declaration public abstract ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 lastChanged Returns true if the action was changed for the previous update cycle Declaration public abstract bool lastChanged { get; protected set; } Property Value Type Description System.Boolean lastOriginGetFrame Declaration protected int lastOriginGetFrame { get; set; } Property Value Type Description System.Int32 localizedOriginName Gets the localized full name of the device that the action was updated by. ex: \"Left Hand Vive Controller Trackpad\" Declaration public string localizedOriginName { get; } Property Value Type Description System.String renderModelComponentName The name of the component on the render model that caused the action to be updated (not localized) Declaration public string renderModelComponentName { get; } Property Value Type Description System.String trackedDeviceIndex The device index (used by Render Models) used by the device that triggered the action to be updated Declaration public uint trackedDeviceIndex { get; } Property Value Type Description System.UInt32 updateTime The time the action was updated (Time.realtimeSinceStartup) Declaration public float updateTime { get; protected set; } Property Value Type Description System.Single Methods GetLocalizedOrigin() Gets the localized full name of the device that the action was updated by. ex: \"Left Hand Vive Controller Trackpad\" Declaration public string GetLocalizedOrigin() Returns Type Description System.String GetLocalizedOriginPart(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string Declaration public string GetLocalizedOriginPart(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. ex: \"Left Hand\". VRInputString_ControllerType - What kind of controller the user has in that hand. ex: \"Vive Controller\". VRInputString_InputSource - What part of that controller is the origin. ex: \"Trackpad\". VRInputString_All - All of the above. ex: \"Left Hand Vive Controller Trackpad\". Returns Type Description System.String Initialize() [Should not be called by user code] Initializes the handle for the action, the size of the InputOriginInfo struct, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_Source.Initialize() UpdateOriginTrackedDeviceInfo() Declaration protected void UpdateOriginTrackedDeviceInfo() UpdateValue() [Should not be called by user code] Updates the data for this action and this input source Declaration public abstract void UpdateValue() Implements ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_In-2.html": {
    "href": "api/Valve.VR.SteamVR_Action_In-2.html",
    "title": "Class SteamVR_Action_In<SourceMap, SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_In<SourceMap, SourceElement> Inheritance System.Object SteamVR_Action SteamVR_Action <SourceMap, SourceElement> SteamVR_Action_In<SourceMap, SourceElement> SteamVR_Action_Boolean SteamVR_Action_Pose_Base<SourceMap, SourceElement> SteamVR_Action_Single SteamVR_Action_Vector2 SteamVR_Action_Vector3 Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action<SourceMap, SourceElement>.sourceMap SteamVR_Action<SourceMap, SourceElement>.Item[SteamVR_Input_Sources] SteamVR_Action<SourceMap, SourceElement>.fullPath SteamVR_Action<SourceMap, SourceElement>.handle SteamVR_Action<SourceMap, SourceElement>.actionSet SteamVR_Action<SourceMap, SourceElement>.direction SteamVR_Action<SourceMap, SourceElement>.active SteamVR_Action<SourceMap, SourceElement>.lastActive SteamVR_Action<SourceMap, SourceElement>.activeBinding SteamVR_Action<SourceMap, SourceElement>.lastActiveBinding SteamVR_Action<SourceMap, SourceElement>.initialized SteamVR_Action<SourceMap, SourceElement>.PreInitialize(String) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, Boolean) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SourceMap, SourceElement>.TryNeedsInitData() SteamVR_Action<SourceMap, SourceElement>.Initialize(Boolean, Boolean) SteamVR_Action<SourceMap, SourceElement>.GetSourceMap() SteamVR_Action<SourceMap, SourceElement>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SourceMap, SourceElement>.InitAfterDeserialize() SteamVR_Action<SourceMap, SourceElement>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public abstract class SteamVR_Action_In<SourceMap, SourceElement> : SteamVR_Action<SourceMap, SourceElement>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_In_Source, ISteamVR_Action_Source where SourceMap : SteamVR_Action_In_Source_Map<SourceElement>, new() where SourceElement : SteamVR_Action_In_Source, new() Type Parameters Name Description SourceMap SourceElement Properties activeDevice [Shortcut to: SteamVR_Input_Sources.Any] The input source that triggered the action to be changed Declaration public SteamVR_Input_Sources activeDevice { get; } Property Value Type Description SteamVR_Input_Sources activeOrigin [Shortcut to: SteamVR_Input_Sources.Any] The handle to the component that triggered the action to be changed Declaration public ulong activeOrigin { get; } Property Value Type Description System.UInt64 changed [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action has been changed since the previous update Declaration public bool changed { get; } Property Value Type Description System.Boolean changedTime [Shortcut to: SteamVR_Input_Sources.Any] The time the action was changed (Time.realtimeSinceStartup) Declaration public float changedTime { get; } Property Value Type Description System.Single lastActiveOrigin [Shortcut to: SteamVR_Input_Sources.Any] The handle to the component that triggered the action to be changed in the previous update Declaration public ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 lastChanged [Shortcut to: SteamVR_Input_Sources.Any] Returns true if the action was changed for the previous update cycle Declaration public bool lastChanged { get; } Property Value Type Description System.Boolean localizedOriginName [Shortcut to: SteamVR_Input_Sources.Any] The full localized name for the component, controller, and hand that caused the action to be changed Declaration public string localizedOriginName { get; } Property Value Type Description System.String renderModelComponentName [Shortcut to: SteamVR_Input_Sources.Any] The name of the component on the render model that caused the action to be changed (not localized) Declaration public string renderModelComponentName { get; } Property Value Type Description System.String trackedDeviceIndex [Shortcut to: SteamVR_Input_Sources.Any] The device index (used by Render Models) used by the device that triggered the action to be changed Declaration public uint trackedDeviceIndex { get; } Property Value Type Description System.UInt32 updateTime [Shortcut to: SteamVR_Input_Sources.Any] The time the action was updated (Time.realtimeSinceStartup) Declaration public float updateTime { get; } Property Value Type Description System.Single Methods ForceAddSourceToUpdateList(SteamVR_Input_Sources) [Should not be called by user code] Forces the system to start updating the data for this action and the specified input source. Should only be used if you've set SteamVR_Action.startUpdatingSourceOnAccess to false. Declaration public void ForceAddSourceToUpdateList(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. GetActiveDevice(SteamVR_Input_Sources) The input source that triggered the action to be updated last Declaration public virtual SteamVR_Input_Sources GetActiveDevice(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description SteamVR_Input_Sources GetChanged(SteamVR_Input_Sources) Indicates whether or not the data for this action and specified input source has changed since the last update. Determined by SteamVR or 'changeTolerance'. Declaration public virtual bool GetChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetDeviceIndex(SteamVR_Input_Sources) Gets the device index for the controller this action is bound to. This can be used for render models or the pose tracking system. Declaration public virtual uint GetDeviceIndex(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.UInt32 GetLocalizedOrigin(SteamVR_Input_Sources) Gets the localized full name of the device that the action was updated by. ex: \"Left Hand Vive Controller Trackpad\" Declaration public string GetLocalizedOrigin(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.String GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string Declaration public string GetLocalizedOriginPart(SteamVR_Input_Sources inputSource, params EVRInputStringBits[] localizedParts) Parameters Type Name Description SteamVR_Input_Sources inputSource EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. ex: \"Left Hand\". VRInputString_ControllerType - What kind of controller the user has in that hand. ex: \"Vive Controller\". VRInputString_InputSource - What part of that controller is the origin. ex: \"Trackpad\". VRInputString_All - All of the above. ex: \"Left Hand Vive Controller Trackpad\". Returns Type Description System.String GetRenderModelComponentName(SteamVR_Input_Sources) The name of the component on the render model that caused the action to be updated (not localized) Declaration public virtual string GetRenderModelComponentName(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.String GetTimeLastChanged(SteamVR_Input_Sources) The time the action was changed (Time.realtimeSinceStartup) Declaration public override float GetTimeLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single Overrides SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) IsUpdating(SteamVR_Input_Sources) [Should not be called by user code] Returns whether the system has determined this source should be updated (based on code calls) Should only be used if you've set SteamVR_Action.startUpdatingSourceOnAccess to false. Declaration public override bool IsUpdating(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean Overrides SteamVR_Action.IsUpdating(SteamVR_Input_Sources) UpdateValues() [Should not be called by user code] Updates the data for all the input sources the system has detected need to be updated. Declaration public virtual void UpdateValues() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.EGamepadTextInputMode.html": {
    "href": "api/Valve.VR.EGamepadTextInputMode.html",
    "title": "Enum EGamepadTextInputMode | SteamVR Unity Plugin",
    "keywords": "Enum EGamepadTextInputMode Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EGamepadTextInputMode Fields Name Description k_EGamepadTextInputModeNormal k_EGamepadTextInputModePassword k_EGamepadTextInputModeSubmit"
  },
  "api/Valve.VR.EChaperoneConfigFile.html": {
    "href": "api/Valve.VR.EChaperoneConfigFile.html",
    "title": "Enum EChaperoneConfigFile | SteamVR Unity Plugin",
    "keywords": "Enum EChaperoneConfigFile Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EChaperoneConfigFile Fields Name Description Live Temp"
  },
  "api/Valve.VR.CVRTrackedCamera.html": {
    "href": "api/Valve.VR.CVRTrackedCamera.html",
    "title": "Class CVRTrackedCamera | SteamVR Unity Plugin",
    "keywords": "Class CVRTrackedCamera Inheritance System.Object CVRTrackedCamera Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRTrackedCamera Methods AcquireVideoStreamingService(UInt32, ref UInt64) Declaration public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle) Parameters Type Name Description System.UInt32 nDeviceIndex System.UInt64 pHandle Returns Type Description EVRTrackedCameraError GetCameraErrorNameFromEnum(EVRTrackedCameraError) Declaration public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError) Parameters Type Name Description EVRTrackedCameraError eCameraError Returns Type Description System.String GetCameraFrameSize(UInt32, EVRTrackedCameraFrameType, ref UInt32, ref UInt32, ref UInt32) Declaration public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize) Parameters Type Name Description System.UInt32 nDeviceIndex EVRTrackedCameraFrameType eFrameType System.UInt32 pnWidth System.UInt32 pnHeight System.UInt32 pnFrameBufferSize Returns Type Description EVRTrackedCameraError GetCameraIntrinsics(UInt32, UInt32, EVRTrackedCameraFrameType, ref HmdVector2_t, ref HmdVector2_t) Declaration public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter) Parameters Type Name Description System.UInt32 nDeviceIndex System.UInt32 nCameraIndex EVRTrackedCameraFrameType eFrameType HmdVector2_t pFocalLength HmdVector2_t pCenter Returns Type Description EVRTrackedCameraError GetCameraProjection(UInt32, UInt32, EVRTrackedCameraFrameType, Single, Single, ref HmdMatrix44_t) Declaration public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection) Parameters Type Name Description System.UInt32 nDeviceIndex System.UInt32 nCameraIndex EVRTrackedCameraFrameType eFrameType System.Single flZNear System.Single flZFar HmdMatrix44_t pProjection Returns Type Description EVRTrackedCameraError GetVideoStreamFrameBuffer(UInt64, EVRTrackedCameraFrameType, IntPtr, UInt32, ref CameraVideoStreamFrameHeader_t, UInt32) Declaration public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize) Parameters Type Name Description System.UInt64 hTrackedCamera EVRTrackedCameraFrameType eFrameType System.IntPtr pFrameBuffer System.UInt32 nFrameBufferSize CameraVideoStreamFrameHeader_t pFrameHeader System.UInt32 nFrameHeaderSize Returns Type Description EVRTrackedCameraError GetVideoStreamTextureD3D11(UInt64, EVRTrackedCameraFrameType, IntPtr, ref IntPtr, ref CameraVideoStreamFrameHeader_t, UInt32) Declaration public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize) Parameters Type Name Description System.UInt64 hTrackedCamera EVRTrackedCameraFrameType eFrameType System.IntPtr pD3D11DeviceOrResource System.IntPtr ppD3D11ShaderResourceView CameraVideoStreamFrameHeader_t pFrameHeader System.UInt32 nFrameHeaderSize Returns Type Description EVRTrackedCameraError GetVideoStreamTextureGL(UInt64, EVRTrackedCameraFrameType, ref UInt32, ref CameraVideoStreamFrameHeader_t, UInt32) Declaration public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize) Parameters Type Name Description System.UInt64 hTrackedCamera EVRTrackedCameraFrameType eFrameType System.UInt32 pglTextureId CameraVideoStreamFrameHeader_t pFrameHeader System.UInt32 nFrameHeaderSize Returns Type Description EVRTrackedCameraError GetVideoStreamTextureSize(UInt32, EVRTrackedCameraFrameType, ref VRTextureBounds_t, ref UInt32, ref UInt32) Declaration public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight) Parameters Type Name Description System.UInt32 nDeviceIndex EVRTrackedCameraFrameType eFrameType VRTextureBounds_t pTextureBounds System.UInt32 pnWidth System.UInt32 pnHeight Returns Type Description EVRTrackedCameraError HasCamera(UInt32, ref Boolean) Declaration public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera) Parameters Type Name Description System.UInt32 nDeviceIndex System.Boolean pHasCamera Returns Type Description EVRTrackedCameraError ReleaseVideoStreamingService(UInt64) Declaration public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera) Parameters Type Name Description System.UInt64 hTrackedCamera Returns Type Description EVRTrackedCameraError ReleaseVideoStreamTextureGL(UInt64, UInt32) Declaration public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId) Parameters Type Name Description System.UInt64 hTrackedCamera System.UInt32 glTextureId Returns Type Description EVRTrackedCameraError"
  },
  "api/Valve.VR.CVROverlay.html": {
    "href": "api/Valve.VR.CVROverlay.html",
    "title": "Class CVROverlay | SteamVR Unity Plugin",
    "keywords": "Class CVROverlay Inheritance System.Object CVROverlay Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVROverlay Methods ClearOverlayTexture(UInt64) Declaration public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description EVROverlayError CloseMessageOverlay() Declaration public void CloseMessageOverlay() ComputeOverlayIntersection(UInt64, ref VROverlayIntersectionParams_t, ref VROverlayIntersectionResults_t) Declaration public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayIntersectionParams_t pParams VROverlayIntersectionResults_t pResults Returns Type Description System.Boolean CreateDashboardOverlay(String, String, ref UInt64, ref UInt64) Declaration public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle) Parameters Type Name Description System.String pchOverlayKey System.String pchOverlayFriendlyName System.UInt64 pMainHandle System.UInt64 pThumbnailHandle Returns Type Description EVROverlayError CreateOverlay(String, String, ref UInt64) Declaration public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle) Parameters Type Name Description System.String pchOverlayKey System.String pchOverlayName System.UInt64 pOverlayHandle Returns Type Description EVROverlayError DestroyOverlay(UInt64) Declaration public EVROverlayError DestroyOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description EVROverlayError FindOverlay(String, ref UInt64) Declaration public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle) Parameters Type Name Description System.String pchOverlayKey System.UInt64 pOverlayHandle Returns Type Description EVROverlayError GetDashboardOverlaySceneProcess(UInt64, ref UInt32) Declaration public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 punProcessId Returns Type Description EVROverlayError GetGamepadFocusOverlay() Declaration public ulong GetGamepadFocusOverlay() Returns Type Description System.UInt64 GetHighQualityOverlay() Declaration public ulong GetHighQualityOverlay() Returns Type Description System.UInt64 GetKeyboardText(StringBuilder, UInt32) Declaration public uint GetKeyboardText(StringBuilder pchText, uint cchText) Parameters Type Name Description System.Text.StringBuilder pchText System.UInt32 cchText Returns Type Description System.UInt32 GetOverlayAlpha(UInt64, ref Single) Declaration public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single pfAlpha Returns Type Description EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(UInt64, ref Single, ref Single) Declaration public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single pfMinDistanceInMeters System.Single pfMaxDistanceInMeters Returns Type Description EVROverlayError GetOverlayColor(UInt64, ref Single, ref Single, ref Single) Declaration public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single pfRed System.Single pfGreen System.Single pfBlue Returns Type Description EVROverlayError GetOverlayDualAnalogTransform(UInt64, EDualAnalogWhich, ref HmdVector2_t, ref Single) Declaration public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius) Parameters Type Name Description System.UInt64 ulOverlay EDualAnalogWhich eWhich HmdVector2_t pvCenter System.Single pfRadius Returns Type Description EVROverlayError GetOverlayErrorNameFromEnum(EVROverlayError) Declaration public string GetOverlayErrorNameFromEnum(EVROverlayError error) Parameters Type Name Description EVROverlayError error Returns Type Description System.String GetOverlayFlag(UInt64, VROverlayFlags, ref Boolean) Declaration public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayFlags eOverlayFlag System.Boolean pbEnabled Returns Type Description EVROverlayError GetOverlayFlags(UInt64, ref UInt32) Declaration public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 pFlags Returns Type Description EVROverlayError GetOverlayImageData(UInt64, IntPtr, UInt32, ref UInt32, ref UInt32) Declaration public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight) Parameters Type Name Description System.UInt64 ulOverlayHandle System.IntPtr pvBuffer System.UInt32 unBufferSize System.UInt32 punWidth System.UInt32 punHeight Returns Type Description EVROverlayError GetOverlayInputMethod(UInt64, ref VROverlayInputMethod) Declaration public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayInputMethod peInputMethod Returns Type Description EVROverlayError GetOverlayKey(UInt64, StringBuilder, UInt32, ref EVROverlayError) Declaration public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Text.StringBuilder pchValue System.UInt32 unBufferSize EVROverlayError pError Returns Type Description System.UInt32 GetOverlayMouseScale(UInt64, ref HmdVector2_t) Declaration public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale) Parameters Type Name Description System.UInt64 ulOverlayHandle HmdVector2_t pvecMouseScale Returns Type Description EVROverlayError GetOverlayName(UInt64, StringBuilder, UInt32, ref EVROverlayError) Declaration public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Text.StringBuilder pchValue System.UInt32 unBufferSize EVROverlayError pError Returns Type Description System.UInt32 GetOverlayRenderingPid(UInt64) Declaration public uint GetOverlayRenderingPid(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description System.UInt32 GetOverlayRenderModel(UInt64, StringBuilder, UInt32, ref HmdColor_t, ref EVROverlayError) Declaration public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Text.StringBuilder pchValue System.UInt32 unBufferSize HmdColor_t pColor EVROverlayError pError Returns Type Description System.UInt32 GetOverlaySortOrder(UInt64, ref UInt32) Declaration public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 punSortOrder Returns Type Description EVROverlayError GetOverlayTexelAspect(UInt64, ref Single) Declaration public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single pfTexelAspect Returns Type Description EVROverlayError GetOverlayTexture(UInt64, ref IntPtr, IntPtr, ref UInt32, ref UInt32, ref UInt32, ref ETextureType, ref EColorSpace, ref VRTextureBounds_t) Declaration public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds) Parameters Type Name Description System.UInt64 ulOverlayHandle System.IntPtr pNativeTextureHandle System.IntPtr pNativeTextureRef System.UInt32 pWidth System.UInt32 pHeight System.UInt32 pNativeFormat ETextureType pAPIType EColorSpace pColorSpace VRTextureBounds_t pTextureBounds Returns Type Description EVROverlayError GetOverlayTextureBounds(UInt64, ref VRTextureBounds_t) Declaration public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds) Parameters Type Name Description System.UInt64 ulOverlayHandle VRTextureBounds_t pOverlayTextureBounds Returns Type Description EVROverlayError GetOverlayTextureColorSpace(UInt64, ref EColorSpace) Declaration public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace) Parameters Type Name Description System.UInt64 ulOverlayHandle EColorSpace peTextureColorSpace Returns Type Description EVROverlayError GetOverlayTextureSize(UInt64, ref UInt32, ref UInt32) Declaration public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 pWidth System.UInt32 pHeight Returns Type Description EVROverlayError GetOverlayTransformAbsolute(UInt64, ref ETrackingUniverseOrigin, ref HmdMatrix34_t) Declaration public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle ETrackingUniverseOrigin peTrackingOrigin HmdMatrix34_t pmatTrackingOriginToOverlayTransform Returns Type Description EVROverlayError GetOverlayTransformOverlayRelative(UInt64, ref UInt64, ref HmdMatrix34_t) Declaration public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt64 ulOverlayHandleParent HmdMatrix34_t pmatParentOverlayToOverlayTransform Returns Type Description EVROverlayError GetOverlayTransformTrackedDeviceComponent(UInt64, ref UInt32, StringBuilder, UInt32) Declaration public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 punDeviceIndex System.Text.StringBuilder pchComponentName System.UInt32 unComponentNameSize Returns Type Description EVROverlayError GetOverlayTransformTrackedDeviceRelative(UInt64, ref UInt32, ref HmdMatrix34_t) Declaration public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 punTrackedDevice HmdMatrix34_t pmatTrackedDeviceToOverlayTransform Returns Type Description EVROverlayError GetOverlayTransformType(UInt64, ref VROverlayTransformType) Declaration public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayTransformType peTransformType Returns Type Description EVROverlayError GetOverlayWidthInMeters(UInt64, ref Single) Declaration public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single pfWidthInMeters Returns Type Description EVROverlayError GetPrimaryDashboardDevice() Declaration public uint GetPrimaryDashboardDevice() Returns Type Description System.UInt32 GetTransformForOverlayCoordinates(UInt64, ETrackingUniverseOrigin, HmdVector2_t, ref HmdMatrix34_t) Declaration public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle ETrackingUniverseOrigin eTrackingOrigin HmdVector2_t coordinatesInOverlay HmdMatrix34_t pmatTransform Returns Type Description EVROverlayError HideKeyboard() Declaration public void HideKeyboard() HideOverlay(UInt64) Declaration public EVROverlayError HideOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description EVROverlayError IsActiveDashboardOverlay(UInt64) Declaration public bool IsActiveDashboardOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description System.Boolean IsDashboardVisible() Declaration public bool IsDashboardVisible() Returns Type Description System.Boolean IsHoverTargetOverlay(UInt64) Declaration public bool IsHoverTargetOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description System.Boolean IsOverlayVisible(UInt64) Declaration public bool IsOverlayVisible(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description System.Boolean MoveGamepadFocusToNeighbor(EOverlayDirection, UInt64) Declaration public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom) Parameters Type Name Description EOverlayDirection eDirection System.UInt64 ulFrom Returns Type Description EVROverlayError PollNextOverlayEvent(UInt64, ref VREvent_t, UInt32) Declaration public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent) Parameters Type Name Description System.UInt64 ulOverlayHandle VREvent_t pEvent System.UInt32 uncbVREvent Returns Type Description System.Boolean ReleaseNativeOverlayHandle(UInt64, IntPtr) Declaration public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle System.IntPtr pNativeTextureHandle Returns Type Description EVROverlayError SetDashboardOverlaySceneProcess(UInt64, UInt32) Declaration public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 unProcessId Returns Type Description EVROverlayError SetGamepadFocusOverlay(UInt64) Declaration public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay) Parameters Type Name Description System.UInt64 ulNewFocusOverlay Returns Type Description EVROverlayError SetHighQualityOverlay(UInt64) Declaration public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description EVROverlayError SetKeyboardPositionForOverlay(UInt64, HmdRect2_t) Declaration public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect) Parameters Type Name Description System.UInt64 ulOverlayHandle HmdRect2_t avoidRect SetKeyboardTransformAbsolute(ETrackingUniverseOrigin, ref HmdMatrix34_t) Declaration public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform) Parameters Type Name Description ETrackingUniverseOrigin eTrackingOrigin HmdMatrix34_t pmatTrackingOriginToKeyboardTransform SetOverlayAlpha(UInt64, Single) Declaration public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single fAlpha Returns Type Description EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(UInt64, Single, Single) Declaration public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single fMinDistanceInMeters System.Single fMaxDistanceInMeters Returns Type Description EVROverlayError SetOverlayColor(UInt64, Single, Single, Single) Declaration public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single fRed System.Single fGreen System.Single fBlue Returns Type Description EVROverlayError SetOverlayDualAnalogTransform(UInt64, EDualAnalogWhich, ref HmdVector2_t, Single) Declaration public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, float fRadius) Parameters Type Name Description System.UInt64 ulOverlay EDualAnalogWhich eWhich HmdVector2_t pvCenter System.Single fRadius Returns Type Description EVROverlayError SetOverlayFlag(UInt64, VROverlayFlags, Boolean) Declaration public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayFlags eOverlayFlag System.Boolean bEnabled Returns Type Description EVROverlayError SetOverlayFromFile(UInt64, String) Declaration public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath) Parameters Type Name Description System.UInt64 ulOverlayHandle System.String pchFilePath Returns Type Description EVROverlayError SetOverlayInputMethod(UInt64, VROverlayInputMethod) Declaration public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayInputMethod eInputMethod Returns Type Description EVROverlayError SetOverlayIntersectionMask(UInt64, ref VROverlayIntersectionMaskPrimitive_t, UInt32, UInt32) Declaration public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) Parameters Type Name Description System.UInt64 ulOverlayHandle VROverlayIntersectionMaskPrimitive_t pMaskPrimitives System.UInt32 unNumMaskPrimitives System.UInt32 unPrimitiveSize Returns Type Description EVROverlayError SetOverlayMouseScale(UInt64, ref HmdVector2_t) Declaration public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale) Parameters Type Name Description System.UInt64 ulOverlayHandle HmdVector2_t pvecMouseScale Returns Type Description EVROverlayError SetOverlayName(UInt64, String) Declaration public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName) Parameters Type Name Description System.UInt64 ulOverlayHandle System.String pchName Returns Type Description EVROverlayError SetOverlayNeighbor(EOverlayDirection, UInt64, UInt64) Declaration public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo) Parameters Type Name Description EOverlayDirection eDirection System.UInt64 ulFrom System.UInt64 ulTo Returns Type Description EVROverlayError SetOverlayRaw(UInt64, IntPtr, UInt32, UInt32, UInt32) Declaration public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) Parameters Type Name Description System.UInt64 ulOverlayHandle System.IntPtr pvBuffer System.UInt32 unWidth System.UInt32 unHeight System.UInt32 unDepth Returns Type Description EVROverlayError SetOverlayRenderingPid(UInt64, UInt32) Declaration public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 unPID Returns Type Description EVROverlayError SetOverlayRenderModel(UInt64, String, ref HmdColor_t) Declaration public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor) Parameters Type Name Description System.UInt64 ulOverlayHandle System.String pchRenderModel HmdColor_t pColor Returns Type Description EVROverlayError SetOverlaySortOrder(UInt64, UInt32) Declaration public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 unSortOrder Returns Type Description EVROverlayError SetOverlayTexelAspect(UInt64, Single) Declaration public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single fTexelAspect Returns Type Description EVROverlayError SetOverlayTexture(UInt64, ref Texture_t) Declaration public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture) Parameters Type Name Description System.UInt64 ulOverlayHandle Texture_t pTexture Returns Type Description EVROverlayError SetOverlayTextureBounds(UInt64, ref VRTextureBounds_t) Declaration public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds) Parameters Type Name Description System.UInt64 ulOverlayHandle VRTextureBounds_t pOverlayTextureBounds Returns Type Description EVROverlayError SetOverlayTextureColorSpace(UInt64, EColorSpace) Declaration public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace) Parameters Type Name Description System.UInt64 ulOverlayHandle EColorSpace eTextureColorSpace Returns Type Description EVROverlayError SetOverlayTransformAbsolute(UInt64, ETrackingUniverseOrigin, ref HmdMatrix34_t) Declaration public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle ETrackingUniverseOrigin eTrackingOrigin HmdMatrix34_t pmatTrackingOriginToOverlayTransform Returns Type Description EVROverlayError SetOverlayTransformOverlayRelative(UInt64, UInt64, ref HmdMatrix34_t) Declaration public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt64 ulOverlayHandleParent HmdMatrix34_t pmatParentOverlayToOverlayTransform Returns Type Description EVROverlayError SetOverlayTransformTrackedDeviceComponent(UInt64, UInt32, String) Declaration public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 unDeviceIndex System.String pchComponentName Returns Type Description EVROverlayError SetOverlayTransformTrackedDeviceRelative(UInt64, UInt32, ref HmdMatrix34_t) Declaration public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt32 unTrackedDevice HmdMatrix34_t pmatTrackedDeviceToOverlayTransform Returns Type Description EVROverlayError SetOverlayWidthInMeters(UInt64, Single) Declaration public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Single fWidthInMeters Returns Type Description EVROverlayError ShowDashboard(String) Declaration public void ShowDashboard(string pchOverlayToShow) Parameters Type Name Description System.String pchOverlayToShow ShowKeyboard(Int32, Int32, String, UInt32, String, Boolean, UInt64) Declaration public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue) Parameters Type Name Description System.Int32 eInputMode System.Int32 eLineInputMode System.String pchDescription System.UInt32 unCharMax System.String pchExistingText System.Boolean bUseMinimalMode System.UInt64 uUserValue Returns Type Description EVROverlayError ShowKeyboardForOverlay(UInt64, Int32, Int32, String, UInt32, String, Boolean, UInt64) Declaration public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue) Parameters Type Name Description System.UInt64 ulOverlayHandle System.Int32 eInputMode System.Int32 eLineInputMode System.String pchDescription System.UInt32 unCharMax System.String pchExistingText System.Boolean bUseMinimalMode System.UInt64 uUserValue Returns Type Description EVROverlayError ShowMessageOverlay(String, String, String, String, String, String) Declaration public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text) Parameters Type Name Description System.String pchText System.String pchCaption System.String pchButton0Text System.String pchButton1Text System.String pchButton2Text System.String pchButton3Text Returns Type Description VRMessageOverlayResponse ShowOverlay(UInt64) Declaration public EVROverlayError ShowOverlay(ulong ulOverlayHandle) Parameters Type Name Description System.UInt64 ulOverlayHandle Returns Type Description EVROverlayError"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector3.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector3.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector3.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector3.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 newAxis, Vector3 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 newAxis UnityEngine.Vector3 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector3.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector3.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector3.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector3.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 newAxis, Vector3 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 newAxis UnityEngine.Vector3 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.ValidPoseChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.ValidPoseChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.ValidPoseChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.ValidPoseChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ValidPoseChangeHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool validPose); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean validPose"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean newState"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.StateUpHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.StateUpHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.StateUpHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.StateUpHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateUpHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.StateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.StateHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.StateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.StateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.IVRNotifications.html": {
    "href": "api/Valve.VR.IVRNotifications.html",
    "title": "Struct IVRNotifications | SteamVR Unity Plugin",
    "keywords": "Struct IVRNotifications Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRNotifications"
  },
  "api/Valve.VR.EVREventType.html": {
    "href": "api/Valve.VR.EVREventType.html",
    "title": "Enum EVREventType | SteamVR Unity Plugin",
    "keywords": "Enum EVREventType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVREventType Fields Name Description VREvent_ActionBindingReloaded VREvent_ApplicationListUpdated VREvent_ApplicationMimeTypeLoad VREvent_ApplicationTransitionAborted VREvent_ApplicationTransitionNewAppLaunchComplete VREvent_ApplicationTransitionNewAppStarted VREvent_ApplicationTransitionStarted VREvent_AudioSettingsHaveChanged VREvent_BackgroundSettingHasChanged VREvent_ButtonPress VREvent_ButtonTouch VREvent_ButtonUnpress VREvent_ButtonUntouch VREvent_CameraSettingsHaveChanged VREvent_ChaperoneDataHasChanged VREvent_ChaperoneFlushCache VREvent_ChaperoneSettingsHaveChanged VREvent_ChaperoneTempDataHasChanged VREvent_ChaperoneUniverseHasChanged VREvent_Compositor_ApplicationNotResponding VREvent_Compositor_ApplicationResumed VREvent_Compositor_ChaperoneBoundsHidden VREvent_Compositor_ChaperoneBoundsShown VREvent_Compositor_DisplayDisconnected VREvent_Compositor_DisplayReconnected VREvent_Compositor_HDCPError VREvent_Compositor_MirrorWindowHidden VREvent_Compositor_MirrorWindowShown VREvent_ConsoleClosed VREvent_ConsoleOpened VREvent_DashboardActivated VREvent_DashboardDeactivated VREvent_DashboardOverlayCreated VREvent_DashboardRequested VREvent_DashboardSectionSettingChanged VREvent_DismissedWarningsSectionSettingChanged VREvent_DriverRequestedQuit VREvent_DualAnalog_Cancel VREvent_DualAnalog_ModeSwitch1 VREvent_DualAnalog_ModeSwitch2 VREvent_DualAnalog_Move VREvent_DualAnalog_Press VREvent_DualAnalog_Touch VREvent_DualAnalog_Unpress VREvent_DualAnalog_Untouch VREvent_EnableHomeAppSettingsHaveChanged VREvent_EnterStandbyMode VREvent_EnvironmentSettingsHaveChanged VREvent_FirmwareUpdateFinished VREvent_FirmwareUpdateStarted VREvent_FocusEnter VREvent_FocusLeave VREvent_HideKeyboard VREvent_HideRenderModels VREvent_ImageFailed VREvent_ImageLoaded VREvent_Input_ActionManifestLoadFailed VREvent_Input_ActionManifestReloaded VREvent_Input_BindingLoadFailed VREvent_Input_BindingLoadSuccessful VREvent_Input_BindingsUpdated VREvent_Input_HapticVibration VREvent_Input_ProgressUpdate VREvent_Input_TrackerActivated VREvent_InputFocusCaptured VREvent_InputFocusChanged VREvent_InputFocusReleased VREvent_IpdChanged VREvent_KeyboardCharInput VREvent_KeyboardClosed VREvent_KeyboardDone VREvent_KeyboardSectionSettingChanged VREvent_LastKnownSectionSettingChanged VREvent_LeaveStandbyMode VREvent_LensDistortionChanged VREvent_LighthouseSectionSettingChanged VREvent_MCImageUpdated VREvent_MessageOverlay_Closed VREvent_MessageOverlayCloseRequested VREvent_ModelSkinSettingsHaveChanged VREvent_MouseButtonDown VREvent_MouseButtonUp VREvent_MouseMove VREvent_None VREvent_Notification_BeginInteraction VREvent_Notification_Destroyed VREvent_Notification_Hidden VREvent_Notification_Shown VREvent_NotificationsSectionSettingChanged VREvent_NullSectionSettingChanged VREvent_OverlayFocusChanged VREvent_OverlayGamepadFocusGained VREvent_OverlayGamepadFocusLost VREvent_OverlayHidden VREvent_OverlaySharedTextureChanged VREvent_OverlayShown VREvent_PerformanceTest_DisableCapture VREvent_PerformanceTest_EnableCapture VREvent_PerformanceTest_FidelityLevel VREvent_PerfSectionSettingChanged VREvent_PowerSettingsHaveChanged VREvent_PrimaryDashboardDeviceChanged VREvent_ProcessConnected VREvent_ProcessDisconnected VREvent_ProcessQuit VREvent_PropertyChanged VREvent_Quit VREvent_QuitAborted_UserPrompt VREvent_QuitAcknowledged VREvent_ReloadOverlays VREvent_RenderToast VREvent_ReprojectionSettingHasChanged VREvent_RequestScreenshot VREvent_ResetDashboard VREvent_RoomViewHidden VREvent_RoomViewShown VREvent_SceneApplicationChanged VREvent_SceneApplicationSecondaryRenderingStarted VREvent_SceneApplicationUsingWrongGraphicsAdapter VREvent_SceneFocusChanged VREvent_SceneFocusGained VREvent_SceneFocusLost VREvent_ScreenshotFailed VREvent_ScreenshotProgressToDashboard VREvent_ScreenshotTaken VREvent_ScreenshotTriggered VREvent_ScrollDiscrete VREvent_ScrollSmooth VREvent_SeatedZeroPoseReset VREvent_ShowDevTools VREvent_ShowKeyboard VREvent_ShowRenderModels VREvent_ShowUI VREvent_SpatialAnchors_DescriptorUpdated VREvent_SpatialAnchors_PoseUpdated VREvent_SpatialAnchors_RequestDescriptorUpdate VREvent_SpatialAnchors_RequestPoseUpdate VREvent_StatusUpdate VREvent_SteamVRSectionSettingChanged VREvent_SubmitScreenshotToDashboard VREvent_SwitchGamepadFocus VREvent_SystemReport_Started VREvent_TouchPadMove VREvent_TrackedCamera_EditingSurface VREvent_TrackedCamera_PauseVideoStream VREvent_TrackedCamera_ResumeVideoStream VREvent_TrackedCamera_StartVideoStream VREvent_TrackedCamera_StopVideoStream VREvent_TrackedDeviceActivated VREvent_TrackedDeviceDeactivated VREvent_TrackedDeviceRoleChanged VREvent_TrackedDeviceUpdated VREvent_TrackedDeviceUserInteractionEnded VREvent_TrackedDeviceUserInteractionStarted VREvent_TrackersSectionSettingChanged VREvent_UserInterfaceSectionSettingChanged VREvent_VendorSpecific_Reserved_End VREvent_VendorSpecific_Reserved_Start VREvent_WatchdogWakeUpRequested VREvent_WebInterface_InstallDriverCompleted VREvent_WebInterfaceSectionSettingChanged VREvent_WirelessDisconnect VREvent_WirelessReconnect"
  },
  "api/Valve.VR.InteractionSystem.Util.html": {
    "href": "api/Valve.VR.InteractionSystem.Util.html",
    "title": "Class Util | SteamVR Unity Plugin",
    "keywords": "Class Util Inheritance System.Object Util Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public static class Util Fields CentimetersToFeet Declaration public const float CentimetersToFeet = 0.0328084F Field Value Type Description System.Single CentimetersToInches Declaration public const float CentimetersToInches = 0.393701F Field Value Type Description System.Single FeetToCentimeters Declaration public const float FeetToCentimeters = 30.48F Field Value Type Description System.Single FeetToMeters Declaration public const float FeetToMeters = 0.3048F Field Value Type Description System.Single InchesToCentimeters Declaration public const float InchesToCentimeters = 2.54F Field Value Type Description System.Single InchesToMeters Declaration public const float InchesToMeters = 0.0254F Field Value Type Description System.Single KilometersToMiles Declaration public const float KilometersToMiles = 0.621371F Field Value Type Description System.Single MetersToFeet Declaration public const float MetersToFeet = 3.28084F Field Value Type Description System.Single MetersToInches Declaration public const float MetersToInches = 39.3701F Field Value Type Description System.Single MilesToKilometers Declaration public const float MilesToKilometers = 1.60934F Field Value Type Description System.Single Methods AfterTimer(GameObject, Single, Action, Boolean) Declaration public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false) Parameters Type Name Description UnityEngine.GameObject go System.Single _time System.Action callback System.Boolean trigger_if_destroyed_early AngleOf(Vector2) Declaration public static float AngleOf(Vector2 v) Parameters Type Name Description UnityEngine.Vector2 v Returns Type Description System.Single Approach(Single, Single, Single) Declaration public static float Approach(float target, float value, float speed) Parameters Type Name Description System.Single target System.Single value System.Single speed Returns Type Description System.Single BezierInterpolate3(Vector3, Vector3, Vector3, Single) Declaration public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 c0 UnityEngine.Vector3 p1 System.Single t Returns Type Description UnityEngine.Vector3 BezierInterpolate4(Vector3, Vector3, Vector3, Vector3, Single) Declaration public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 c0 UnityEngine.Vector3 c1 UnityEngine.Vector3 p1 System.Single t Returns Type Description UnityEngine.Vector3 ClosestPointOnLine(Vector3, Vector3, Vector3) Declaration public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint) Parameters Type Name Description UnityEngine.Vector3 vA UnityEngine.Vector3 vB UnityEngine.Vector3 vPoint Returns Type Description UnityEngine.Vector3 ColorWithAlpha(Color, Single) Declaration public static Color ColorWithAlpha(this Color color, float alpha) Parameters Type Name Description UnityEngine.Color color System.Single alpha Returns Type Description UnityEngine.Color CombinePaths(String[]) Declaration public static string CombinePaths(params string[] paths) Parameters Type Name Description System.String [] paths Returns Type Description System.String DrawCross(Vector3, Color, Single) Declaration public static void DrawCross(Vector3 origin, Color crossColor, float size) Parameters Type Name Description UnityEngine.Vector3 origin UnityEngine.Color crossColor System.Single size FastRemove<T>(List<T>, Int32) Declaration public static void FastRemove<T>(List<T> list, int index) Parameters Type Name Description System.Collections.Generic.List <T> list System.Int32 index Type Parameters Name Description T FindAndRemove<T>(List<T>, Predicate<T>) Declaration public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match) Parameters Type Name Description System.Collections.Generic.List <T> list System.Predicate <T> match Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T FindChild(Transform, String) Declaration public static Transform FindChild(Transform parent, string name) Parameters Type Name Description UnityEngine.Transform parent System.String name Returns Type Description UnityEngine.Transform FindOrAdd<T>(List<T>, T) Declaration public static int FindOrAdd<T>(List<T> list, T item) Parameters Type Name Description System.Collections.Generic.List <T> list T item Returns Type Description System.Int32 Type Parameters Name Description T FindOrAddComponent<T>(GameObject) Declaration public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description T Type Parameters Name Description T FixupNewlines(String) Declaration public static string FixupNewlines(string text) Parameters Type Name Description System.String text Returns Type Description System.String FloatToDecimal(Single, Int32) Declaration public static decimal FloatToDecimal(float value, int decimalPlaces = 2) Parameters Type Name Description System.Single value System.Int32 decimalPlaces Returns Type Description System.Decimal ForEach<T>(IEnumerable<T>, Action<T>) Declaration public static void ForEach<T>(this IEnumerable<T> source, Action<T> action) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> source System.Action <T> action Type Parameters Name Description T GetCommandLineArgValue(String, Int32) Declaration public static int GetCommandLineArgValue(string argumentName, int nDefaultValue) Parameters Type Name Description System.String argumentName System.Int32 nDefaultValue Returns Type Description System.Int32 GetCommandLineArgValue(String, Single) Declaration public static float GetCommandLineArgValue(string argumentName, float flDefaultValue) Parameters Type Name Description System.String argumentName System.Single flDefaultValue Returns Type Description System.Single HasCommandLineArgument(String) Declaration public static bool HasCommandLineArgument(string argumentName) Parameters Type Name Description System.String argumentName Returns Type Description System.Boolean IgnoreCollisions(GameObject, GameObject) Declaration public static void IgnoreCollisions(GameObject goA, GameObject goB) Parameters Type Name Description UnityEngine.GameObject goA UnityEngine.GameObject goB IsNullOrEmpty<T>(T[]) Declaration public static bool IsNullOrEmpty<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description System.Boolean Type Parameters Name Description T IsValidIndex<T>(T[], Int32) Declaration public static bool IsValidIndex<T>(T[] array, int i) Parameters Type Name Description T[] array System.Int32 i Returns Type Description System.Boolean Type Parameters Name Description T IsValidIndex<T>(List<T>, Int32) Declaration public static bool IsValidIndex<T>(List<T> list, int i) Parameters Type Name Description System.Collections.Generic.List <T> list System.Int32 i Returns Type Description System.Boolean Type Parameters Name Description T Median<T>(IEnumerable<T>) Declaration public static T Median<T>(this IEnumerable<T> source) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> source Returns Type Description T Type Parameters Name Description T Normalize(Single, Single, Single) Declaration public static float Normalize(float value, float min, float max) Parameters Type Name Description System.Single value System.Single min System.Single max Returns Type Description System.Single PathLength(NavMeshPath) Declaration public static float PathLength(NavMeshPath path) Parameters Type Name Description UnityEngine.NavMeshPath path Returns Type Description System.Single Quit() Declaration public static void Quit() RandomWithLookback(Int32, Int32, List<Int32>, Int32) Declaration public static int RandomWithLookback(int min, int max, List<int> history, int historyCount) Parameters Type Name Description System.Int32 min System.Int32 max System.Collections.Generic.List < System.Int32 > history System.Int32 historyCount Returns Type Description System.Int32 RemapNumber(Single, Single, Single, Single, Single) Declaration public static float RemapNumber(float num, float low1, float high1, float low2, float high2) Parameters Type Name Description System.Single num System.Single low1 System.Single high1 System.Single low2 System.Single high2 Returns Type Description System.Single RemapNumberClamped(Single, Single, Single, Single, Single) Declaration public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2) Parameters Type Name Description System.Single num System.Single low1 System.Single high1 System.Single low2 System.Single high2 Returns Type Description System.Single ReplaceGameObject<T, U>(T, U) Declaration public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour Parameters Type Name Description T replace U replaceWith Type Parameters Name Description T U ResetTransform(Transform, Boolean) Declaration public static void ResetTransform(Transform t, bool resetScale = true) Parameters Type Name Description UnityEngine.Transform t System.Boolean resetScale SendPhysicsMessage(Collider, String, Object, SendMessageOptions) Declaration public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions) Parameters Type Name Description UnityEngine.Collider collider System.String message System.Object arg UnityEngine.SendMessageOptions sendMessageOptions SendPhysicsMessage(Collider, String, SendMessageOptions) Declaration public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions) Parameters Type Name Description UnityEngine.Collider collider System.String message UnityEngine.SendMessageOptions sendMessageOptions SetActive(GameObject, Boolean) Declaration public static void SetActive(GameObject gameObject, bool active) Parameters Type Name Description UnityEngine.GameObject gameObject System.Boolean active Shuffle<T>(T[]) Declaration public static void Shuffle<T>(T[] array) Parameters Type Name Description T[] array Type Parameters Name Description T Shuffle<T>(List<T>) Declaration public static void Shuffle<T>(List<T> list) Parameters Type Name Description System.Collections.Generic.List <T> list Type Parameters Name Description T Swap<T>(ref T, ref T) Declaration public static void Swap<T>(ref T lhs, ref T rhs) Parameters Type Name Description T lhs T rhs Type Parameters Name Description T SwitchLayerRecursively(Transform, Int32, Int32) Declaration public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer) Parameters Type Name Description UnityEngine.Transform transform System.Int32 fromLayer System.Int32 toLayer Vector2AsVector3(Vector2) Declaration public static Vector3 Vector2AsVector3(Vector2 v) Parameters Type Name Description UnityEngine.Vector2 v Returns Type Description UnityEngine.Vector3 Vector2FromString(String) Declaration public static Vector2 Vector2FromString(string szString) Parameters Type Name Description System.String szString Returns Type Description UnityEngine.Vector2 Vector3AsVector2(Vector3) Declaration public static Vector2 Vector3AsVector2(Vector3 v) Parameters Type Name Description UnityEngine.Vector3 v Returns Type Description UnityEngine.Vector2 Vector3FromString(String) Declaration public static Vector3 Vector3FromString(string szString) Parameters Type Name Description System.String szString Returns Type Description UnityEngine.Vector3 WrapCoroutine(IEnumerator, Action) Declaration public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished) Parameters Type Name Description System.Collections.IEnumerator coroutine System.Action onCoroutineFinished Returns Type Description System.Collections.IEnumerator YawOf(Vector3) Declaration public static float YawOf(Vector3 v) Parameters Type Name Description UnityEngine.Vector3 v Returns Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.Unparent.html": {
    "href": "api/Valve.VR.InteractionSystem.Unparent.html",
    "title": "Class Unparent | SteamVR Unity Plugin",
    "keywords": "Class Unparent Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Unparent Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Unparent : MonoBehaviour Methods GetOldParent() Declaration public Transform GetOldParent() Returns Type Description UnityEngine.Transform"
  },
  "api/Valve.VR.InteractionSystem.PlaySound.html": {
    "href": "api/Valve.VR.InteractionSystem.PlaySound.html",
    "title": "Class PlaySound | SteamVR Unity Plugin",
    "keywords": "Class PlaySound Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour PlaySound Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(AudioSource))] public class PlaySound : MonoBehaviour Fields delayOffsetTime Declaration [Header(\"Delay Time\")] [Tooltip(\"Time to offset playback of sound\")] public float delayOffsetTime Field Value Type Description System.Single disableOnEnd Declaration [Tooltip(\"After the audio clip finishes playing, disable the game object the sound is on.\")] public bool disableOnEnd Field Value Type Description System.Boolean looping Declaration [Tooltip(\"Loop the sound after the wave file variation has been chosen.\")] public bool looping Field Value Type Description System.Boolean percentToNotPlay Declaration [Tooltip(\"Percent chance that the wave file will not play\")] [Range(0F, 1F)] public float percentToNotPlay Field Value Type Description System.Single pitchMax Declaration [Tooltip(\"Maximum pitch that will be used when randomly set.\")] [Range(-3F, 3F)] public float pitchMax Field Value Type Description System.Single pitchMin Declaration [Tooltip(\"Minimum pitch that will be used when randomly set.\")] [Range(-3F, 3F)] public float pitchMin Field Value Type Description System.Single playOnAwakeWithDelay Declaration [Tooltip(\"Start a wave file playing on awake, but after a delay.\")] public bool playOnAwakeWithDelay Field Value Type Description System.Boolean stopOnEnd Declaration [Tooltip(\"If the sound is looping and updating it's position every frame, stop the sound at the end of the wav/clip length. \")] public bool stopOnEnd Field Value Type Description System.Boolean stopOnPlay Declaration [Tooltip(\"Stops the currently playing clip in the audioSource. Otherwise clips will overlap/mix.\")] public bool stopOnPlay Field Value Type Description System.Boolean timeInitial Declaration [Tooltip(\"Inital time before the first repetion starts\")] [Range(0F, 360F)] public float timeInitial Field Value Type Description System.Single timeMax Declaration [Tooltip(\"Maximum pitch that will be used when randomly set.\")] [Range(0F, 360F)] public float timeMax Field Value Type Description System.Single timeMin Declaration [Tooltip(\"Minimum time that will pass before the sound is retriggered\")] [Range(0F, 360F)] public float timeMin Field Value Type Description System.Single useRandomPitch Declaration [Header(\"Random Pitch\")] [Tooltip(\"Use min and max random pitch levels when playing sounds.\")] public bool useRandomPitch Field Value Type Description System.Boolean useRandomSilence Declaration [Header(\"Random Silence\")] [Tooltip(\"Use Retrigger Time to repeat the sound within a time range\")] public bool useRandomSilence Field Value Type Description System.Boolean useRandomVolume Declaration [Header(\"Random Volume\")] public bool useRandomVolume Field Value Type Description System.Boolean useRetriggerTime Declaration [Header(\"Random Time\")] [Tooltip(\"Use Retrigger Time to repeat the sound within a time range\")] public bool useRetriggerTime Field Value Type Description System.Boolean volMax Declaration [Tooltip(\"Maximum volume that will be used when randomly set.\")] [Range(0F, 1F)] public float volMax Field Value Type Description System.Single volMin Declaration [Tooltip(\"Minimum volume that will be used when randomly set.\")] [Range(0F, 1F)] public float volMin Field Value Type Description System.Single waveFile Declaration [Tooltip(\"List of audio clips to play.\")] public AudioClip[] waveFile Field Value Type Description UnityEngine.AudioClip [] Methods Disable() Declaration public void Disable() Play() Declaration public void Play() PlayLooping() Declaration public AudioClip PlayLooping() Returns Type Description UnityEngine.AudioClip PlayOneShotSound() Declaration public AudioClip PlayOneShotSound() Returns Type Description UnityEngine.AudioClip PlayWithDelay(Single) Declaration public void PlayWithDelay(float delayTime) Parameters Type Name Description System.Single delayTime Stop() Declaration public void Stop()"
  },
  "api/Valve.VR.InteractionSystem.Player.html": {
    "href": "api/Valve.VR.InteractionSystem.Player.html",
    "title": "Class Player | SteamVR Unity Plugin",
    "keywords": "Class Player Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Player Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Player : MonoBehaviour Fields allowToggleTo2D Declaration public bool allowToggleTo2D Field Value Type Description System.Boolean audioListener Declaration [Tooltip(\"The audio listener for this player\")] public Transform audioListener Field Value Type Description UnityEngine.Transform hands Declaration [Tooltip(\"List of possible Hands, including no-SteamVR fallback Hands.\")] public Hand[] hands Field Value Type Description Hand [] headCollider Declaration [Tooltip(\"Reference to the physics collider that follows the player's HMD position.\")] public Collider headCollider Field Value Type Description UnityEngine.Collider headsetOnHead Declaration [Tooltip(\"This action lets you know when the player has placed the headset on their head\")] public SteamVR_Action_Boolean headsetOnHead Field Value Type Description SteamVR_Action_Boolean hmdTransforms Declaration [Tooltip(\"List of possible transforms for the head/HMD, including the no-SteamVR fallback camera.\")] public Transform[] hmdTransforms Field Value Type Description UnityEngine.Transform [] rig2DFallback Declaration [Tooltip(\"These objects are enabled when SteamVR is not available, or when the user toggles out of VR\")] public GameObject rig2DFallback Field Value Type Description UnityEngine.GameObject rigSteamVR Declaration [Tooltip(\"These objects are enabled when SteamVR is available\")] public GameObject rigSteamVR Field Value Type Description UnityEngine.GameObject trackingOriginTransform Declaration [Tooltip(\"Virtual transform corresponding to the meatspace tracking origin. Devices are tracked relative to this.\")] public Transform trackingOriginTransform Field Value Type Description UnityEngine.Transform Properties bodyDirectionGuess Declaration public Vector3 bodyDirectionGuess { get; } Property Value Type Description UnityEngine.Vector3 eyeHeight Declaration public float eyeHeight { get; } Property Value Type Description System.Single feetPositionGuess Declaration public Vector3 feetPositionGuess { get; } Property Value Type Description UnityEngine.Vector3 handCount Declaration public int handCount { get; } Property Value Type Description System.Int32 hmdTransform Declaration public Transform hmdTransform { get; } Property Value Type Description UnityEngine.Transform instance Declaration public static Player instance { get; } Property Value Type Description Player leftHand Declaration public Hand leftHand { get; } Property Value Type Description Hand rightHand Declaration public Hand rightHand { get; } Property Value Type Description Hand scale Declaration public float scale { get; } Property Value Type Description System.Single Methods Draw2DDebug() Declaration public void Draw2DDebug() GetHand(Int32) Declaration public Hand GetHand(int i) Parameters Type Name Description System.Int32 i Returns Type Description Hand PlayerShotSelf() Declaration public void PlayerShotSelf() Update() Declaration protected virtual void Update()"
  },
  "api/Valve.VR.InteractionSystem.HandEditor.html": {
    "href": "api/Valve.VR.InteractionSystem.HandEditor.html",
    "title": "Class HandEditor | SteamVR Unity Plugin",
    "keywords": "Class HandEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor HandEditor Inherited Members UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.Repaint() UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.serializedObject UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [CustomEditor(typeof(Hand))] public class HandEditor : Editor, IPreviewable Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/Valve.VR.InteractionSystem.Hand.html": {
    "href": "api/Valve.VR.InteractionSystem.Hand.html",
    "title": "Class Hand | SteamVR Unity Plugin",
    "keywords": "Class Hand Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Hand Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Hand : MonoBehaviour Fields AngularVelocityMagic Declaration protected const float AngularVelocityMagic = 50F Field Value Type Description System.Single controllerHoverComponent Declaration public string controllerHoverComponent Field Value Type Description System.String controllerHoverRadius Declaration public float controllerHoverRadius Field Value Type Description System.Single defaultAttachmentFlags Declaration public const Hand.AttachmentFlags defaultAttachmentFlags = Hand.AttachmentFlags.SnapOnAttach | Hand.AttachmentFlags.DetachOthers | Hand.AttachmentFlags.DetachFromOtherHand | Hand.AttachmentFlags.ParentToHand | Hand.AttachmentFlags.TurnOnKinematic Field Value Type Description Hand.AttachmentFlags fingerJointHover Declaration public SteamVR_Skeleton_JointIndexEnum fingerJointHover Field Value Type Description SteamVR_Skeleton_JointIndexEnum fingerJointHoverRadius Declaration public float fingerJointHoverRadius Field Value Type Description System.Single grabGripAction Declaration public SteamVR_Action_Boolean grabGripAction Field Value Type Description SteamVR_Action_Boolean grabPinchAction Declaration public SteamVR_Action_Boolean grabPinchAction Field Value Type Description SteamVR_Action_Boolean handType Declaration public SteamVR_Input_Sources handType Field Value Type Description SteamVR_Input_Sources hapticAction Declaration public SteamVR_Action_Vibration hapticAction Field Value Type Description SteamVR_Action_Vibration hoverhighlightRenderModel Declaration protected RenderModel hoverhighlightRenderModel Field Value Type Description RenderModel hoverLayerMask Declaration public LayerMask hoverLayerMask Field Value Type Description UnityEngine.LayerMask hoverSphereRadius Declaration public float hoverSphereRadius Field Value Type Description System.Single hoverSphereTransform Declaration public Transform hoverSphereTransform Field Value Type Description UnityEngine.Transform hoverUpdateInterval Declaration public float hoverUpdateInterval Field Value Type Description System.Single mainRenderModel Declaration protected RenderModel mainRenderModel Field Value Type Description RenderModel MaxAngularVelocityChange Declaration protected const float MaxAngularVelocityChange = 20F Field Value Type Description System.Single MaxVelocityChange Declaration protected const float MaxVelocityChange = 10F Field Value Type Description System.Single noSteamVRFallbackCamera Declaration public Camera noSteamVRFallbackCamera Field Value Type Description UnityEngine.Camera noSteamVRFallbackMaxDistanceNoItem Declaration public float noSteamVRFallbackMaxDistanceNoItem Field Value Type Description System.Single noSteamVRFallbackMaxDistanceWithItem Declaration public float noSteamVRFallbackMaxDistanceWithItem Field Value Type Description System.Single objectAttachmentPoint Declaration [Tooltip(\"A transform on the hand to center attached objects on\")] public Transform objectAttachmentPoint Field Value Type Description UnityEngine.Transform otherHand Declaration public Hand otherHand Field Value Type Description Hand renderModelPrefab Declaration public GameObject renderModelPrefab Field Value Type Description UnityEngine.GameObject renderModels Declaration protected List<RenderModel> renderModels Field Value Type Description System.Collections.Generic.List < RenderModel > showDebugInteractables Declaration public bool showDebugInteractables Field Value Type Description System.Boolean showDebugText Declaration public bool showDebugText Field Value Type Description System.Boolean spewDebugText Declaration public bool spewDebugText Field Value Type Description System.Boolean trackedObject Declaration public SteamVR_Behaviour_Pose trackedObject Field Value Type Description SteamVR_Behaviour_Pose uiInteractAction Declaration public SteamVR_Action_Boolean uiInteractAction Field Value Type Description SteamVR_Action_Boolean useControllerHoverComponent Declaration public bool useControllerHoverComponent Field Value Type Description System.Boolean useFingerJointHover Declaration public bool useFingerJointHover Field Value Type Description System.Boolean useHoverSphere Declaration public bool useHoverSphere Field Value Type Description System.Boolean VelocityMagic Declaration protected const float VelocityMagic = 6000F Field Value Type Description System.Single Properties AttachedObjects Declaration public ReadOnlyCollection<Hand.AttachedObject> AttachedObjects { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < Hand.AttachedObject > currentAttachedObject Declaration public GameObject currentAttachedObject { get; } Property Value Type Description UnityEngine.GameObject currentAttachedObjectInfo Declaration public Hand.AttachedObject? currentAttachedObjectInfo { get; } Property Value Type Description System.Nullable < Hand.AttachedObject > hoveringInteractable Declaration public Interactable hoveringInteractable { get; set; } Property Value Type Description Interactable hoverLocked Declaration public bool hoverLocked { get; } Property Value Type Description System.Boolean isActive Declaration public bool isActive { get; } Property Value Type Description System.Boolean isPoseValid Declaration public bool isPoseValid { get; } Property Value Type Description System.Boolean skeleton Declaration public SteamVR_Behaviour_Skeleton skeleton { get; } Property Value Type Description SteamVR_Behaviour_Skeleton Methods AttachObject(GameObject, GrabTypes, Hand.AttachmentFlags, Transform) Declaration public void AttachObject(GameObject objectToAttach, GrabTypes grabbedWithType, Hand.AttachmentFlags flags = Hand.AttachmentFlags.SnapOnAttach | Hand.AttachmentFlags.DetachOthers | Hand.AttachmentFlags.DetachFromOtherHand | Hand.AttachmentFlags.ParentToHand | Hand.AttachmentFlags.TurnOnKinematic, Transform attachmentOffset = null) Parameters Type Name Description UnityEngine.GameObject objectToAttach GrabTypes grabbedWithType Hand.AttachmentFlags flags UnityEngine.Transform attachmentOffset Awake() Declaration protected virtual void Awake() CheckHoveringForTransform(Vector3, Single, ref Single, ref Interactable, Color) Declaration protected virtual bool CheckHoveringForTransform(Vector3 hoverPosition, float hoverRadius, ref float closestDistance, ref Interactable closestInteractable, Color debugColor) Parameters Type Name Description UnityEngine.Vector3 hoverPosition System.Single hoverRadius System.Single closestDistance Interactable closestInteractable UnityEngine.Color debugColor Returns Type Description System.Boolean DetachObject(GameObject, Boolean) Declaration public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true) Parameters Type Name Description UnityEngine.GameObject objectToDetach System.Boolean restoreOriginalParent FixedUpdate() Declaration protected virtual void FixedUpdate() ForceHoverUnlock() Declaration public void ForceHoverUnlock() GetBestGrabbingType() Declaration public GrabTypes GetBestGrabbingType() Returns Type Description GrabTypes GetBestGrabbingType(GrabTypes, Boolean) Declaration public GrabTypes GetBestGrabbingType(GrabTypes preferred, bool forcePreference = false) Parameters Type Name Description GrabTypes preferred System.Boolean forcePreference Returns Type Description GrabTypes GetDeviceIndex() Declaration public int GetDeviceIndex() Returns Type Description System.Int32 GetEstimatedPeakVelocities(out Vector3, out Vector3) Declaration public void GetEstimatedPeakVelocities(out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity GetGrabEnding(GrabTypes) Declaration public GrabTypes GetGrabEnding(GrabTypes explicitType = GrabTypes.None) Parameters Type Name Description GrabTypes explicitType Returns Type Description GrabTypes GetGrabStarting(GrabTypes) Declaration public GrabTypes GetGrabStarting(GrabTypes explicitType = GrabTypes.None) Parameters Type Name Description GrabTypes explicitType Returns Type Description GrabTypes GetTrackedObjectAngularVelocity(Single) Declaration public Vector3 GetTrackedObjectAngularVelocity(float timeOffset = 0F) Parameters Type Name Description System.Single timeOffset Returns Type Description UnityEngine.Vector3 GetTrackedObjectVelocity(Single) Declaration public Vector3 GetTrackedObjectVelocity(float timeOffset = 0F) Parameters Type Name Description System.Single timeOffset Returns Type Description UnityEngine.Vector3 GetUpdatedAttachedVelocities(Hand.AttachedObject, out Vector3, out Vector3) Declaration protected bool GetUpdatedAttachedVelocities(Hand.AttachedObject attachedObjectInfo, out Vector3 velocityTarget, out Vector3 angularTarget) Parameters Type Name Description Hand.AttachedObject attachedObjectInfo UnityEngine.Vector3 velocityTarget UnityEngine.Vector3 angularTarget Returns Type Description System.Boolean HandFollowUpdate() Declaration protected virtual void HandFollowUpdate() HasSkeleton() Declaration public bool HasSkeleton() Returns Type Description System.Boolean Hide() Declaration public void Hide() HideController(Boolean) Declaration public void HideController(bool permanent = false) Parameters Type Name Description System.Boolean permanent HideGrabHint() Declaration public void HideGrabHint() HideSkeleton(Boolean) Declaration public void HideSkeleton(bool permanent = false) Parameters Type Name Description System.Boolean permanent HoverLock(Interactable) Declaration public void HoverLock(Interactable interactable) Parameters Type Name Description Interactable interactable HoverUnlock(Interactable) Declaration public void HoverUnlock(Interactable interactable) Parameters Type Name Description Interactable interactable IsGrabbingWithOppositeType(GrabTypes) Declaration public bool IsGrabbingWithOppositeType(GrabTypes type) Parameters Type Name Description GrabTypes type Returns Type Description System.Boolean IsGrabbingWithType(GrabTypes) Declaration public bool IsGrabbingWithType(GrabTypes type) Parameters Type Name Description GrabTypes type Returns Type Description System.Boolean IsGrabEnding(GameObject) Declaration public bool IsGrabEnding(GameObject attachedObject) Parameters Type Name Description UnityEngine.GameObject attachedObject Returns Type Description System.Boolean IsStillHovering(Interactable) Returns true when the hand is currently hovering over the interactable passed in Declaration public bool IsStillHovering(Interactable interactable) Parameters Type Name Description Interactable interactable Returns Type Description System.Boolean ObjectIsAttached(GameObject) Declaration public bool ObjectIsAttached(GameObject go) Parameters Type Name Description UnityEngine.GameObject go Returns Type Description System.Boolean OnDestroy() Declaration protected virtual void OnDestroy() OnDisable() Declaration protected virtual void OnDisable() OnDrawGizmos() Declaration protected virtual void OnDrawGizmos() OnEnable() Declaration protected virtual void OnEnable() OnInputFocus(Boolean) Declaration protected virtual void OnInputFocus(bool hasFocus) Parameters Type Name Description System.Boolean hasFocus OnTransformUpdated(SteamVR_Behaviour_Pose, SteamVR_Input_Sources) Declaration protected virtual void OnTransformUpdated(SteamVR_Behaviour_Pose updatedPose, SteamVR_Input_Sources updatedSource) Parameters Type Name Description SteamVR_Behaviour_Pose updatedPose SteamVR_Input_Sources updatedSource ResetTemporarySkeletonRangeOfMotion(Single) Declaration public void ResetTemporarySkeletonRangeOfMotion(float blendOverSeconds = 0.1F) Parameters Type Name Description System.Single blendOverSeconds SetAnimationState(Int32) Declaration public void SetAnimationState(int stateValue) Parameters Type Name Description System.Int32 stateValue SetHoverRenderModel(RenderModel) Declaration public void SetHoverRenderModel(RenderModel hoverRenderModel) Parameters Type Name Description RenderModel hoverRenderModel SetRenderModel(GameObject) Declaration public void SetRenderModel(GameObject prefab) Parameters Type Name Description UnityEngine.GameObject prefab SetSkeletonRangeOfMotion(EVRSkeletalMotionRange, Single) Declaration public void SetSkeletonRangeOfMotion(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds = 0.1F) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion System.Single blendOverSeconds SetTemporarySkeletonRangeOfMotion(SkeletalMotionRangeChange, Single) Declaration public void SetTemporarySkeletonRangeOfMotion(SkeletalMotionRangeChange temporaryRangeOfMotionChange, float blendOverSeconds = 0.1F) Parameters Type Name Description SkeletalMotionRangeChange temporaryRangeOfMotionChange System.Single blendOverSeconds SetVisibility(Boolean) Declaration public void SetVisibility(bool visible) Parameters Type Name Description System.Boolean visible Show() Declaration public void Show() ShowController(Boolean) Declaration public void ShowController(bool permanent = false) Parameters Type Name Description System.Boolean permanent ShowGrabHint() Declaration public void ShowGrabHint() ShowGrabHint(String) Declaration public void ShowGrabHint(string text) Parameters Type Name Description System.String text ShowSkeleton(Boolean) Declaration public void ShowSkeleton(bool permanent = false) Parameters Type Name Description System.Boolean permanent Start() Declaration protected virtual IEnumerator Start() Returns Type Description System.Collections.IEnumerator StopAnimation() Declaration public void StopAnimation() TargetItemPosition(Hand.AttachedObject) Declaration protected Vector3 TargetItemPosition(Hand.AttachedObject attachedObject) Parameters Type Name Description Hand.AttachedObject attachedObject Returns Type Description UnityEngine.Vector3 TargetItemRotation(Hand.AttachedObject) Declaration protected Quaternion TargetItemRotation(Hand.AttachedObject attachedObject) Parameters Type Name Description Hand.AttachedObject attachedObject Returns Type Description UnityEngine.Quaternion TriggerHapticPulse(Single, Single, Single) Declaration public void TriggerHapticPulse(float duration, float frequency, float amplitude) Parameters Type Name Description System.Single duration System.Single frequency System.Single amplitude TriggerHapticPulse(UInt16) Declaration public void TriggerHapticPulse(ushort microSecondsDuration) Parameters Type Name Description System.UInt16 microSecondsDuration Update() Declaration protected virtual void Update() UpdateAttachedVelocity(Hand.AttachedObject) Declaration protected void UpdateAttachedVelocity(Hand.AttachedObject attachedObjectInfo) Parameters Type Name Description Hand.AttachedObject attachedObjectInfo UpdateHovering() Declaration protected virtual void UpdateHovering() UpdateNoSteamVRFallback() Declaration protected virtual void UpdateNoSteamVRFallback()"
  },
  "api/Valve.VR.InteractionSystem.ControllerHoverHighlight.html": {
    "href": "api/Valve.VR.InteractionSystem.ControllerHoverHighlight.html",
    "title": "Class ControllerHoverHighlight | SteamVR Unity Plugin",
    "keywords": "Class ControllerHoverHighlight Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ControllerHoverHighlight Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ControllerHoverHighlight : MonoBehaviour Fields fireHapticsOnHightlight Declaration public bool fireHapticsOnHightlight Field Value Type Description System.Boolean hand Declaration protected Hand hand Field Value Type Description Hand highLightMaterial Declaration public Material highLightMaterial Field Value Type Description UnityEngine.Material renderModel Declaration protected RenderModel renderModel Field Value Type Description RenderModel renderModelLoadedAction Declaration protected SteamVR_Events.Action renderModelLoadedAction Field Value Type Description SteamVR_Events.Action Methods Awake() Declaration protected void Awake() HideHighlight() Declaration public void HideHighlight() OnHandInitialized(Int32) Declaration protected void OnHandInitialized(int deviceIndex) Parameters Type Name Description System.Int32 deviceIndex OnParentHandHoverBegin(Interactable) Declaration protected void OnParentHandHoverBegin(Interactable other) Parameters Type Name Description Interactable other ShowHighlight() Declaration public void ShowHighlight()"
  },
  "api/Valve.VR.InteractionSystem.ControllerButtonHints.html": {
    "href": "api/Valve.VR.InteractionSystem.ControllerButtonHints.html",
    "title": "Class ControllerButtonHints | SteamVR Unity Plugin",
    "keywords": "Class ControllerButtonHints Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ControllerButtonHints Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ControllerButtonHints : MonoBehaviour Fields controllerMaterial Declaration public Material controllerMaterial Field Value Type Description UnityEngine.Material debugHints Declaration [Header(\"Debug\")] public bool debugHints Field Value Type Description System.Boolean flashColor Declaration public Color flashColor Field Value Type Description UnityEngine.Color hapticFlash Declaration public SteamVR_Action_Vibration hapticFlash Field Value Type Description SteamVR_Action_Vibration inputSource Declaration protected SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources textHintPrefab Declaration public GameObject textHintPrefab Field Value Type Description UnityEngine.GameObject Properties initialized Declaration public bool initialized { get; } Property Value Type Description System.Boolean Methods GetActiveHintText(Hand, ISteamVR_Action_In_Source) Declaration public static string GetActiveHintText(Hand hand, ISteamVR_Action_In_Source action) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source action Returns Type Description System.String HideAllButtonHints(Hand) Declaration public static void HideAllButtonHints(Hand hand) Parameters Type Name Description Hand hand HideAllTextHints(Hand) Declaration public static void HideAllTextHints(Hand hand) Parameters Type Name Description Hand hand HideButtonHint(Hand, ISteamVR_Action_In_Source[]) Declaration public static void HideButtonHint(Hand hand, params ISteamVR_Action_In_Source[] actions) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source [] actions HideTextHint(Hand, ISteamVR_Action_In_Source) Declaration public static void HideTextHint(Hand hand, ISteamVR_Action_In_Source action) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source action IsButtonHintActive(Hand, ISteamVR_Action_In_Source) Declaration public static bool IsButtonHintActive(Hand hand, ISteamVR_Action_In_Source action) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source action Returns Type Description System.Boolean SetInputSource(SteamVR_Input_Sources) Declaration public virtual void SetInputSource(SteamVR_Input_Sources newInputSource) Parameters Type Name Description SteamVR_Input_Sources newInputSource ShowButtonHint(Hand, ISteamVR_Action_In_Source[]) Declaration public static void ShowButtonHint(Hand hand, params ISteamVR_Action_In_Source[] actions) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source [] actions ShowTextHint(Hand, ISteamVR_Action_In_Source, String, Boolean) Declaration public static void ShowTextHint(Hand hand, ISteamVR_Action_In_Source action, string text, bool highlightButton = true) Parameters Type Name Description Hand hand ISteamVR_Action_In_Source action System.String text System.Boolean highlightButton"
  },
  "api/Valve.VR.SteamVR_Action_Vector2.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2.AxisHandler.html",
    "title": "Delegate SteamVR_Action_Vector2.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector2.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta); Parameters Type Name Description SteamVR_Action_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 axis UnityEngine.Vector2 delta"
  },
  "api/Valve.VR.SteamVR_Action_Vector2.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Vector2.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector2.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Vector2 fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Pose.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Pose.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Pose.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Pose.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Pose fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Action_Out_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Out_Source.html",
    "title": "Class SteamVR_Action_Out_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Out_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_Out_Source SteamVR_Action_Vibration_Source Implements ISteamVR_Action_Out_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.active SteamVR_Action_Source.activeBinding SteamVR_Action_Source.lastActive SteamVR_Action_Source.lastActiveBinding SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) SteamVR_Action_Source.Initialize() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class SteamVR_Action_Out_Source : SteamVR_Action_Source, ISteamVR_Action_Out_Source, ISteamVR_Action_Source Implements ISteamVR_Action_Out_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Out-2.html": {
    "href": "api/Valve.VR.SteamVR_Action_Out-2.html",
    "title": "Class SteamVR_Action_Out<SourceMap, SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Out<SourceMap, SourceElement> Inheritance System.Object SteamVR_Action SteamVR_Action <SourceMap, SourceElement> SteamVR_Action_Out<SourceMap, SourceElement> SteamVR_Action_Vibration Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_Out ISteamVR_Action ISteamVR_Action_Out_Source ISteamVR_Action_Source Inherited Members SteamVR_Action<SourceMap, SourceElement>.sourceMap SteamVR_Action<SourceMap, SourceElement>.Item[SteamVR_Input_Sources] SteamVR_Action<SourceMap, SourceElement>.fullPath SteamVR_Action<SourceMap, SourceElement>.handle SteamVR_Action<SourceMap, SourceElement>.actionSet SteamVR_Action<SourceMap, SourceElement>.direction SteamVR_Action<SourceMap, SourceElement>.active SteamVR_Action<SourceMap, SourceElement>.lastActive SteamVR_Action<SourceMap, SourceElement>.activeBinding SteamVR_Action<SourceMap, SourceElement>.lastActiveBinding SteamVR_Action<SourceMap, SourceElement>.initialized SteamVR_Action<SourceMap, SourceElement>.PreInitialize(String) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, Boolean) SteamVR_Action<SourceMap, SourceElement>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SourceMap, SourceElement>.TryNeedsInitData() SteamVR_Action<SourceMap, SourceElement>.Initialize(Boolean, Boolean) SteamVR_Action<SourceMap, SourceElement>.GetSourceMap() SteamVR_Action<SourceMap, SourceElement>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SourceMap, SourceElement>.InitAfterDeserialize() SteamVR_Action<SourceMap, SourceElement>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SourceMap, SourceElement>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public abstract class SteamVR_Action_Out<SourceMap, SourceElement> : SteamVR_Action<SourceMap, SourceElement>, IEquatable<SteamVR_Action>, ISteamVR_Action_Out, ISteamVR_Action, ISteamVR_Action_Out_Source, ISteamVR_Action_Source where SourceMap : SteamVR_Action_Source_Map<SourceElement>, new() where SourceElement : SteamVR_Action_Out_Source, new() Type Parameters Name Description SourceMap SourceElement Implements System.IEquatable<T> ISteamVR_Action_Out ISteamVR_Action ISteamVR_Action_Out_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_In_Source_Map-1.html": {
    "href": "api/Valve.VR.SteamVR_Action_In_Source_Map-1.html",
    "title": "Class SteamVR_Action_In_Source_Map<SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_In_Source_Map<SourceElement> Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map <SourceElement> SteamVR_Action_In_Source_Map<SourceElement> SteamVR_Action_Boolean_Source_Map SteamVR_Action_Pose_Source_Map<Source> SteamVR_Action_Single_Source_Map SteamVR_Action_Vector2_Source_Map SteamVR_Action_Vector3_Source_Map Inherited Members SteamVR_Action_Source_Map<SourceElement>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SourceElement>.sources SteamVR_Action_Source_Map<SourceElement>.Initialize() SteamVR_Action_Source_Map<SourceElement>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SourceElement>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_In_Source_Map<SourceElement> : SteamVR_Action_Source_Map<SourceElement> where SourceElement : SteamVR_Action_In_Source, new() Type Parameters Name Description SourceElement Fields updatingSources Declaration protected List<SteamVR_Input_Sources> updatingSources Field Value Type Description System.Collections.Generic.List < SteamVR_Input_Sources > Methods ForceAddSourceToUpdateList(SteamVR_Input_Sources) [Should not be called by user code] Forces the system to start updating the data for this action and the specified input source. Should only be used if you've set SteamVR_Action.startUpdatingSourceOnAccess to false. Declaration public void ForceAddSourceToUpdateList(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. IsUpdating(SteamVR_Input_Sources) [Should not be called by user code] Returns whether the system has determined this source should be updated (based on code calls) Should only be used if you've set SteamVR_Action.startUpdatingSourceOnAccess to false. Declaration public bool IsUpdating(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean OnAccessSource(SteamVR_Input_Sources) Declaration protected override void OnAccessSource(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Overrides Valve.VR.SteamVR_Action_Source_Map<SourceElement>.OnAccessSource(Valve.VR.SteamVR_Input_Sources) UpdateValues() [Should not be called by user code] Updates the data for all the input sources the system has detected need to be updated. Declaration public void UpdateValues()"
  },
  "api/Valve.VR.RenderModel_ComponentState_t.html": {
    "href": "api/Valve.VR.RenderModel_ComponentState_t.html",
    "title": "Struct RenderModel_ComponentState_t | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_ComponentState_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_ComponentState_t Fields mTrackingToComponentLocal Declaration public HmdMatrix34_t mTrackingToComponentLocal Field Value Type Description HmdMatrix34_t mTrackingToComponentRenderModel Declaration public HmdMatrix34_t mTrackingToComponentRenderModel Field Value Type Description HmdMatrix34_t uProperties Declaration public uint uProperties Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.OpenVRInterop.html": {
    "href": "api/Valve.VR.OpenVRInterop.html",
    "title": "Class OpenVRInterop | SteamVR Unity Plugin",
    "keywords": "Class OpenVRInterop Inheritance System.Object OpenVRInterop Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class OpenVRInterop"
  },
  "api/Valve.VR.InteractionSystem.TeleportArea.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportArea.html",
    "title": "Class TeleportArea | SteamVR Unity Plugin",
    "keywords": "Class TeleportArea Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TeleportMarkerBase TeleportArea Inherited Members TeleportMarkerBase.locked TeleportMarkerBase.markerActive TeleportMarkerBase.showReticle TeleportMarkerBase.SetLocked(Boolean) TeleportMarkerBase.TeleportPlayer(Vector3) UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class TeleportArea : TeleportMarkerBase Properties meshBounds Declaration public Bounds meshBounds { get; } Property Value Type Description UnityEngine.Bounds Methods Awake() Declaration public void Awake() Highlight(Boolean) Declaration public override void Highlight(bool highlight) Parameters Type Name Description System.Boolean highlight Overrides TeleportMarkerBase.Highlight(Boolean) SetAlpha(Single, Single) Declaration public override void SetAlpha(float tintAlpha, float alphaPercent) Parameters Type Name Description System.Single tintAlpha System.Single alphaPercent Overrides TeleportMarkerBase.SetAlpha(Single, Single) ShouldActivate(Vector3) Declaration public override bool ShouldActivate(Vector3 playerPosition) Parameters Type Name Description UnityEngine.Vector3 playerPosition Returns Type Description System.Boolean Overrides TeleportMarkerBase.ShouldActivate(Vector3) ShouldMovePlayer() Declaration public override bool ShouldMovePlayer() Returns Type Description System.Boolean Overrides TeleportMarkerBase.ShouldMovePlayer() Start() Declaration public void Start() UpdateVisuals() Declaration public override void UpdateVisuals() Overrides TeleportMarkerBase.UpdateVisuals() UpdateVisualsInEditor() Declaration public void UpdateVisualsInEditor()"
  },
  "api/Valve.VR.InteractionSystem.TeleportArc.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportArc.html",
    "title": "Class TeleportArc | SteamVR Unity Plugin",
    "keywords": "Class TeleportArc Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TeleportArc Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class TeleportArc : MonoBehaviour Fields arcDuration Declaration [Tooltip(\"The amount of time in seconds to predict the motion of the projectile.\")] public float arcDuration Field Value Type Description System.Single arcSpeed Declaration [Tooltip(\"The speed at which the line segments of the arc move.\")] public float arcSpeed Field Value Type Description System.Single material Declaration public Material material Field Value Type Description UnityEngine.Material segmentBreak Declaration [Tooltip(\"The amount of time in seconds between each segment of the projectile.\")] public float segmentBreak Field Value Type Description System.Single segmentCount Declaration public int segmentCount Field Value Type Description System.Int32 thickness Declaration public float thickness Field Value Type Description System.Single traceLayerMask Declaration [HideInInspector] public int traceLayerMask Field Value Type Description System.Int32 Methods DrawArc(out RaycastHit) Declaration public bool DrawArc(out RaycastHit hitInfo) Parameters Type Name Description UnityEngine.RaycastHit hitInfo Returns Type Description System.Boolean GetArcPositionAtTime(Single) Declaration public Vector3 GetArcPositionAtTime(float time) Parameters Type Name Description System.Single time Returns Type Description UnityEngine.Vector3 Hide() Declaration public void Hide() SetArcData(Vector3, Vector3, Boolean, Boolean) Declaration public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle) Parameters Type Name Description UnityEngine.Vector3 position UnityEngine.Vector3 velocity System.Boolean gravity System.Boolean pointerAtBadAngle SetColor(Color) Declaration public void SetColor(Color color) Parameters Type Name Description UnityEngine.Color color Show() Declaration public void Show()"
  },
  "api/Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t.html": {
    "href": "api/Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t.html",
    "title": "Struct VROverlayIntersectionMaskPrimitive_Data_t | SteamVR Unity Plugin",
    "keywords": "Struct VROverlayIntersectionMaskPrimitive_Data_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VROverlayIntersectionMaskPrimitive_Data_t Fields m_Circle Declaration public IntersectionMaskCircle_t m_Circle Field Value Type Description IntersectionMaskCircle_t m_Rectangle Declaration public IntersectionMaskRectangle_t m_Rectangle Field Value Type Description IntersectionMaskRectangle_t"
  },
  "api/Valve.VR.VROverlayInputMethod.html": {
    "href": "api/Valve.VR.VROverlayInputMethod.html",
    "title": "Enum VROverlayInputMethod | SteamVR Unity Plugin",
    "keywords": "Enum VROverlayInputMethod Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum VROverlayInputMethod Fields Name Description DualAnalog Mouse None"
  },
  "api/Valve.VR.VREvent_Ipd_t.html": {
    "href": "api/Valve.VR.VREvent_Ipd_t.html",
    "title": "Struct VREvent_Ipd_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Ipd_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Ipd_t Fields ipdMeters Declaration public float ipdMeters Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_InputBindingLoad_t.html": {
    "href": "api/Valve.VR.VREvent_InputBindingLoad_t.html",
    "title": "Struct VREvent_InputBindingLoad_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_InputBindingLoad_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_InputBindingLoad_t Fields pathControllerType Declaration public ulong pathControllerType Field Value Type Description System.UInt64 pathMessage Declaration public ulong pathMessage Field Value Type Description System.UInt64 pathUrl Declaration public ulong pathUrl Field Value Type Description System.UInt64 ulAppContainer Declaration public ulong ulAppContainer Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_InputActionManifestLoad_t.html": {
    "href": "api/Valve.VR.VREvent_InputActionManifestLoad_t.html",
    "title": "Struct VREvent_InputActionManifestLoad_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_InputActionManifestLoad_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_InputActionManifestLoad_t Fields pathAppKey Declaration public ulong pathAppKey Field Value Type Description System.UInt64 pathManifestPath Declaration public ulong pathManifestPath Field Value Type Description System.UInt64 pathMessage Declaration public ulong pathMessage Field Value Type Description System.UInt64 pathMessageParam Declaration public ulong pathMessageParam Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_HDCPError_t.html": {
    "href": "api/Valve.VR.VREvent_HDCPError_t.html",
    "title": "Struct VREvent_HDCPError_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_HDCPError_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_HDCPError_t Fields eCode Declaration public EHDCPError eCode Field Value Type Description EHDCPError"
  },
  "api/Valve.VR.SteamVR_Skeleton_Poser.SkeletonBlendablePose.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_Poser.SkeletonBlendablePose.html",
    "title": "Class SteamVR_Skeleton_Poser.SkeletonBlendablePose | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_Poser.SkeletonBlendablePose A SkeletonBlendablePose holds a reference to a Skeleton_Pose scriptableObject, and also contains some helper functions. Also handles pose-specific animation like additive finger motion. Inheritance System.Object SteamVR_Skeleton_Poser.SkeletonBlendablePose Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SkeletonBlendablePose Constructors SkeletonBlendablePose() Declaration public SkeletonBlendablePose() SkeletonBlendablePose(SteamVR_Skeleton_Pose) Init based on an existing Skeleton_Pose Declaration public SkeletonBlendablePose(SteamVR_Skeleton_Pose p) Parameters Type Name Description SteamVR_Skeleton_Pose p Fields pose Declaration public SteamVR_Skeleton_Pose pose Field Value Type Description SteamVR_Skeleton_Pose snapshotL Declaration public SteamVR_Skeleton_PoseSnapshot snapshotL Field Value Type Description SteamVR_Skeleton_PoseSnapshot snapshotR Declaration public SteamVR_Skeleton_PoseSnapshot snapshotR Field Value Type Description SteamVR_Skeleton_PoseSnapshot Methods GetHandSnapshot(SteamVR_Input_Sources) Get the snapshot of this pose with effects such as additive finger animation applied. Declaration public SteamVR_Skeleton_PoseSnapshot GetHandSnapshot(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description SteamVR_Skeleton_PoseSnapshot PoseToSnapshots() Copy the base pose into the snapshots. Declaration public void PoseToSnapshots() UpdateAdditiveAnimation(SteamVR_Action_Skeleton, SteamVR_Input_Sources) Declaration public void UpdateAdditiveAnimation(SteamVR_Action_Skeleton skeletonAction, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Skeleton skeletonAction SteamVR_Input_Sources inputSource"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool active); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_ActionSet_Manager.html": {
    "href": "api/Valve.VR.SteamVR_ActionSet_Manager.html",
    "title": "Class SteamVR_ActionSet_Manager | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_ActionSet_Manager Action sets are logical groupings of actions. Multiple sets can be active at one time. Inheritance System.Object SteamVR_ActionSet_Manager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public static class SteamVR_ActionSet_Manager Fields debugActiveSetListText Declaration public static string debugActiveSetListText Field Value Type Description System.String rawActiveActionSetArray Declaration public static VRActiveActionSet_t[] rawActiveActionSetArray Field Value Type Description VRActiveActionSet_t [] updateDebugTextInBuilds Declaration public static bool updateDebugTextInBuilds Field Value Type Description System.Boolean Methods DisableAllActionSets() Disable all known action sets. Declaration public static void DisableAllActionSets() GetSetFromHandle(UInt64) Declaration public static SteamVR_ActionSet GetSetFromHandle(ulong handle) Parameters Type Name Description System.UInt64 handle Returns Type Description SteamVR_ActionSet Initialize() Declaration public static void Initialize() SetChanged() Declaration public static void SetChanged() UpdateActionStates(Boolean) Declaration public static void UpdateActionStates(bool force = false) Parameters Type Name Description System.Boolean force"
  },
  "api/Valve.VR.IVRDriverManager.html": {
    "href": "api/Valve.VR.IVRDriverManager.html",
    "title": "Struct IVRDriverManager | SteamVR Unity Plugin",
    "keywords": "Struct IVRDriverManager Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRDriverManager"
  },
  "api/Valve.VR.IVRCompositor.html": {
    "href": "api/Valve.VR.IVRCompositor.html",
    "title": "Struct IVRCompositor | SteamVR Unity Plugin",
    "keywords": "Struct IVRCompositor Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRCompositor"
  },
  "api/Valve.VR.IVRChaperoneSetup.html": {
    "href": "api/Valve.VR.IVRChaperoneSetup.html",
    "title": "Struct IVRChaperoneSetup | SteamVR Unity Plugin",
    "keywords": "Struct IVRChaperoneSetup Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRChaperoneSetup"
  },
  "api/Valve.VR.IVRChaperone.html": {
    "href": "api/Valve.VR.IVRChaperone.html",
    "title": "Struct IVRChaperone | SteamVR Unity Plugin",
    "keywords": "Struct IVRChaperone Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRChaperone"
  },
  "api/Valve.VR.InteractionSystem.TeleportPoint.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportPoint.html",
    "title": "Class TeleportPoint | SteamVR Unity Plugin",
    "keywords": "Class TeleportPoint Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TeleportMarkerBase TeleportPoint Inherited Members TeleportMarkerBase.locked TeleportMarkerBase.markerActive TeleportMarkerBase.SetLocked(Boolean) TeleportMarkerBase.TeleportPlayer(Vector3) UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class TeleportPoint : TeleportMarkerBase Fields playerSpawnPoint Declaration public bool playerSpawnPoint Field Value Type Description System.Boolean switchToScene Declaration public string switchToScene Field Value Type Description System.String teleportType Declaration public TeleportPoint.TeleportPointType teleportType Field Value Type Description TeleportPoint.TeleportPointType title Declaration public string title Field Value Type Description System.String titleHighlightedColor Declaration public Color titleHighlightedColor Field Value Type Description UnityEngine.Color titleLockedColor Declaration public Color titleLockedColor Field Value Type Description UnityEngine.Color titleVisibleColor Declaration public Color titleVisibleColor Field Value Type Description UnityEngine.Color Properties showReticle Declaration public override bool showReticle { get; } Property Value Type Description System.Boolean Overrides TeleportMarkerBase.showReticle Methods GetRelevantComponents() Declaration public void GetRelevantComponents() Highlight(Boolean) Declaration public override void Highlight(bool highlight) Parameters Type Name Description System.Boolean highlight Overrides TeleportMarkerBase.Highlight(Boolean) ReleaseRelevantComponents() Declaration public void ReleaseRelevantComponents() SetAlpha(Single, Single) Declaration public override void SetAlpha(float tintAlpha, float alphaPercent) Parameters Type Name Description System.Single tintAlpha System.Single alphaPercent Overrides TeleportMarkerBase.SetAlpha(Single, Single) SetMeshMaterials(Material, Color) Declaration public void SetMeshMaterials(Material material, Color textColor) Parameters Type Name Description UnityEngine.Material material UnityEngine.Color textColor ShouldActivate(Vector3) Declaration public override bool ShouldActivate(Vector3 playerPosition) Parameters Type Name Description UnityEngine.Vector3 playerPosition Returns Type Description System.Boolean Overrides TeleportMarkerBase.ShouldActivate(Vector3) ShouldMovePlayer() Declaration public override bool ShouldMovePlayer() Returns Type Description System.Boolean Overrides TeleportMarkerBase.ShouldMovePlayer() TeleportToScene() Declaration public void TeleportToScene() UpdateVisuals() Declaration public override void UpdateVisuals() Overrides TeleportMarkerBase.UpdateVisuals() UpdateVisualsInEditor() Declaration public void UpdateVisualsInEditor()"
  },
  "api/Valve.VR.InteractionSystem.TeleportPoint.TeleportPointType.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportPoint.TeleportPointType.html",
    "title": "Enum TeleportPoint.TeleportPointType | SteamVR Unity Plugin",
    "keywords": "Enum TeleportPoint.TeleportPointType Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum TeleportPointType Fields Name Description MoveToLocation SwitchToNewScene"
  },
  "api/Valve.VR.InteractionSystem.TeleportMarkerBase.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportMarkerBase.html",
    "title": "Class TeleportMarkerBase | SteamVR Unity Plugin",
    "keywords": "Class TeleportMarkerBase Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TeleportMarkerBase TeleportArea TeleportPoint Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public abstract class TeleportMarkerBase : MonoBehaviour Fields locked Declaration public bool locked Field Value Type Description System.Boolean markerActive Declaration public bool markerActive Field Value Type Description System.Boolean Properties showReticle Declaration public virtual bool showReticle { get; } Property Value Type Description System.Boolean Methods Highlight(Boolean) Declaration public abstract void Highlight(bool highlight) Parameters Type Name Description System.Boolean highlight SetAlpha(Single, Single) Declaration public abstract void SetAlpha(float tintAlpha, float alphaPercent) Parameters Type Name Description System.Single tintAlpha System.Single alphaPercent SetLocked(Boolean) Declaration public void SetLocked(bool locked) Parameters Type Name Description System.Boolean locked ShouldActivate(Vector3) Declaration public abstract bool ShouldActivate(Vector3 playerPosition) Parameters Type Name Description UnityEngine.Vector3 playerPosition Returns Type Description System.Boolean ShouldMovePlayer() Declaration public abstract bool ShouldMovePlayer() Returns Type Description System.Boolean TeleportPlayer(Vector3) Declaration public virtual void TeleportPlayer(Vector3 pointedAtPosition) Parameters Type Name Description UnityEngine.Vector3 pointedAtPosition UpdateVisuals() Declaration public abstract void UpdateVisuals()"
  },
  "api/Valve.VR.InteractionSystem.TeleportAreaEditor.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportAreaEditor.html",
    "title": "Class TeleportAreaEditor | SteamVR Unity Plugin",
    "keywords": "Class TeleportAreaEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor TeleportAreaEditor Inherited Members UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.Repaint() UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.serializedObject UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [CustomEditor(typeof(TeleportArea))] public class TeleportAreaEditor : Editor, IPreviewable Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/Valve.VR.InteractionSystem.Longbow.Handedness.html": {
    "href": "api/Valve.VR.InteractionSystem.Longbow.Handedness.html",
    "title": "Enum Longbow.Handedness | SteamVR Unity Plugin",
    "keywords": "Enum Longbow.Handedness Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum Handedness Fields Name Description Left Right"
  },
  "api/Valve.VR.InteractionSystem.LinearMapping.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearMapping.html",
    "title": "Class LinearMapping | SteamVR Unity Plugin",
    "keywords": "Class LinearMapping Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearMapping Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearMapping : MonoBehaviour Fields value Declaration public float value Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.IgnoreTeleportTrace.html": {
    "href": "api/Valve.VR.InteractionSystem.IgnoreTeleportTrace.html",
    "title": "Class IgnoreTeleportTrace | SteamVR Unity Plugin",
    "keywords": "Class IgnoreTeleportTrace Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour IgnoreTeleportTrace Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class IgnoreTeleportTrace : MonoBehaviour"
  },
  "api/Valve.VR.SteamVR_Events.html": {
    "href": "api/Valve.VR.SteamVR_Events.html",
    "title": "Class SteamVR_Events | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events Inheritance System.Object SteamVR_Events Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public static class SteamVR_Events Fields Calibrating Declaration public static SteamVR_Events.Event<bool> Calibrating Field Value Type Description SteamVR_Events.Event < System.Boolean > DeviceConnected Declaration public static SteamVR_Events.Event<int, bool> DeviceConnected Field Value Type Description SteamVR_Events.Event < System.Int32 , System.Boolean > Fade Declaration public static SteamVR_Events.Event<Color, float, bool> Fade Field Value Type Description SteamVR_Events.Event < UnityEngine.Color , System.Single , System.Boolean > FadeReady Declaration public static SteamVR_Events.Event FadeReady Field Value Type Description SteamVR_Events.Event HideRenderModels Declaration public static SteamVR_Events.Event<bool> HideRenderModels Field Value Type Description SteamVR_Events.Event < System.Boolean > Initialized Declaration public static SteamVR_Events.Event<bool> Initialized Field Value Type Description SteamVR_Events.Event < System.Boolean > Initializing Declaration public static SteamVR_Events.Event<bool> Initializing Field Value Type Description SteamVR_Events.Event < System.Boolean > InputFocus Declaration public static SteamVR_Events.Event<bool> InputFocus Field Value Type Description SteamVR_Events.Event < System.Boolean > Loading Declaration public static SteamVR_Events.Event<bool> Loading Field Value Type Description SteamVR_Events.Event < System.Boolean > LoadingFadeIn Declaration public static SteamVR_Events.Event<float> LoadingFadeIn Field Value Type Description SteamVR_Events.Event < System.Single > LoadingFadeOut Declaration public static SteamVR_Events.Event<float> LoadingFadeOut Field Value Type Description SteamVR_Events.Event < System.Single > NewPoses Declaration public static SteamVR_Events.Event<TrackedDevicePose_t[]> NewPoses Field Value Type Description SteamVR_Events.Event < TrackedDevicePose_t []> NewPosesApplied Declaration public static SteamVR_Events.Event NewPosesApplied Field Value Type Description SteamVR_Events.Event OutOfRange Declaration public static SteamVR_Events.Event<bool> OutOfRange Field Value Type Description SteamVR_Events.Event < System.Boolean > RenderModelLoaded Declaration public static SteamVR_Events.Event<SteamVR_RenderModel, bool> RenderModelLoaded Field Value Type Description SteamVR_Events.Event < SteamVR_RenderModel , System.Boolean > Methods CalibratingAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action CalibratingAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action DeviceConnectedAction(UnityAction<Int32, Boolean>) Declaration public static SteamVR_Events.Action DeviceConnectedAction(UnityAction<int, bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Int32 , System.Boolean > action Returns Type Description SteamVR_Events.Action FadeAction(UnityAction<Color, Single, Boolean>) Declaration public static SteamVR_Events.Action FadeAction(UnityAction<Color, float, bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < UnityEngine.Color , System.Single , System.Boolean > action Returns Type Description SteamVR_Events.Action FadeReadyAction(UnityAction) Declaration public static SteamVR_Events.Action FadeReadyAction(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action Returns Type Description SteamVR_Events.Action HideRenderModelsAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action HideRenderModelsAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action InitializedAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action InitializedAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action InitializingAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action InitializingAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action InputFocusAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action InputFocusAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action LoadingAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action LoadingAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action LoadingFadeInAction(UnityAction<Single>) Declaration public static SteamVR_Events.Action LoadingFadeInAction(UnityAction<float> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Single > action Returns Type Description SteamVR_Events.Action LoadingFadeOutAction(UnityAction<Single>) Declaration public static SteamVR_Events.Action LoadingFadeOutAction(UnityAction<float> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Single > action Returns Type Description SteamVR_Events.Action NewPosesAction(UnityAction<TrackedDevicePose_t[]>) Declaration public static SteamVR_Events.Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action) Parameters Type Name Description UnityEngine.Events.UnityAction < TrackedDevicePose_t []> action Returns Type Description SteamVR_Events.Action NewPosesAppliedAction(UnityAction) Declaration public static SteamVR_Events.Action NewPosesAppliedAction(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action Returns Type Description SteamVR_Events.Action OutOfRangeAction(UnityAction<Boolean>) Declaration public static SteamVR_Events.Action OutOfRangeAction(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Boolean > action Returns Type Description SteamVR_Events.Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, Boolean>) Declaration public static SteamVR_Events.Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < SteamVR_RenderModel , System.Boolean > action Returns Type Description SteamVR_Events.Action System(EVREventType) Declaration public static SteamVR_Events.Event<VREvent_t> System(EVREventType eventType) Parameters Type Name Description EVREventType eventType Returns Type Description SteamVR_Events.Event < VREvent_t > SystemAction(EVREventType, UnityAction<VREvent_t>) Declaration public static SteamVR_Events.Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action) Parameters Type Name Description EVREventType eventType UnityEngine.Events.UnityAction < VREvent_t > action Returns Type Description SteamVR_Events.Action"
  },
  "api/Valve.VR.SteamVR_Events.Event.html": {
    "href": "api/Valve.VR.SteamVR_Events.Event.html",
    "title": "Class SteamVR_Events.Event | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Event Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent SteamVR_Events.Event Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent.AddListener(UnityEngine.Events.UnityAction) UnityEngine.Events.UnityEvent.RemoveListener(UnityEngine.Events.UnityAction) UnityEngine.Events.UnityEvent.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent.Invoke() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class Event : UnityEvent, ISerializationCallbackReceiver Methods Listen(UnityAction) Declaration public void Listen(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action Remove(UnityAction) Declaration public void Remove(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action Send() Declaration public void Send() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.IVRRenderModels.html": {
    "href": "api/Valve.VR.IVRRenderModels.html",
    "title": "Struct IVRRenderModels | SteamVR Unity Plugin",
    "keywords": "Struct IVRRenderModels Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRRenderModels"
  },
  "api/Valve.VR.IVROverlay.html": {
    "href": "api/Valve.VR.IVROverlay.html",
    "title": "Struct IVROverlay | SteamVR Unity Plugin",
    "keywords": "Struct IVROverlay Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVROverlay"
  },
  "api/Valve.VR.InteractionSystem.GrabTypes.html": {
    "href": "api/Valve.VR.InteractionSystem.GrabTypes.html",
    "title": "Enum GrabTypes | SteamVR Unity Plugin",
    "keywords": "Enum GrabTypes Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum GrabTypes Fields Name Description Grip None Pinch Scripted Trigger"
  },
  "api/Valve.VR.InteractionSystem.FireSource.html": {
    "href": "api/Valve.VR.InteractionSystem.FireSource.html",
    "title": "Class FireSource | SteamVR Unity Plugin",
    "keywords": "Class FireSource Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FireSource Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class FireSource : MonoBehaviour Fields burnTime Declaration public float burnTime Field Value Type Description System.Single canSpreadFromThisSource Declaration public bool canSpreadFromThisSource Field Value Type Description System.Boolean customParticles Declaration public ParticleSystem customParticles Field Value Type Description UnityEngine.ParticleSystem fireParticlePrefab Declaration public GameObject fireParticlePrefab Field Value Type Description UnityEngine.GameObject ignitionDelay Declaration public float ignitionDelay Field Value Type Description System.Single ignitionSound Declaration public AudioSource ignitionSound Field Value Type Description UnityEngine.AudioSource isBurning Declaration public bool isBurning Field Value Type Description System.Boolean startActive Declaration public bool startActive Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.EVRTrackedCameraError.html": {
    "href": "api/Valve.VR.EVRTrackedCameraError.html",
    "title": "Enum EVRTrackedCameraError | SteamVR Unity Plugin",
    "keywords": "Enum EVRTrackedCameraError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRTrackedCameraError Fields Name Description FailedToGetGLTextureId FrameBufferingFailure InvalidArgument InvalidFrameBufferSize InvalidFrameHeaderVersion InvalidGLTextureId InvalidHandle InvalidSharedTextureHandle IPCFailure NoFrameAvailable None NotSupportedForThisDevice OperationFailed OutOfHandles SharedMemoryFailure SharedTextureFailure StreamSetupFailure"
  },
  "api/Valve.VR.EVRNotificationType.html": {
    "href": "api/Valve.VR.EVRNotificationType.html",
    "title": "Enum EVRNotificationType | SteamVR Unity Plugin",
    "keywords": "Enum EVRNotificationType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRNotificationType Fields Name Description Persistent Transient Transient_SystemWithUserValue"
  },
  "api/Valve.VR.ETrackedPropertyError.html": {
    "href": "api/Valve.VR.ETrackedPropertyError.html",
    "title": "Enum ETrackedPropertyError | SteamVR Unity Plugin",
    "keywords": "Enum ETrackedPropertyError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackedPropertyError Fields Name Description TrackedProp_BufferTooSmall TrackedProp_CannotWriteToWildcards TrackedProp_CouldNotContactServer TrackedProp_InvalidDevice TrackedProp_InvalidOperation TrackedProp_IPCReadFailure TrackedProp_NotYetAvailable TrackedProp_PermissionDenied TrackedProp_StringExceedsMaximumLength TrackedProp_Success TrackedProp_UnknownProperty TrackedProp_ValueNotProvidedByDevice TrackedProp_WrongDataType TrackedProp_WrongDeviceClass"
  },
  "api/Valve.VR.OpenVR.html": {
    "href": "api/Valve.VR.OpenVR.html",
    "title": "Class OpenVR | SteamVR Unity Plugin",
    "keywords": "Class OpenVR Inheritance System.Object OpenVR Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class OpenVR Fields IVRApplications_Version Declaration public const string IVRApplications_Version = \"IVRApplications_006\" Field Value Type Description System.String IVRChaperone_Version Declaration public const string IVRChaperone_Version = \"IVRChaperone_003\" Field Value Type Description System.String IVRChaperoneSetup_Version Declaration public const string IVRChaperoneSetup_Version = \"IVRChaperoneSetup_006\" Field Value Type Description System.String IVRCompositor_Version Declaration public const string IVRCompositor_Version = \"IVRCompositor_022\" Field Value Type Description System.String IVRDriverManager_Version Declaration public const string IVRDriverManager_Version = \"IVRDriverManager_001\" Field Value Type Description System.String IVRExtendedDisplay_Version Declaration public const string IVRExtendedDisplay_Version = \"IVRExtendedDisplay_001\" Field Value Type Description System.String IVRInput_Version Declaration public const string IVRInput_Version = \"IVRInput_005\" Field Value Type Description System.String IVRIOBuffer_Version Declaration public const string IVRIOBuffer_Version = \"IVRIOBuffer_002\" Field Value Type Description System.String IVRNotifications_Version Declaration public const string IVRNotifications_Version = \"IVRNotifications_002\" Field Value Type Description System.String IVROverlay_Version Declaration public const string IVROverlay_Version = \"IVROverlay_019\" Field Value Type Description System.String IVRRenderModels_Version Declaration public const string IVRRenderModels_Version = \"IVRRenderModels_006\" Field Value Type Description System.String IVRResources_Version Declaration public const string IVRResources_Version = \"IVRResources_001\" Field Value Type Description System.String IVRScreenshots_Version Declaration public const string IVRScreenshots_Version = \"IVRScreenshots_001\" Field Value Type Description System.String IVRSettings_Version Declaration public const string IVRSettings_Version = \"IVRSettings_002\" Field Value Type Description System.String IVRSpatialAnchors_Version Declaration public const string IVRSpatialAnchors_Version = \"IVRSpatialAnchors_001\" Field Value Type Description System.String IVRSystem_Version Declaration public const string IVRSystem_Version = \"IVRSystem_019\" Field Value Type Description System.String IVRTrackedCamera_Version Declaration public const string IVRTrackedCamera_Version = \"IVRTrackedCamera_005\" Field Value Type Description System.String k_nDriverNone Declaration public const uint k_nDriverNone = 4294967295U Field Value Type Description System.UInt32 k_pch_App_BindingAutosaveURLSuffix_String Declaration public const string k_pch_App_BindingAutosaveURLSuffix_String = \"AutosaveURL\" Field Value Type Description System.String k_pch_App_BindingCurrentURLSuffix_String Declaration public const string k_pch_App_BindingCurrentURLSuffix_String = \"CurrentURL\" Field Value Type Description System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool Declaration public const string k_pch_App_NeedToUpdateAutosaveSuffix_Bool = \"NeedToUpdateAutosave\" Field Value Type Description System.String k_pch_audio_OffPlaybackDevice_String Declaration public const string k_pch_audio_OffPlaybackDevice_String = \"offPlaybackDevice\" Field Value Type Description System.String k_pch_audio_OffRecordDevice_String Declaration public const string k_pch_audio_OffRecordDevice_String = \"offRecordDevice\" Field Value Type Description System.String k_pch_audio_OnPlaybackDevice_String Declaration public const string k_pch_audio_OnPlaybackDevice_String = \"onPlaybackDevice\" Field Value Type Description System.String k_pch_audio_OnPlaybackMirrorDevice_String Declaration public const string k_pch_audio_OnPlaybackMirrorDevice_String = \"onPlaybackMirrorDevice\" Field Value Type Description System.String k_pch_audio_OnRecordDevice_String Declaration public const string k_pch_audio_OnRecordDevice_String = \"onRecordDevice\" Field Value Type Description System.String k_pch_audio_Section Declaration public const string k_pch_audio_Section = \"audio\" Field Value Type Description System.String k_pch_audio_VIVEHDMIGain Declaration public const string k_pch_audio_VIVEHDMIGain = \"viveHDMIGain\" Field Value Type Description System.String k_pch_Camera_BoundsColorGammaA_Int32 Declaration public const string k_pch_Camera_BoundsColorGammaA_Int32 = \"cameraBoundsColorGammaA\" Field Value Type Description System.String k_pch_Camera_BoundsColorGammaB_Int32 Declaration public const string k_pch_Camera_BoundsColorGammaB_Int32 = \"cameraBoundsColorGammaB\" Field Value Type Description System.String k_pch_Camera_BoundsColorGammaG_Int32 Declaration public const string k_pch_Camera_BoundsColorGammaG_Int32 = \"cameraBoundsColorGammaG\" Field Value Type Description System.String k_pch_Camera_BoundsColorGammaR_Int32 Declaration public const string k_pch_Camera_BoundsColorGammaR_Int32 = \"cameraBoundsColorGammaR\" Field Value Type Description System.String k_pch_Camera_BoundsStrength_Int32 Declaration public const string k_pch_Camera_BoundsStrength_Int32 = \"cameraBoundsStrength\" Field Value Type Description System.String k_pch_Camera_EnableCamera_Bool Declaration public const string k_pch_Camera_EnableCamera_Bool = \"enableCamera\" Field Value Type Description System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool Declaration public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = \"enableCameraForCollisionBounds\" Field Value Type Description System.String k_pch_Camera_EnableCameraForRoomView_Bool Declaration public const string k_pch_Camera_EnableCameraForRoomView_Bool = \"enableCameraForRoomView\" Field Value Type Description System.String k_pch_Camera_EnableCameraInDashboard_Bool Declaration public const string k_pch_Camera_EnableCameraInDashboard_Bool = \"enableCameraInDashboard\" Field Value Type Description System.String k_pch_Camera_RoomViewMode_Int32 Declaration public const string k_pch_Camera_RoomViewMode_Int32 = \"cameraRoomViewMode\" Field Value Type Description System.String k_pch_Camera_Section Declaration public const string k_pch_Camera_Section = \"camera\" Field Value Type Description System.String k_pch_CollisionBounds_CenterMarkerOn_Bool Declaration public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = \"CollisionBoundsCenterMarkerOn\" Field Value Type Description System.String k_pch_CollisionBounds_ColorGammaA_Int32 Declaration public const string k_pch_CollisionBounds_ColorGammaA_Int32 = \"CollisionBoundsColorGammaA\" Field Value Type Description System.String k_pch_CollisionBounds_ColorGammaB_Int32 Declaration public const string k_pch_CollisionBounds_ColorGammaB_Int32 = \"CollisionBoundsColorGammaB\" Field Value Type Description System.String k_pch_CollisionBounds_ColorGammaG_Int32 Declaration public const string k_pch_CollisionBounds_ColorGammaG_Int32 = \"CollisionBoundsColorGammaG\" Field Value Type Description System.String k_pch_CollisionBounds_ColorGammaR_Int32 Declaration public const string k_pch_CollisionBounds_ColorGammaR_Int32 = \"CollisionBoundsColorGammaR\" Field Value Type Description System.String k_pch_CollisionBounds_FadeDistance_Float Declaration public const string k_pch_CollisionBounds_FadeDistance_Float = \"CollisionBoundsFadeDistance\" Field Value Type Description System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool Declaration public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = \"CollisionBoundsGroundPerimeterOn\" Field Value Type Description System.String k_pch_CollisionBounds_PlaySpaceOn_Bool Declaration public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = \"CollisionBoundsPlaySpaceOn\" Field Value Type Description System.String k_pch_CollisionBounds_Section Declaration public const string k_pch_CollisionBounds_Section = \"collisionBounds\" Field Value Type Description System.String k_pch_CollisionBounds_Style_Int32 Declaration public const string k_pch_CollisionBounds_Style_Int32 = \"CollisionBoundsStyle\" Field Value Type Description System.String k_pch_Controller_Component_Base Declaration public const string k_pch_Controller_Component_Base = \"base\" Field Value Type Description System.String k_pch_Controller_Component_GDC2015 Declaration public const string k_pch_Controller_Component_GDC2015 = \"gdc2015\" Field Value Type Description System.String k_pch_Controller_Component_HandGrip Declaration public const string k_pch_Controller_Component_HandGrip = \"handgrip\" Field Value Type Description System.String k_pch_Controller_Component_Status Declaration public const string k_pch_Controller_Component_Status = \"status\" Field Value Type Description System.String k_pch_Controller_Component_Tip Declaration public const string k_pch_Controller_Component_Tip = \"tip\" Field Value Type Description System.String k_pch_Dashboard_ArcadeMode_Bool Declaration public const string k_pch_Dashboard_ArcadeMode_Bool = \"arcadeMode\" Field Value Type Description System.String k_pch_Dashboard_EnableDashboard_Bool Declaration public const string k_pch_Dashboard_EnableDashboard_Bool = \"enableDashboard\" Field Value Type Description System.String k_pch_Dashboard_Section Declaration public const string k_pch_Dashboard_Section = \"dashboard\" Field Value Type Description System.String k_pch_Dashboard_UseWebDashboard Declaration public const string k_pch_Dashboard_UseWebDashboard = \"useWebDashboard\" Field Value Type Description System.String k_pch_Dashboard_UseWebIPD Declaration public const string k_pch_Dashboard_UseWebIPD = \"useWebIPD\" Field Value Type Description System.String k_pch_Dashboard_UseWebPowerMenu Declaration public const string k_pch_Dashboard_UseWebPowerMenu = \"useWebPowerMenu\" Field Value Type Description System.String k_pch_Dashboard_UseWebSettings Declaration public const string k_pch_Dashboard_UseWebSettings = \"useWebSettings\" Field Value Type Description System.String k_pch_DesktopUI_Section Declaration public const string k_pch_DesktopUI_Section = \"DesktopUI\" Field Value Type Description System.String k_pch_DirectMode_Count_Int32 Declaration public const string k_pch_DirectMode_Count_Int32 = \"count\" Field Value Type Description System.String k_pch_DirectMode_EdidPid_Int32 Declaration public const string k_pch_DirectMode_EdidPid_Int32 = \"edidPid\" Field Value Type Description System.String k_pch_DirectMode_EdidVid_Int32 Declaration public const string k_pch_DirectMode_EdidVid_Int32 = \"edidVid\" Field Value Type Description System.String k_pch_DirectMode_Enable_Bool Declaration public const string k_pch_DirectMode_Enable_Bool = \"enable\" Field Value Type Description System.String k_pch_DirectMode_Section Declaration public const string k_pch_DirectMode_Section = \"direct_mode\" Field Value Type Description System.String k_pch_DismissedWarnings_Section Declaration public const string k_pch_DismissedWarnings_Section = \"DismissedWarnings\" Field Value Type Description System.String k_pch_Driver_Enable_Bool Declaration public const string k_pch_Driver_Enable_Bool = \"enable\" Field Value Type Description System.String k_pch_Keyboard_OffsetLeftX Declaration public const string k_pch_Keyboard_OffsetLeftX = \"OffsetLeftX\" Field Value Type Description System.String k_pch_Keyboard_OffsetRightX Declaration public const string k_pch_Keyboard_OffsetRightX = \"OffsetRightX\" Field Value Type Description System.String k_pch_Keyboard_OffsetY Declaration public const string k_pch_Keyboard_OffsetY = \"OffsetY\" Field Value Type Description System.String k_pch_Keyboard_ScaleX Declaration public const string k_pch_Keyboard_ScaleX = \"ScaleX\" Field Value Type Description System.String k_pch_Keyboard_ScaleY Declaration public const string k_pch_Keyboard_ScaleY = \"ScaleY\" Field Value Type Description System.String k_pch_Keyboard_Section Declaration public const string k_pch_Keyboard_Section = \"keyboard\" Field Value Type Description System.String k_pch_Keyboard_Smoothing Declaration public const string k_pch_Keyboard_Smoothing = \"Smoothing\" Field Value Type Description System.String k_pch_Keyboard_TutorialCompletions Declaration public const string k_pch_Keyboard_TutorialCompletions = \"TutorialCompletions\" Field Value Type Description System.String k_pch_LastKnown_HMDManufacturer_String Declaration public const string k_pch_LastKnown_HMDManufacturer_String = \"HMDManufacturer\" Field Value Type Description System.String k_pch_LastKnown_HMDModel_String Declaration public const string k_pch_LastKnown_HMDModel_String = \"HMDModel\" Field Value Type Description System.String k_pch_LastKnown_Section Declaration public const string k_pch_LastKnown_Section = \"LastKnown\" Field Value Type Description System.String k_pch_Lighthouse_DBHistory_Bool Declaration public const string k_pch_Lighthouse_DBHistory_Bool = \"dbhistory\" Field Value Type Description System.String k_pch_Lighthouse_DisableIMU_Bool Declaration public const string k_pch_Lighthouse_DisableIMU_Bool = \"disableimu\" Field Value Type Description System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool Declaration public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = \"disableimuexcepthmd\" Field Value Type Description System.String k_pch_Lighthouse_DisambiguationDebug_Int32 Declaration public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = \"disambiguationdebug\" Field Value Type Description System.String k_pch_Lighthouse_EnableBluetooth_Bool Declaration public const string k_pch_Lighthouse_EnableBluetooth_Bool = \"enableBluetooth\" Field Value Type Description System.String k_pch_Lighthouse_EnableImuFallback_Bool Declaration public const string k_pch_Lighthouse_EnableImuFallback_Bool = \"enableImuFallback\" Field Value Type Description System.String k_pch_Lighthouse_PowerManagedBaseStations_String Declaration public const string k_pch_Lighthouse_PowerManagedBaseStations_String = \"PowerManagedBaseStations\" Field Value Type Description System.String k_pch_Lighthouse_PowerManagedBaseStations2_String Declaration public const string k_pch_Lighthouse_PowerManagedBaseStations2_String = \"PowerManagedBaseStations2\" Field Value Type Description System.String k_pch_Lighthouse_PrimaryBasestation_Int32 Declaration public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = \"primarybasestation\" Field Value Type Description System.String k_pch_Lighthouse_Section Declaration public const string k_pch_Lighthouse_Section = \"driver_lighthouse\" Field Value Type Description System.String k_pch_Lighthouse_UseDisambiguation_String Declaration public const string k_pch_Lighthouse_UseDisambiguation_String = \"usedisambiguation\" Field Value Type Description System.String k_pch_MimeType_GameTheater Declaration public const string k_pch_MimeType_GameTheater = \"vr/game_theater\" Field Value Type Description System.String k_pch_MimeType_HomeApp Declaration public const string k_pch_MimeType_HomeApp = \"vr/home\" Field Value Type Description System.String k_pch_modelskin_Section Declaration public const string k_pch_modelskin_Section = \"modelskins\" Field Value Type Description System.String k_pch_Notifications_DoNotDisturb_Bool Declaration public const string k_pch_Notifications_DoNotDisturb_Bool = \"DoNotDisturb\" Field Value Type Description System.String k_pch_Notifications_Section Declaration public const string k_pch_Notifications_Section = \"notifications\" Field Value Type Description System.String k_pch_Null_DisplayFrequency_Float Declaration public const string k_pch_Null_DisplayFrequency_Float = \"displayFrequency\" Field Value Type Description System.String k_pch_Null_ModelNumber_String Declaration public const string k_pch_Null_ModelNumber_String = \"modelNumber\" Field Value Type Description System.String k_pch_Null_RenderHeight_Int32 Declaration public const string k_pch_Null_RenderHeight_Int32 = \"renderHeight\" Field Value Type Description System.String k_pch_Null_RenderWidth_Int32 Declaration public const string k_pch_Null_RenderWidth_Int32 = \"renderWidth\" Field Value Type Description System.String k_pch_Null_SecondsFromVsyncToPhotons_Float Declaration public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = \"secondsFromVsyncToPhotons\" Field Value Type Description System.String k_pch_Null_Section Declaration public const string k_pch_Null_Section = \"driver_null\" Field Value Type Description System.String k_pch_Null_SerialNumber_String Declaration public const string k_pch_Null_SerialNumber_String = \"serialNumber\" Field Value Type Description System.String k_pch_Null_WindowHeight_Int32 Declaration public const string k_pch_Null_WindowHeight_Int32 = \"windowHeight\" Field Value Type Description System.String k_pch_Null_WindowWidth_Int32 Declaration public const string k_pch_Null_WindowWidth_Int32 = \"windowWidth\" Field Value Type Description System.String k_pch_Null_WindowX_Int32 Declaration public const string k_pch_Null_WindowX_Int32 = \"windowX\" Field Value Type Description System.String k_pch_Null_WindowY_Int32 Declaration public const string k_pch_Null_WindowY_Int32 = \"windowY\" Field Value Type Description System.String k_pch_Perf_AllowTimingStore_Bool Declaration public const string k_pch_Perf_AllowTimingStore_Bool = \"allowTimingStore\" Field Value Type Description System.String k_pch_Perf_LinuxGPUProfiling_Bool Declaration public const string k_pch_Perf_LinuxGPUProfiling_Bool = \"linuxGPUProfiling\" Field Value Type Description System.String k_pch_Perf_PerfGraphInHMD_Bool Declaration public const string k_pch_Perf_PerfGraphInHMD_Bool = \"perfGraphInHMD\" Field Value Type Description System.String k_pch_Perf_SaveTimingsOnExit_Bool Declaration public const string k_pch_Perf_SaveTimingsOnExit_Bool = \"saveTimingsOnExit\" Field Value Type Description System.String k_pch_Perf_Section Declaration public const string k_pch_Perf_Section = \"perfcheck\" Field Value Type Description System.String k_pch_Perf_TestData_Float Declaration public const string k_pch_Perf_TestData_Float = \"perfTestData\" Field Value Type Description System.String k_pch_Power_AutoLaunchSteamVROnButtonPress Declaration public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = \"autoLaunchSteamVROnButtonPress\" Field Value Type Description System.String k_pch_Power_PauseCompositorOnStandby_Bool Declaration public const string k_pch_Power_PauseCompositorOnStandby_Bool = \"pauseCompositorOnStandby\" Field Value Type Description System.String k_pch_Power_PowerOffOnExit_Bool Declaration public const string k_pch_Power_PowerOffOnExit_Bool = \"powerOffOnExit\" Field Value Type Description System.String k_pch_Power_ReturnToWatchdogTimeout_Float Declaration public const string k_pch_Power_ReturnToWatchdogTimeout_Float = \"returnToWatchdogTimeout\" Field Value Type Description System.String k_pch_Power_Section Declaration public const string k_pch_Power_Section = \"power\" Field Value Type Description System.String k_pch_Power_TurnOffControllersTimeout_Float Declaration public const string k_pch_Power_TurnOffControllersTimeout_Float = \"turnOffControllersTimeout\" Field Value Type Description System.String k_pch_Power_TurnOffScreensTimeout_Float Declaration public const string k_pch_Power_TurnOffScreensTimeout_Float = \"turnOffScreensTimeout\" Field Value Type Description System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool Declaration public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = \"activateMultipleDrivers\" Field Value Type Description System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool Declaration public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = \"allowDisplayLockedMode\" Field Value Type Description System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool Declaration public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = \"allowSupersampleFiltering\" Field Value Type Description System.String k_pch_SteamVR_Background_String Declaration public const string k_pch_SteamVR_Background_String = \"background\" Field Value Type Description System.String k_pch_SteamVR_BackgroundCameraHeight_Float Declaration public const string k_pch_SteamVR_BackgroundCameraHeight_Float = \"backgroundCameraHeight\" Field Value Type Description System.String k_pch_SteamVR_BackgroundDomeRadius_Float Declaration public const string k_pch_SteamVR_BackgroundDomeRadius_Float = \"backgroundDomeRadius\" Field Value Type Description System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool Declaration public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = \"backgroundUseDomeProjection\" Field Value Type Description System.String k_pch_SteamVR_BaseStationPowerManagement_Bool Declaration public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = \"basestationPowerManagement\" Field Value Type Description System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 Declaration public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = \"CycleBackgroundImageTimeSec\" Field Value Type Description System.String k_pch_SteamVR_DebugInput Declaration public const string k_pch_SteamVR_DebugInput = \"debugInput\" Field Value Type Description System.String k_pch_SteamVR_DebugInputBinding Declaration public const string k_pch_SteamVR_DebugInputBinding = \"debugInputBinding\" Field Value Type Description System.String k_pch_SteamVR_DebugProcessPipe_String Declaration public const string k_pch_SteamVR_DebugProcessPipe_String = \"debugProcessPipe\" Field Value Type Description System.String k_pch_SteamVR_DefaultMirrorView_Int32 Declaration public const string k_pch_SteamVR_DefaultMirrorView_Int32 = \"mirrorView\" Field Value Type Description System.String k_pch_SteamVR_DisplayDebug_Bool Declaration public const string k_pch_SteamVR_DisplayDebug_Bool = \"displayDebug\" Field Value Type Description System.String k_pch_SteamVR_DisplayDebugX_Int32 Declaration public const string k_pch_SteamVR_DisplayDebugX_Int32 = \"displayDebugX\" Field Value Type Description System.String k_pch_SteamVR_DisplayDebugY_Int32 Declaration public const string k_pch_SteamVR_DisplayDebugY_Int32 = \"displayDebugY\" Field Value Type Description System.String k_pch_SteamVR_EnableHomeApp Declaration public const string k_pch_SteamVR_EnableHomeApp = \"enableHomeApp\" Field Value Type Description System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool Declaration public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = \"enableLinuxVulkanAsync\" Field Value Type Description System.String k_pch_SteamVR_EnableSafeMode Declaration public const string k_pch_SteamVR_EnableSafeMode = \"enableSafeMode\" Field Value Type Description System.String k_pch_SteamVR_EnableSharedResourceJournaling Declaration public const string k_pch_SteamVR_EnableSharedResourceJournaling = \"enableSharedResourceJournaling\" Field Value Type Description System.String k_pch_SteamVR_ForcedDriverKey_String Declaration public const string k_pch_SteamVR_ForcedDriverKey_String = \"forcedDriver\" Field Value Type Description System.String k_pch_SteamVR_ForcedHmdKey_String Declaration public const string k_pch_SteamVR_ForcedHmdKey_String = \"forcedHmd\" Field Value Type Description System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool Declaration public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = \"forceFadeOnBadTracking\" Field Value Type Description System.String k_pch_SteamVR_ForceWindows32bitVRMonitor Declaration public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = \"forceWindows32BitVRMonitor\" Field Value Type Description System.String k_pch_SteamVR_GridColor_String Declaration public const string k_pch_SteamVR_GridColor_String = \"gridColor\" Field Value Type Description System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool Declaration public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = \"haveStartedTutorialForNativeChaperoneDriver\" Field Value Type Description System.String k_pch_SteamVR_InputBindingUIBlock Declaration public const string k_pch_SteamVR_InputBindingUIBlock = \"inputBindingUI\" Field Value Type Description System.String k_pch_SteamVR_IPD_Float Declaration public const string k_pch_SteamVR_IPD_Float = \"ipd\" Field Value Type Description System.String k_pch_SteamVR_IpdOffset_Float Declaration public const string k_pch_SteamVR_IpdOffset_Float = \"ipdOffset\" Field Value Type Description System.String k_pch_SteamVR_LastVersionNotice Declaration public const string k_pch_SteamVR_LastVersionNotice = \"lastVersionNotice\" Field Value Type Description System.String k_pch_SteamVR_LastVersionNoticeDate Declaration public const string k_pch_SteamVR_LastVersionNoticeDate = \"lastVersionNoticeDate\" Field Value Type Description System.String k_pch_SteamVR_LogLevel_Int32 Declaration public const string k_pch_SteamVR_LogLevel_Int32 = \"loglevel\" Field Value Type Description System.String k_pch_SteamVR_MaxRecommendedResolution_Int32 Declaration public const string k_pch_SteamVR_MaxRecommendedResolution_Int32 = \"maxRecommendedResolution\" Field Value Type Description System.String k_pch_SteamVR_MirrorViewGeometry_String Declaration public const string k_pch_SteamVR_MirrorViewGeometry_String = \"mirrorViewGeometry\" Field Value Type Description System.String k_pch_SteamVR_MirrorViewGeometryMaximized_String Declaration public const string k_pch_SteamVR_MirrorViewGeometryMaximized_String = \"mirrorViewGeometryMaximized\" Field Value Type Description System.String k_pch_SteamVR_MotionSmoothing_Bool Declaration public const string k_pch_SteamVR_MotionSmoothing_Bool = \"motionSmoothing\" Field Value Type Description System.String k_pch_SteamVR_MotionSmoothingOverride_Int32 Declaration public const string k_pch_SteamVR_MotionSmoothingOverride_Int32 = \"motionSmoothingOverride\" Field Value Type Description System.String k_pch_SteamVR_NeverKillProcesses_Bool Declaration public const string k_pch_SteamVR_NeverKillProcesses_Bool = \"neverKillProcesses\" Field Value Type Description System.String k_pch_SteamVR_PlayAreaColor_String Declaration public const string k_pch_SteamVR_PlayAreaColor_String = \"playAreaColor\" Field Value Type Description System.String k_pch_SteamVR_PreferredRefreshRate Declaration public const string k_pch_SteamVR_PreferredRefreshRate = \"preferredRefreshRate\" Field Value Type Description System.String k_pch_SteamVR_RenderCameraMode Declaration public const string k_pch_SteamVR_RenderCameraMode = \"renderCameraMode\" Field Value Type Description System.String k_pch_SteamVR_RequireHmd_String Declaration public const string k_pch_SteamVR_RequireHmd_String = \"requireHmd\" Field Value Type Description System.String k_pch_SteamVR_RetailDemo_Bool Declaration public const string k_pch_SteamVR_RetailDemo_Bool = \"retailDemo\" Field Value Type Description System.String k_pch_SteamVR_Section Declaration public const string k_pch_SteamVR_Section = \"steamvr\" Field Value Type Description System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool Declaration public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = \"sendSystemButtonToAllApps\" Field Value Type Description System.String k_pch_SteamVR_ShowMirrorView_Bool Declaration public const string k_pch_SteamVR_ShowMirrorView_Bool = \"showMirrorView\" Field Value Type Description System.String k_pch_SteamVR_ShowStage_Bool Declaration public const string k_pch_SteamVR_ShowStage_Bool = \"showStage\" Field Value Type Description System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float Declaration public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = \"speakersForwardYawOffsetDegrees\" Field Value Type Description System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool Declaration public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = \"startCompositorFromAppLaunch\" Field Value Type Description System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool Declaration public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = \"startDashboardFromAppLaunch\" Field Value Type Description System.String k_pch_SteamVR_StartMonitorFromAppLaunch Declaration public const string k_pch_SteamVR_StartMonitorFromAppLaunch = \"startMonitorFromAppLaunch\" Field Value Type Description System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool Declaration public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = \"startOverlayAppsFromDashboard\" Field Value Type Description System.String k_pch_SteamVR_SupersampleManualOverride_Bool Declaration public const string k_pch_SteamVR_SupersampleManualOverride_Bool = \"supersampleManualOverride\" Field Value Type Description System.String k_pch_SteamVR_SupersampleScale_Float Declaration public const string k_pch_SteamVR_SupersampleScale_Float = \"supersampleScale\" Field Value Type Description System.String k_pch_SteamVR_UsingSpeakers_Bool Declaration public const string k_pch_SteamVR_UsingSpeakers_Bool = \"usingSpeakers\" Field Value Type Description System.String k_pch_Trackers_Section Declaration public const string k_pch_Trackers_Section = \"trackers\" Field Value Type Description System.String k_pch_TrackingOverride_Section Declaration public const string k_pch_TrackingOverride_Section = \"TrackingOverrides\" Field Value Type Description System.String k_pch_UserInterface_HidePopupsWhenStatusMinimized_Bool Declaration public const string k_pch_UserInterface_HidePopupsWhenStatusMinimized_Bool = \"HidePopupsWhenStatusMinimized\" Field Value Type Description System.String k_pch_UserInterface_MinimizeToTray_Bool Declaration public const string k_pch_UserInterface_MinimizeToTray_Bool = \"MinimizeToTray\" Field Value Type Description System.String k_pch_UserInterface_Screenshots_Bool Declaration public const string k_pch_UserInterface_Screenshots_Bool = \"screenshots\" Field Value Type Description System.String k_pch_UserInterface_ScreenshotType_Int Declaration public const string k_pch_UserInterface_ScreenshotType_Int = \"screenshotType\" Field Value Type Description System.String k_pch_UserInterface_Section Declaration public const string k_pch_UserInterface_Section = \"userinterface\" Field Value Type Description System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool Declaration public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = \"StatusAlwaysOnTop\" Field Value Type Description System.String k_pch_VRWebHelper_DebuggerEnabled_Bool Declaration public const string k_pch_VRWebHelper_DebuggerEnabled_Bool = \"DebuggerEnabled\" Field Value Type Description System.String k_pch_VRWebHelper_DebuggerPort_Int32 Declaration public const string k_pch_VRWebHelper_DebuggerPort_Int32 = \"DebuggerPort\" Field Value Type Description System.String k_pch_VRWebHelper_Section Declaration public const string k_pch_VRWebHelper_Section = \"VRWebHelper\" Field Value Type Description System.String k_pch_WebInterface_Section Declaration public const string k_pch_WebInterface_Section = \"WebInterface\" Field Value Type Description System.String k_pch_WebInterface_WebEnable_Bool Declaration public const string k_pch_WebInterface_WebEnable_Bool = \"WebEnable\" Field Value Type Description System.String k_pch_WebInterface_WebPort_String Declaration public const string k_pch_WebInterface_WebPort_String = \"WebPort\" Field Value Type Description System.String k_ulInvalidActionHandle Declaration public const ulong k_ulInvalidActionHandle = 0UL Field Value Type Description System.UInt64 k_ulInvalidActionSetHandle Declaration public const ulong k_ulInvalidActionSetHandle = 0UL Field Value Type Description System.UInt64 k_ulInvalidDriverHandle Declaration public const ulong k_ulInvalidDriverHandle = 0UL Field Value Type Description System.UInt64 k_ulInvalidInputValueHandle Declaration public const ulong k_ulInvalidInputValueHandle = 0UL Field Value Type Description System.UInt64 k_ulInvalidIOBufferHandle Declaration public const ulong k_ulInvalidIOBufferHandle = 0UL Field Value Type Description System.UInt64 k_ulInvalidPropertyContainer Declaration public const ulong k_ulInvalidPropertyContainer = 0UL Field Value Type Description System.UInt64 k_ulInvalidSpatialAnchorHandle Declaration public const uint k_ulInvalidSpatialAnchorHandle = 0U Field Value Type Description System.UInt32 k_ulOverlayHandleInvalid Declaration public const ulong k_ulOverlayHandleInvalid = 0UL Field Value Type Description System.UInt64 k_unActionPropertyTag Declaration public const uint k_unActionPropertyTag = 32U Field Value Type Description System.UInt32 k_unActiveActionSetPropertyTag Declaration public const uint k_unActiveActionSetPropertyTag = 42U Field Value Type Description System.UInt32 k_unBoolPropertyTag Declaration public const uint k_unBoolPropertyTag = 4U Field Value Type Description System.UInt32 k_unControllerStateAxisCount Declaration public const uint k_unControllerStateAxisCount = 5U Field Value Type Description System.UInt32 k_unFloatPropertyTag Declaration public const uint k_unFloatPropertyTag = 1U Field Value Type Description System.UInt32 k_unHapticVibrationPropertyTag Declaration public const uint k_unHapticVibrationPropertyTag = 35U Field Value Type Description System.UInt32 k_unHiddenAreaPropertyTag Declaration public const uint k_unHiddenAreaPropertyTag = 30U Field Value Type Description System.UInt32 k_unHmdMatrix34PropertyTag Declaration public const uint k_unHmdMatrix34PropertyTag = 20U Field Value Type Description System.UInt32 k_unHmdMatrix44PropertyTag Declaration public const uint k_unHmdMatrix44PropertyTag = 21U Field Value Type Description System.UInt32 k_unHmdQuadPropertyTag Declaration public const uint k_unHmdQuadPropertyTag = 25U Field Value Type Description System.UInt32 k_unHmdVector2PropertyTag Declaration public const uint k_unHmdVector2PropertyTag = 24U Field Value Type Description System.UInt32 k_unHmdVector3PropertyTag Declaration public const uint k_unHmdVector3PropertyTag = 22U Field Value Type Description System.UInt32 k_unHmdVector4PropertyTag Declaration public const uint k_unHmdVector4PropertyTag = 23U Field Value Type Description System.UInt32 k_unInputValuePropertyTag Declaration public const uint k_unInputValuePropertyTag = 33U Field Value Type Description System.UInt32 k_unInt32PropertyTag Declaration public const uint k_unInt32PropertyTag = 2U Field Value Type Description System.UInt32 k_unInvalidPropertyTag Declaration public const uint k_unInvalidPropertyTag = 0U Field Value Type Description System.UInt32 k_unJsonPropertyTag Declaration public const uint k_unJsonPropertyTag = 41U Field Value Type Description System.UInt32 k_unMaxActionNameLength Declaration public const uint k_unMaxActionNameLength = 64U Field Value Type Description System.UInt32 k_unMaxActionOriginCount Declaration public const uint k_unMaxActionOriginCount = 16U Field Value Type Description System.UInt32 k_unMaxActionSetNameLength Declaration public const uint k_unMaxActionSetNameLength = 64U Field Value Type Description System.UInt32 k_unMaxApplicationKeyLength Declaration public const uint k_unMaxApplicationKeyLength = 128U Field Value Type Description System.UInt32 k_unMaxBoneNameLength Declaration public const uint k_unMaxBoneNameLength = 32U Field Value Type Description System.UInt32 k_unMaxDistortionFunctionParameters Declaration public const uint k_unMaxDistortionFunctionParameters = 8U Field Value Type Description System.UInt32 k_unMaxDriverDebugResponseSize Declaration public const uint k_unMaxDriverDebugResponseSize = 32768U Field Value Type Description System.UInt32 k_unMaxOverlayCount Declaration public const uint k_unMaxOverlayCount = 64U Field Value Type Description System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount Declaration public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32U Field Value Type Description System.UInt32 k_unMaxPropertyStringSize Declaration public const uint k_unMaxPropertyStringSize = 32768U Field Value Type Description System.UInt32 k_unMaxSettingsKeyLength Declaration public const uint k_unMaxSettingsKeyLength = 128U Field Value Type Description System.UInt32 k_unMaxTrackedDeviceCount Declaration public const uint k_unMaxTrackedDeviceCount = 64U Field Value Type Description System.UInt32 k_unNotificationTextMaxSize Declaration public const uint k_unNotificationTextMaxSize = 256U Field Value Type Description System.UInt32 k_unOpenVRInternalReserved_End Declaration public const uint k_unOpenVRInternalReserved_End = 10000U Field Value Type Description System.UInt32 k_unOpenVRInternalReserved_Start Declaration public const uint k_unOpenVRInternalReserved_Start = 1000U Field Value Type Description System.UInt32 k_unPathHandleInfoTag Declaration public const uint k_unPathHandleInfoTag = 31U Field Value Type Description System.UInt32 k_unScreenshotHandleInvalid Declaration public const uint k_unScreenshotHandleInvalid = 0U Field Value Type Description System.UInt32 k_unSkeletonPropertyTag Declaration public const uint k_unSkeletonPropertyTag = 36U Field Value Type Description System.UInt32 k_unSpatialAnchorPosePropertyTag Declaration public const uint k_unSpatialAnchorPosePropertyTag = 40U Field Value Type Description System.UInt32 k_unStringPropertyTag Declaration public const uint k_unStringPropertyTag = 5U Field Value Type Description System.UInt32 k_unTrackedDeviceIndex_Hmd Declaration public const uint k_unTrackedDeviceIndex_Hmd = 0U Field Value Type Description System.UInt32 k_unTrackedDeviceIndexInvalid Declaration public const uint k_unTrackedDeviceIndexInvalid = 4294967295U Field Value Type Description System.UInt32 k_unTrackedDeviceIndexOther Declaration public const uint k_unTrackedDeviceIndexOther = 4294967294U Field Value Type Description System.UInt32 k_unUint64PropertyTag Declaration public const uint k_unUint64PropertyTag = 3U Field Value Type Description System.UInt32 k_unVROverlayMaxKeyLength Declaration public const uint k_unVROverlayMaxKeyLength = 128U Field Value Type Description System.UInt32 k_unVROverlayMaxNameLength Declaration public const uint k_unVROverlayMaxNameLength = 128U Field Value Type Description System.UInt32 k_unWildcardPropertyTag Declaration public const uint k_unWildcardPropertyTag = 34U Field Value Type Description System.UInt32 Properties Applications Declaration public static CVRApplications Applications { get; } Property Value Type Description CVRApplications Chaperone Declaration public static CVRChaperone Chaperone { get; } Property Value Type Description CVRChaperone ChaperoneSetup Declaration public static CVRChaperoneSetup ChaperoneSetup { get; } Property Value Type Description CVRChaperoneSetup Compositor Declaration public static CVRCompositor Compositor { get; } Property Value Type Description CVRCompositor ExtendedDisplay Declaration public static CVRExtendedDisplay ExtendedDisplay { get; } Property Value Type Description CVRExtendedDisplay Input Declaration public static CVRInput Input { get; } Property Value Type Description CVRInput Overlay Declaration public static CVROverlay Overlay { get; } Property Value Type Description CVROverlay RenderModels Declaration public static CVRRenderModels RenderModels { get; } Property Value Type Description CVRRenderModels Screenshots Declaration public static CVRScreenshots Screenshots { get; } Property Value Type Description CVRScreenshots Settings Declaration public static CVRSettings Settings { get; } Property Value Type Description CVRSettings SpatialAnchors Declaration public static CVRSpatialAnchors SpatialAnchors { get; } Property Value Type Description CVRSpatialAnchors System Declaration public static CVRSystem System { get; } Property Value Type Description CVRSystem TrackedCamera Declaration public static CVRTrackedCamera TrackedCamera { get; } Property Value Type Description CVRTrackedCamera Methods GetGenericInterface(String, ref EVRInitError) Declaration public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError) Parameters Type Name Description System.String pchInterfaceVersion EVRInitError peError Returns Type Description System.IntPtr GetInitToken() Declaration public static uint GetInitToken() Returns Type Description System.UInt32 GetStringForHmdError(EVRInitError) Declaration public static string GetStringForHmdError(EVRInitError error) Parameters Type Name Description EVRInitError error Returns Type Description System.String Init(ref EVRInitError, EVRApplicationType, String) Declaration public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene, string pchStartupInfo = \"\") Parameters Type Name Description EVRInitError peError EVRApplicationType eApplicationType System.String pchStartupInfo Returns Type Description CVRSystem InitInternal(ref EVRInitError, EVRApplicationType) Declaration public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType) Parameters Type Name Description EVRInitError peError EVRApplicationType eApplicationType Returns Type Description System.UInt32 InitInternal2(ref EVRInitError, EVRApplicationType, String) Declaration public static uint InitInternal2(ref EVRInitError peError, EVRApplicationType eApplicationType, string pchStartupInfo) Parameters Type Name Description EVRInitError peError EVRApplicationType eApplicationType System.String pchStartupInfo Returns Type Description System.UInt32 IsHmdPresent() Declaration public static bool IsHmdPresent() Returns Type Description System.Boolean IsInterfaceVersionValid(String) Declaration public static bool IsInterfaceVersionValid(string pchInterfaceVersion) Parameters Type Name Description System.String pchInterfaceVersion Returns Type Description System.Boolean IsRuntimeInstalled() Declaration public static bool IsRuntimeInstalled() Returns Type Description System.Boolean RuntimePath() Declaration public static string RuntimePath() Returns Type Description System.String Shutdown() Declaration public static void Shutdown() ShutdownInternal() Declaration public static void ShutdownInternal()"
  },
  "api/Valve.VR.NotificationBitmap_t.html": {
    "href": "api/Valve.VR.NotificationBitmap_t.html",
    "title": "Struct NotificationBitmap_t | SteamVR Unity Plugin",
    "keywords": "Struct NotificationBitmap_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct NotificationBitmap_t Fields m_nBytesPerPixel Declaration public int m_nBytesPerPixel Field Value Type Description System.Int32 m_nHeight Declaration public int m_nHeight Field Value Type Description System.Int32 m_nWidth Declaration public int m_nWidth Field Value Type Description System.Int32 m_pImageData Declaration public IntPtr m_pImageData Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.IVRInput.html": {
    "href": "api/Valve.VR.IVRInput.html",
    "title": "Struct IVRInput | SteamVR Unity Plugin",
    "keywords": "Struct IVRInput Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRInput"
  },
  "api/Valve.VR.IVRExtendedDisplay.html": {
    "href": "api/Valve.VR.IVRExtendedDisplay.html",
    "title": "Struct IVRExtendedDisplay | SteamVR Unity Plugin",
    "keywords": "Struct IVRExtendedDisplay Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRExtendedDisplay"
  },
  "api/Valve.VR.ISteamVR_Action_In_Source.html": {
    "href": "api/Valve.VR.ISteamVR_Action_In_Source.html",
    "title": "Interface ISteamVR_Action_In_Source | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_In_Source Inherited Members ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_In_Source : ISteamVR_Action_Source Properties activeDevice The input source that triggered the action to be updated Declaration SteamVR_Input_Sources activeDevice { get; } Property Value Type Description SteamVR_Input_Sources activeOrigin The handle to the component that triggered the action to be changed Declaration ulong activeOrigin { get; } Property Value Type Description System.UInt64 changed Returns true if the action has been changed in the most recent update Declaration bool changed { get; } Property Value Type Description System.Boolean changedTime The Time.realtimeSinceStartup that this action was last changed. Declaration float changedTime { get; } Property Value Type Description System.Single lastActiveOrigin The handle to the component that triggered the action to be changed in the previous update Declaration ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 lastChanged Returns true if the action was changed for the previous update cycle Declaration bool lastChanged { get; } Property Value Type Description System.Boolean localizedOriginName Gets the localized full name of the device that the action was updated by. ex: \"Left Hand Vive Controller Trackpad\" Declaration string localizedOriginName { get; } Property Value Type Description System.String renderModelComponentName The name of the component on the render model that caused the action to be updated (not localized) Declaration string renderModelComponentName { get; } Property Value Type Description System.String trackedDeviceIndex The device index (used by Render Models) used by the device that triggered the action to be updated Declaration uint trackedDeviceIndex { get; } Property Value Type Description System.UInt32 updateTime The time the action was updated (Time.realtimeSinceStartup) Declaration float updateTime { get; } Property Value Type Description System.Single"
  },
  "api/Valve.VR.ISteamVR_Action_In.html": {
    "href": "api/Valve.VR.ISteamVR_Action_In.html",
    "title": "Interface ISteamVR_Action_In | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_In Inherited Members ISteamVR_Action.GetActive(SteamVR_Input_Sources) ISteamVR_Action.GetShortName() ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_In : ISteamVR_Action, ISteamVR_Action_In_Source, ISteamVR_Action_Source Methods GetActiveDevice(SteamVR_Input_Sources) The input source that triggered the action to be updated last Declaration SteamVR_Input_Sources GetActiveDevice(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description SteamVR_Input_Sources GetChanged(SteamVR_Input_Sources) Indicates whether or not the data for this action and specified input source has changed since the last update. Determined by SteamVR or 'changeTolerance'. Declaration bool GetChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Boolean GetDeviceIndex(SteamVR_Input_Sources) Gets the device index for the controller this action is bound to. This can be used for render models or the pose tracking system. Declaration uint GetDeviceIndex(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.UInt32 GetLocalizedOrigin(SteamVR_Input_Sources) Gets the localized full name of the device that the action was updated by. ex: \"Left Hand Vive Controller Trackpad\" Declaration string GetLocalizedOrigin(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.String GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string Declaration string GetLocalizedOriginPart(SteamVR_Input_Sources inputSource, params EVRInputStringBits[] localizedParts) Parameters Type Name Description SteamVR_Input_Sources inputSource EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. ex: \"Left Hand\". VRInputString_ControllerType - What kind of controller the user has in that hand. ex: \"Vive Controller\". VRInputString_InputSource - What part of that controller is the origin. ex: \"Trackpad\". VRInputString_All - All of the above. ex: \"Left Hand Vive Controller Trackpad\". Returns Type Description System.String GetRenderModelComponentName(SteamVR_Input_Sources) The name of the component on the render model that caused the action to be updated (not localized) Declaration string GetRenderModelComponentName(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.String UpdateValues() [Should not be called by user code] Updates the data for all the input sources the system has detected need to be updated. Declaration void UpdateValues()"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector3.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector3.html",
    "title": "Class SteamVR_Behaviour_Vector3 | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Vector3 Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Vector3 Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Vector3 : MonoBehaviour Fields inputSource The device this action applies to. Any if the action is not device specific. Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources onAxis Unity event that fires whenever the action's value has been updated and is non-zero Declaration [Tooltip(\"Fires whenever the action's value has been updated and is non-zero.\")] public SteamVR_Behaviour_Vector3Event onAxis Field Value Type Description SteamVR_Behaviour_Vector3Event onAxisEvent C# event that fires whenever the action's value has been updated and is non-zero Declaration public SteamVR_Behaviour_Vector3.AxisHandler onAxisEvent Field Value Type Description SteamVR_Behaviour_Vector3.AxisHandler onChange Unity event that fires whenever the action's value has changed since the last update. Declaration [Tooltip(\"Fires whenever the action's value has changed since the last update.\")] public SteamVR_Behaviour_Vector3Event onChange Field Value Type Description SteamVR_Behaviour_Vector3Event onChangeEvent C# event that fires whenever the action's value has changed since the last update. Declaration public SteamVR_Behaviour_Vector3.ChangeHandler onChangeEvent Field Value Type Description SteamVR_Behaviour_Vector3.ChangeHandler onUpdate Unity event that fires whenever the action's value has been updated Declaration [Tooltip(\"Fires whenever the action's value has been updated.\")] public SteamVR_Behaviour_Vector3Event onUpdate Field Value Type Description SteamVR_Behaviour_Vector3Event onUpdateEvent C# event that fires whenever the action's value has been updated Declaration public SteamVR_Behaviour_Vector3.UpdateHandler onUpdateEvent Field Value Type Description SteamVR_Behaviour_Vector3.UpdateHandler vector3Action The vector3 action to get data from Declaration public SteamVR_Action_Vector3 vector3Action Field Value Type Description SteamVR_Action_Vector3 Properties isActive Returns whether this action is bound and the action set is active Declaration public bool isActive { get; } Property Value Type Description System.Boolean Methods AddHandlers() Declaration protected void AddHandlers() GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RemoveHandlers() Declaration protected void RemoveHandlers()"
  },
  "api/Valve.VR.ISteamVR_Action_Out_Source.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Out_Source.html",
    "title": "Interface ISteamVR_Action_Out_Source | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Out_Source Inherited Members ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Out_Source : ISteamVR_Action_Source"
  },
  "api/Valve.VR.ISteamVR_Action_Out.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Out.html",
    "title": "Interface ISteamVR_Action_Out | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Out Inherited Members ISteamVR_Action.GetActive(SteamVR_Input_Sources) ISteamVR_Action.GetShortName() ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Out : ISteamVR_Action, ISteamVR_Action_Out_Source, ISteamVR_Action_Source"
  },
  "api/Valve.VR.InteractionSystem.SpawnAndAttachAfterControllerIsTracking.html": {
    "href": "api/Valve.VR.InteractionSystem.SpawnAndAttachAfterControllerIsTracking.html",
    "title": "Class SpawnAndAttachAfterControllerIsTracking | SteamVR Unity Plugin",
    "keywords": "Class SpawnAndAttachAfterControllerIsTracking Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SpawnAndAttachAfterControllerIsTracking Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour Fields itemPrefab Declaration public GameObject itemPrefab Field Value Type Description UnityEngine.GameObject"
  },
  "api/Valve.VR.InteractionSystem.SoundPlayOneshot.html": {
    "href": "api/Valve.VR.InteractionSystem.SoundPlayOneshot.html",
    "title": "Class SoundPlayOneshot | SteamVR Unity Plugin",
    "keywords": "Class SoundPlayOneshot Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SoundPlayOneshot Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SoundPlayOneshot : MonoBehaviour Fields pitchMax Declaration public float pitchMax Field Value Type Description System.Single pitchMin Declaration public float pitchMin Field Value Type Description System.Single playOnAwake Declaration public bool playOnAwake Field Value Type Description System.Boolean volMax Declaration public float volMax Field Value Type Description System.Single volMin Declaration public float volMin Field Value Type Description System.Single waveFiles Declaration public AudioClip[] waveFiles Field Value Type Description UnityEngine.AudioClip [] Methods Pause() Declaration public void Pause() Play() Declaration public void Play() UnPause() Declaration public void UnPause()"
  },
  "api/Valve.VR.CVRDriverManager.html": {
    "href": "api/Valve.VR.CVRDriverManager.html",
    "title": "Class CVRDriverManager | SteamVR Unity Plugin",
    "keywords": "Class CVRDriverManager Inheritance System.Object CVRDriverManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRDriverManager Methods GetDriverCount() Declaration public uint GetDriverCount() Returns Type Description System.UInt32 GetDriverHandle(String) Declaration public ulong GetDriverHandle(string pchDriverName) Parameters Type Name Description System.String pchDriverName Returns Type Description System.UInt64 GetDriverName(UInt32, StringBuilder, UInt32) Declaration public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize) Parameters Type Name Description System.UInt32 nDriver System.Text.StringBuilder pchValue System.UInt32 unBufferSize Returns Type Description System.UInt32"
  },
  "api/Valve.VR.CameraVideoStreamFrameHeader_t.html": {
    "href": "api/Valve.VR.CameraVideoStreamFrameHeader_t.html",
    "title": "Struct CameraVideoStreamFrameHeader_t | SteamVR Unity Plugin",
    "keywords": "Struct CameraVideoStreamFrameHeader_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct CameraVideoStreamFrameHeader_t Fields eFrameType Declaration public EVRTrackedCameraFrameType eFrameType Field Value Type Description EVRTrackedCameraFrameType nBytesPerPixel Declaration public uint nBytesPerPixel Field Value Type Description System.UInt32 nFrameSequence Declaration public uint nFrameSequence Field Value Type Description System.UInt32 nHeight Declaration public uint nHeight Field Value Type Description System.UInt32 nWidth Declaration public uint nWidth Field Value Type Description System.UInt32 standingTrackedDevicePose Declaration public TrackedDevicePose_t standingTrackedDevicePose Field Value Type Description TrackedDevicePose_t ulFrameExposureTime Declaration public ulong ulFrameExposureTime Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VROverlayFlags.html": {
    "href": "api/Valve.VR.VROverlayFlags.html",
    "title": "Enum VROverlayFlags | SteamVR Unity Plugin",
    "keywords": "Enum VROverlayFlags Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum VROverlayFlags Fields Name Description AcceptsGamepadEvents Curved MakeOverlaysInteractiveIfVisible NoDashboardTab None Panorama RGSS4X SendVRDiscreteScrollEvents SendVRSmoothScrollEvents SendVRTouchpadEvents ShowGamepadFocus ShowTouchPadScrollWheel SideBySide_Crossed SideBySide_Parallel SortWithNonSceneOverlays StereoPanorama TransferOwnershipToInternalProcess VisibleInDashboard"
  },
  "api/Valve.VR.VRMessageOverlayResponse.html": {
    "href": "api/Valve.VR.VRMessageOverlayResponse.html",
    "title": "Enum VRMessageOverlayResponse | SteamVR Unity Plugin",
    "keywords": "Enum VRMessageOverlayResponse Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum VRMessageOverlayResponse Fields Name Description ApplicationQuit ButtonPress_0 ButtonPress_1 ButtonPress_2 ButtonPress_3 CouldntFindOrCreateClientOverlay CouldntFindSystemOverlay"
  },
  "api/Valve.VR.VREvent_WebConsole_t.html": {
    "href": "api/Valve.VR.VREvent_WebConsole_t.html",
    "title": "Struct VREvent_WebConsole_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_WebConsole_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_WebConsole_t Fields webConsoleHandle Declaration public ulong webConsoleHandle Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_t_Packed.html": {
    "href": "api/Valve.VR.VREvent_t_Packed.html",
    "title": "Struct VREvent_t_Packed | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_t_Packed Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_t_Packed Constructors VREvent_t_Packed(VREvent_t) Declaration public VREvent_t_Packed(VREvent_t unpacked) Parameters Type Name Description VREvent_t unpacked Fields data Declaration public VREvent_Data_t data Field Value Type Description VREvent_Data_t eventAgeSeconds Declaration public float eventAgeSeconds Field Value Type Description System.Single eventType Declaration public uint eventType Field Value Type Description System.UInt32 trackedDeviceIndex Declaration public uint trackedDeviceIndex Field Value Type Description System.UInt32 Methods Unpack(ref VREvent_t) Declaration public void Unpack(ref VREvent_t unpacked) Parameters Type Name Description VREvent_t unpacked"
  },
  "api/Valve.VR.VREvent_TouchPadMove_t.html": {
    "href": "api/Valve.VR.VREvent_TouchPadMove_t.html",
    "title": "Struct VREvent_TouchPadMove_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_TouchPadMove_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_TouchPadMove_t Fields bFingerDown Declaration public bool bFingerDown Field Value Type Description System.Boolean flSecondsFingerDown Declaration public float flSecondsFingerDown Field Value Type Description System.Single fValueXFirst Declaration public float fValueXFirst Field Value Type Description System.Single fValueXRaw Declaration public float fValueXRaw Field Value Type Description System.Single fValueYFirst Declaration public float fValueYFirst Field Value Type Description System.Single fValueYRaw Declaration public float fValueYRaw Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_t.html": {
    "href": "api/Valve.VR.VREvent_t.html",
    "title": "Struct VREvent_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_t Fields data Declaration public VREvent_Data_t data Field Value Type Description VREvent_Data_t eventAgeSeconds Declaration public float eventAgeSeconds Field Value Type Description System.Single eventType Declaration public uint eventType Field Value Type Description System.UInt32 trackedDeviceIndex Declaration public uint trackedDeviceIndex Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.InputPoseActionData_t.html": {
    "href": "api/Valve.VR.InputPoseActionData_t.html",
    "title": "Struct InputPoseActionData_t | SteamVR Unity Plugin",
    "keywords": "Struct InputPoseActionData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct InputPoseActionData_t Fields activeOrigin Declaration public ulong activeOrigin Field Value Type Description System.UInt64 bActive Declaration public bool bActive Field Value Type Description System.Boolean pose Declaration public TrackedDevicePose_t pose Field Value Type Description TrackedDevicePose_t"
  },
  "api/Valve.VR.InputOriginInfo_t.html": {
    "href": "api/Valve.VR.InputOriginInfo_t.html",
    "title": "Struct InputOriginInfo_t | SteamVR Unity Plugin",
    "keywords": "Struct InputOriginInfo_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct InputOriginInfo_t Fields devicePath Declaration public ulong devicePath Field Value Type Description System.UInt64 rchRenderModelComponentName0 Declaration public byte rchRenderModelComponentName0 Field Value Type Description System.Byte rchRenderModelComponentName1 Declaration public byte rchRenderModelComponentName1 Field Value Type Description System.Byte rchRenderModelComponentName10 Declaration public byte rchRenderModelComponentName10 Field Value Type Description System.Byte rchRenderModelComponentName100 Declaration public byte rchRenderModelComponentName100 Field Value Type Description System.Byte rchRenderModelComponentName101 Declaration public byte rchRenderModelComponentName101 Field Value Type Description System.Byte rchRenderModelComponentName102 Declaration public byte rchRenderModelComponentName102 Field Value Type Description System.Byte rchRenderModelComponentName103 Declaration public byte rchRenderModelComponentName103 Field Value Type Description System.Byte rchRenderModelComponentName104 Declaration public byte rchRenderModelComponentName104 Field Value Type Description System.Byte rchRenderModelComponentName105 Declaration public byte rchRenderModelComponentName105 Field Value Type Description System.Byte rchRenderModelComponentName106 Declaration public byte rchRenderModelComponentName106 Field Value Type Description System.Byte rchRenderModelComponentName107 Declaration public byte rchRenderModelComponentName107 Field Value Type Description System.Byte rchRenderModelComponentName108 Declaration public byte rchRenderModelComponentName108 Field Value Type Description System.Byte rchRenderModelComponentName109 Declaration public byte rchRenderModelComponentName109 Field Value Type Description System.Byte rchRenderModelComponentName11 Declaration public byte rchRenderModelComponentName11 Field Value Type Description System.Byte rchRenderModelComponentName110 Declaration public byte rchRenderModelComponentName110 Field Value Type Description System.Byte rchRenderModelComponentName111 Declaration public byte rchRenderModelComponentName111 Field Value Type Description System.Byte rchRenderModelComponentName112 Declaration public byte rchRenderModelComponentName112 Field Value Type Description System.Byte rchRenderModelComponentName113 Declaration public byte rchRenderModelComponentName113 Field Value Type Description System.Byte rchRenderModelComponentName114 Declaration public byte rchRenderModelComponentName114 Field Value Type Description System.Byte rchRenderModelComponentName115 Declaration public byte rchRenderModelComponentName115 Field Value Type Description System.Byte rchRenderModelComponentName116 Declaration public byte rchRenderModelComponentName116 Field Value Type Description System.Byte rchRenderModelComponentName117 Declaration public byte rchRenderModelComponentName117 Field Value Type Description System.Byte rchRenderModelComponentName118 Declaration public byte rchRenderModelComponentName118 Field Value Type Description System.Byte rchRenderModelComponentName119 Declaration public byte rchRenderModelComponentName119 Field Value Type Description System.Byte rchRenderModelComponentName12 Declaration public byte rchRenderModelComponentName12 Field Value Type Description System.Byte rchRenderModelComponentName120 Declaration public byte rchRenderModelComponentName120 Field Value Type Description System.Byte rchRenderModelComponentName121 Declaration public byte rchRenderModelComponentName121 Field Value Type Description System.Byte rchRenderModelComponentName122 Declaration public byte rchRenderModelComponentName122 Field Value Type Description System.Byte rchRenderModelComponentName123 Declaration public byte rchRenderModelComponentName123 Field Value Type Description System.Byte rchRenderModelComponentName124 Declaration public byte rchRenderModelComponentName124 Field Value Type Description System.Byte rchRenderModelComponentName125 Declaration public byte rchRenderModelComponentName125 Field Value Type Description System.Byte rchRenderModelComponentName126 Declaration public byte rchRenderModelComponentName126 Field Value Type Description System.Byte rchRenderModelComponentName127 Declaration public byte rchRenderModelComponentName127 Field Value Type Description System.Byte rchRenderModelComponentName13 Declaration public byte rchRenderModelComponentName13 Field Value Type Description System.Byte rchRenderModelComponentName14 Declaration public byte rchRenderModelComponentName14 Field Value Type Description System.Byte rchRenderModelComponentName15 Declaration public byte rchRenderModelComponentName15 Field Value Type Description System.Byte rchRenderModelComponentName16 Declaration public byte rchRenderModelComponentName16 Field Value Type Description System.Byte rchRenderModelComponentName17 Declaration public byte rchRenderModelComponentName17 Field Value Type Description System.Byte rchRenderModelComponentName18 Declaration public byte rchRenderModelComponentName18 Field Value Type Description System.Byte rchRenderModelComponentName19 Declaration public byte rchRenderModelComponentName19 Field Value Type Description System.Byte rchRenderModelComponentName2 Declaration public byte rchRenderModelComponentName2 Field Value Type Description System.Byte rchRenderModelComponentName20 Declaration public byte rchRenderModelComponentName20 Field Value Type Description System.Byte rchRenderModelComponentName21 Declaration public byte rchRenderModelComponentName21 Field Value Type Description System.Byte rchRenderModelComponentName22 Declaration public byte rchRenderModelComponentName22 Field Value Type Description System.Byte rchRenderModelComponentName23 Declaration public byte rchRenderModelComponentName23 Field Value Type Description System.Byte rchRenderModelComponentName24 Declaration public byte rchRenderModelComponentName24 Field Value Type Description System.Byte rchRenderModelComponentName25 Declaration public byte rchRenderModelComponentName25 Field Value Type Description System.Byte rchRenderModelComponentName26 Declaration public byte rchRenderModelComponentName26 Field Value Type Description System.Byte rchRenderModelComponentName27 Declaration public byte rchRenderModelComponentName27 Field Value Type Description System.Byte rchRenderModelComponentName28 Declaration public byte rchRenderModelComponentName28 Field Value Type Description System.Byte rchRenderModelComponentName29 Declaration public byte rchRenderModelComponentName29 Field Value Type Description System.Byte rchRenderModelComponentName3 Declaration public byte rchRenderModelComponentName3 Field Value Type Description System.Byte rchRenderModelComponentName30 Declaration public byte rchRenderModelComponentName30 Field Value Type Description System.Byte rchRenderModelComponentName31 Declaration public byte rchRenderModelComponentName31 Field Value Type Description System.Byte rchRenderModelComponentName32 Declaration public byte rchRenderModelComponentName32 Field Value Type Description System.Byte rchRenderModelComponentName33 Declaration public byte rchRenderModelComponentName33 Field Value Type Description System.Byte rchRenderModelComponentName34 Declaration public byte rchRenderModelComponentName34 Field Value Type Description System.Byte rchRenderModelComponentName35 Declaration public byte rchRenderModelComponentName35 Field Value Type Description System.Byte rchRenderModelComponentName36 Declaration public byte rchRenderModelComponentName36 Field Value Type Description System.Byte rchRenderModelComponentName37 Declaration public byte rchRenderModelComponentName37 Field Value Type Description System.Byte rchRenderModelComponentName38 Declaration public byte rchRenderModelComponentName38 Field Value Type Description System.Byte rchRenderModelComponentName39 Declaration public byte rchRenderModelComponentName39 Field Value Type Description System.Byte rchRenderModelComponentName4 Declaration public byte rchRenderModelComponentName4 Field Value Type Description System.Byte rchRenderModelComponentName40 Declaration public byte rchRenderModelComponentName40 Field Value Type Description System.Byte rchRenderModelComponentName41 Declaration public byte rchRenderModelComponentName41 Field Value Type Description System.Byte rchRenderModelComponentName42 Declaration public byte rchRenderModelComponentName42 Field Value Type Description System.Byte rchRenderModelComponentName43 Declaration public byte rchRenderModelComponentName43 Field Value Type Description System.Byte rchRenderModelComponentName44 Declaration public byte rchRenderModelComponentName44 Field Value Type Description System.Byte rchRenderModelComponentName45 Declaration public byte rchRenderModelComponentName45 Field Value Type Description System.Byte rchRenderModelComponentName46 Declaration public byte rchRenderModelComponentName46 Field Value Type Description System.Byte rchRenderModelComponentName47 Declaration public byte rchRenderModelComponentName47 Field Value Type Description System.Byte rchRenderModelComponentName48 Declaration public byte rchRenderModelComponentName48 Field Value Type Description System.Byte rchRenderModelComponentName49 Declaration public byte rchRenderModelComponentName49 Field Value Type Description System.Byte rchRenderModelComponentName5 Declaration public byte rchRenderModelComponentName5 Field Value Type Description System.Byte rchRenderModelComponentName50 Declaration public byte rchRenderModelComponentName50 Field Value Type Description System.Byte rchRenderModelComponentName51 Declaration public byte rchRenderModelComponentName51 Field Value Type Description System.Byte rchRenderModelComponentName52 Declaration public byte rchRenderModelComponentName52 Field Value Type Description System.Byte rchRenderModelComponentName53 Declaration public byte rchRenderModelComponentName53 Field Value Type Description System.Byte rchRenderModelComponentName54 Declaration public byte rchRenderModelComponentName54 Field Value Type Description System.Byte rchRenderModelComponentName55 Declaration public byte rchRenderModelComponentName55 Field Value Type Description System.Byte rchRenderModelComponentName56 Declaration public byte rchRenderModelComponentName56 Field Value Type Description System.Byte rchRenderModelComponentName57 Declaration public byte rchRenderModelComponentName57 Field Value Type Description System.Byte rchRenderModelComponentName58 Declaration public byte rchRenderModelComponentName58 Field Value Type Description System.Byte rchRenderModelComponentName59 Declaration public byte rchRenderModelComponentName59 Field Value Type Description System.Byte rchRenderModelComponentName6 Declaration public byte rchRenderModelComponentName6 Field Value Type Description System.Byte rchRenderModelComponentName60 Declaration public byte rchRenderModelComponentName60 Field Value Type Description System.Byte rchRenderModelComponentName61 Declaration public byte rchRenderModelComponentName61 Field Value Type Description System.Byte rchRenderModelComponentName62 Declaration public byte rchRenderModelComponentName62 Field Value Type Description System.Byte rchRenderModelComponentName63 Declaration public byte rchRenderModelComponentName63 Field Value Type Description System.Byte rchRenderModelComponentName64 Declaration public byte rchRenderModelComponentName64 Field Value Type Description System.Byte rchRenderModelComponentName65 Declaration public byte rchRenderModelComponentName65 Field Value Type Description System.Byte rchRenderModelComponentName66 Declaration public byte rchRenderModelComponentName66 Field Value Type Description System.Byte rchRenderModelComponentName67 Declaration public byte rchRenderModelComponentName67 Field Value Type Description System.Byte rchRenderModelComponentName68 Declaration public byte rchRenderModelComponentName68 Field Value Type Description System.Byte rchRenderModelComponentName69 Declaration public byte rchRenderModelComponentName69 Field Value Type Description System.Byte rchRenderModelComponentName7 Declaration public byte rchRenderModelComponentName7 Field Value Type Description System.Byte rchRenderModelComponentName70 Declaration public byte rchRenderModelComponentName70 Field Value Type Description System.Byte rchRenderModelComponentName71 Declaration public byte rchRenderModelComponentName71 Field Value Type Description System.Byte rchRenderModelComponentName72 Declaration public byte rchRenderModelComponentName72 Field Value Type Description System.Byte rchRenderModelComponentName73 Declaration public byte rchRenderModelComponentName73 Field Value Type Description System.Byte rchRenderModelComponentName74 Declaration public byte rchRenderModelComponentName74 Field Value Type Description System.Byte rchRenderModelComponentName75 Declaration public byte rchRenderModelComponentName75 Field Value Type Description System.Byte rchRenderModelComponentName76 Declaration public byte rchRenderModelComponentName76 Field Value Type Description System.Byte rchRenderModelComponentName77 Declaration public byte rchRenderModelComponentName77 Field Value Type Description System.Byte rchRenderModelComponentName78 Declaration public byte rchRenderModelComponentName78 Field Value Type Description System.Byte rchRenderModelComponentName79 Declaration public byte rchRenderModelComponentName79 Field Value Type Description System.Byte rchRenderModelComponentName8 Declaration public byte rchRenderModelComponentName8 Field Value Type Description System.Byte rchRenderModelComponentName80 Declaration public byte rchRenderModelComponentName80 Field Value Type Description System.Byte rchRenderModelComponentName81 Declaration public byte rchRenderModelComponentName81 Field Value Type Description System.Byte rchRenderModelComponentName82 Declaration public byte rchRenderModelComponentName82 Field Value Type Description System.Byte rchRenderModelComponentName83 Declaration public byte rchRenderModelComponentName83 Field Value Type Description System.Byte rchRenderModelComponentName84 Declaration public byte rchRenderModelComponentName84 Field Value Type Description System.Byte rchRenderModelComponentName85 Declaration public byte rchRenderModelComponentName85 Field Value Type Description System.Byte rchRenderModelComponentName86 Declaration public byte rchRenderModelComponentName86 Field Value Type Description System.Byte rchRenderModelComponentName87 Declaration public byte rchRenderModelComponentName87 Field Value Type Description System.Byte rchRenderModelComponentName88 Declaration public byte rchRenderModelComponentName88 Field Value Type Description System.Byte rchRenderModelComponentName89 Declaration public byte rchRenderModelComponentName89 Field Value Type Description System.Byte rchRenderModelComponentName9 Declaration public byte rchRenderModelComponentName9 Field Value Type Description System.Byte rchRenderModelComponentName90 Declaration public byte rchRenderModelComponentName90 Field Value Type Description System.Byte rchRenderModelComponentName91 Declaration public byte rchRenderModelComponentName91 Field Value Type Description System.Byte rchRenderModelComponentName92 Declaration public byte rchRenderModelComponentName92 Field Value Type Description System.Byte rchRenderModelComponentName93 Declaration public byte rchRenderModelComponentName93 Field Value Type Description System.Byte rchRenderModelComponentName94 Declaration public byte rchRenderModelComponentName94 Field Value Type Description System.Byte rchRenderModelComponentName95 Declaration public byte rchRenderModelComponentName95 Field Value Type Description System.Byte rchRenderModelComponentName96 Declaration public byte rchRenderModelComponentName96 Field Value Type Description System.Byte rchRenderModelComponentName97 Declaration public byte rchRenderModelComponentName97 Field Value Type Description System.Byte rchRenderModelComponentName98 Declaration public byte rchRenderModelComponentName98 Field Value Type Description System.Byte rchRenderModelComponentName99 Declaration public byte rchRenderModelComponentName99 Field Value Type Description System.Byte trackedDeviceIndex Declaration public uint trackedDeviceIndex Field Value Type Description System.UInt32 Properties rchRenderModelComponentName Declaration public string rchRenderModelComponentName { get; } Property Value Type Description System.String"
  },
  "api/Valve.VR.HmdMatrix34_t.html": {
    "href": "api/Valve.VR.HmdMatrix34_t.html",
    "title": "Struct HmdMatrix34_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdMatrix34_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdMatrix34_t Fields m0 Declaration public float m0 Field Value Type Description System.Single m1 Declaration public float m1 Field Value Type Description System.Single m10 Declaration public float m10 Field Value Type Description System.Single m11 Declaration public float m11 Field Value Type Description System.Single m2 Declaration public float m2 Field Value Type Description System.Single m3 Declaration public float m3 Field Value Type Description System.Single m4 Declaration public float m4 Field Value Type Description System.Single m5 Declaration public float m5 Field Value Type Description System.Single m6 Declaration public float m6 Field Value Type Description System.Single m7 Declaration public float m7 Field Value Type Description System.Single m8 Declaration public float m8 Field Value Type Description System.Single m9 Declaration public float m9 Field Value Type Description System.Single"
  },
  "api/Valve.VR.VRTextureBounds_t.html": {
    "href": "api/Valve.VR.VRTextureBounds_t.html",
    "title": "Struct VRTextureBounds_t | SteamVR Unity Plugin",
    "keywords": "Struct VRTextureBounds_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRTextureBounds_t Fields uMax Declaration public float uMax Field Value Type Description System.Single uMin Declaration public float uMin Field Value Type Description System.Single vMax Declaration public float vMax Field Value Type Description System.Single vMin Declaration public float vMin Field Value Type Description System.Single"
  },
  "api/Valve.VR.VRSkeletalSummaryData_t.html": {
    "href": "api/Valve.VR.VRSkeletalSummaryData_t.html",
    "title": "Struct VRSkeletalSummaryData_t | SteamVR Unity Plugin",
    "keywords": "Struct VRSkeletalSummaryData_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRSkeletalSummaryData_t Fields flFingerCurl0 Declaration public float flFingerCurl0 Field Value Type Description System.Single flFingerCurl1 Declaration public float flFingerCurl1 Field Value Type Description System.Single flFingerCurl2 Declaration public float flFingerCurl2 Field Value Type Description System.Single flFingerCurl3 Declaration public float flFingerCurl3 Field Value Type Description System.Single flFingerCurl4 Declaration public float flFingerCurl4 Field Value Type Description System.Single flFingerSplay0 Declaration public float flFingerSplay0 Field Value Type Description System.Single flFingerSplay1 Declaration public float flFingerSplay1 Field Value Type Description System.Single flFingerSplay2 Declaration public float flFingerSplay2 Field Value Type Description System.Single flFingerSplay3 Declaration public float flFingerSplay3 Field Value Type Description System.Single"
  },
  "api/Valve.VR.VROverlayTransformType.html": {
    "href": "api/Valve.VR.VROverlayTransformType.html",
    "title": "Enum VROverlayTransformType | SteamVR Unity Plugin",
    "keywords": "Enum VROverlayTransformType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum VROverlayTransformType Fields Name Description VROverlayTransform_Absolute VROverlayTransform_SystemOverlay VROverlayTransform_TrackedComponent VROverlayTransform_TrackedDeviceRelative"
  },
  "api/Valve.VR.VROverlayIntersectionResults_t.html": {
    "href": "api/Valve.VR.VROverlayIntersectionResults_t.html",
    "title": "Struct VROverlayIntersectionResults_t | SteamVR Unity Plugin",
    "keywords": "Struct VROverlayIntersectionResults_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VROverlayIntersectionResults_t Fields fDistance Declaration public float fDistance Field Value Type Description System.Single vNormal Declaration public HmdVector3_t vNormal Field Value Type Description HmdVector3_t vPoint Declaration public HmdVector3_t vPoint Field Value Type Description HmdVector3_t vUVs Declaration public HmdVector2_t vUVs Field Value Type Description HmdVector2_t"
  },
  "api/Valve.VR.VROverlayIntersectionParams_t.html": {
    "href": "api/Valve.VR.VROverlayIntersectionParams_t.html",
    "title": "Struct VROverlayIntersectionParams_t | SteamVR Unity Plugin",
    "keywords": "Struct VROverlayIntersectionParams_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VROverlayIntersectionParams_t Fields eOrigin Declaration public ETrackingUniverseOrigin eOrigin Field Value Type Description ETrackingUniverseOrigin vDirection Declaration public HmdVector3_t vDirection Field Value Type Description HmdVector3_t vSource Declaration public HmdVector3_t vSource Field Value Type Description HmdVector3_t"
  },
  "api/Valve.VR.VROverlayIntersectionMaskPrimitive_t.html": {
    "href": "api/Valve.VR.VROverlayIntersectionMaskPrimitive_t.html",
    "title": "Struct VROverlayIntersectionMaskPrimitive_t | SteamVR Unity Plugin",
    "keywords": "Struct VROverlayIntersectionMaskPrimitive_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VROverlayIntersectionMaskPrimitive_t Fields m_nPrimitiveType Declaration public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType Field Value Type Description EVROverlayIntersectionMaskPrimitiveType m_Primitive Declaration public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive Field Value Type Description VROverlayIntersectionMaskPrimitive_Data_t"
  },
  "api/Valve.VR.SteamVR_CameraFlip.html": {
    "href": "api/Valve.VR.SteamVR_CameraFlip.html",
    "title": "Class SteamVR_CameraFlip | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_CameraFlip Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_CameraFlip Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] public class SteamVR_CameraFlip : MonoBehaviour"
  },
  "api/Valve.VR.SteamVR_Camera.html": {
    "href": "api/Valve.VR.SteamVR_Camera.html",
    "title": "Class SteamVR_Camera | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Camera Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Camera Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Camera))] public class SteamVR_Camera : MonoBehaviour Fields wireframe Declaration public bool wireframe Field Value Type Description System.Boolean Properties baseName Declaration public string baseName { get; } Property Value Type Description System.String camera Declaration public Camera camera { get; } Property Value Type Description UnityEngine.Camera ears Declaration public Transform ears { get; } Property Value Type Description UnityEngine.Transform head Declaration public Transform head { get; } Property Value Type Description UnityEngine.Transform isExpanded Declaration public bool isExpanded { get; } Property Value Type Description System.Boolean offset Declaration public Transform offset { get; } Property Value Type Description UnityEngine.Transform origin Declaration public Transform origin { get; } Property Value Type Description UnityEngine.Transform sceneResolutionScale Declaration public static float sceneResolutionScale { get; set; } Property Value Type Description System.Single Methods Collapse() Declaration public void Collapse() Expand() Declaration public void Expand() ForceLast() Declaration public void ForceLast() GetRay() Declaration public Ray GetRay() Returns Type Description UnityEngine.Ray"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton.ActiveChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton.ActiveChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Skeleton.ActiveChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Skeleton.ActiveChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ActiveChangeHandler(SteamVR_Behaviour_Skeleton fromAction, SteamVR_Input_Sources inputSource, bool active); Parameters Type Name Description SteamVR_Behaviour_Skeleton fromAction SteamVR_Input_Sources inputSource System.Boolean active"
  },
  "api/Valve.VR.SteamVR_Behaviour_SingleEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_SingleEvent.html",
    "title": "Class SteamVR_Behaviour_SingleEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_SingleEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Single , SteamVR_Input_Sources , System.Single , System.Single > SteamVR_Behaviour_SingleEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single>.Invoke(Valve.VR.SteamVR_Behaviour_Single, Valve.VR.SteamVR_Input_Sources, System.Single, System.Single) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_SingleEvent : UnityEvent<SteamVR_Behaviour_Single, SteamVR_Input_Sources, float, float>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Single.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Single.html",
    "title": "Class SteamVR_Behaviour_Single | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Single SteamVR_Behaviour_Single simplifies the use of single actions. It gives an event to subscribe to for when the action has changed. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Single Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Single : MonoBehaviour Fields inputSource The device this action applies to. Any if the action is not device specific. Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources onAxis Unity event that Fires whenever the action's value has been updated and is non-zero Declaration [Tooltip(\"Fires whenever the action's value has been updated and is non-zero.\")] public SteamVR_Behaviour_SingleEvent onAxis Field Value Type Description SteamVR_Behaviour_SingleEvent onAxisEvent C# event that fires whenever the action's value has been updated and is non-zero Declaration public SteamVR_Behaviour_Single.AxisHandler onAxisEvent Field Value Type Description SteamVR_Behaviour_Single.AxisHandler onChange Unity event that Fires whenever the action's value has changed since the last update. Declaration [Tooltip(\"Fires whenever the action's value has changed since the last update.\")] public SteamVR_Behaviour_SingleEvent onChange Field Value Type Description SteamVR_Behaviour_SingleEvent onChangeEvent C# event that fires whenever the action's value has changed since the last update. Declaration public SteamVR_Behaviour_Single.ChangeHandler onChangeEvent Field Value Type Description SteamVR_Behaviour_Single.ChangeHandler onUpdate Unity event that Fires whenever the action's value has been updated Declaration [Tooltip(\"Fires whenever the action's value has been updated.\")] public SteamVR_Behaviour_SingleEvent onUpdate Field Value Type Description SteamVR_Behaviour_SingleEvent onUpdateEvent C# event that fires whenever the action's value has been updated Declaration public SteamVR_Behaviour_Single.UpdateHandler onUpdateEvent Field Value Type Description SteamVR_Behaviour_Single.UpdateHandler singleAction The single action to get data from. Declaration public SteamVR_Action_Single singleAction Field Value Type Description SteamVR_Action_Single Properties isActive Returns whether this action is bound and the action set is active Declaration public bool isActive { get; } Property Value Type Description System.Boolean Methods AddHandlers() Declaration protected void AddHandlers() GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RemoveHandlers() Declaration protected void RemoveHandlers()"
  },
  "api/Valve.VR.SteamVR_Action_Vector3.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3.html",
    "title": "Class SteamVR_Action_Vector3 | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vector3 Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Vector3_Source_Map , SteamVR_Action_Vector3_Source > SteamVR_Action_In < SteamVR_Action_Vector3_Source_Map , SteamVR_Action_Vector3_Source > SteamVR_Action_Vector3 Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Vector3 ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.changed SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.sourceMap SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.fullPath SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.handle SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.actionSet SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.direction SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.active SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.lastActive SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.activeBinding SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.initialized SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Vector3 : SteamVR_Action_In<SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Vector3, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Vector3() Declaration public SteamVR_Action_Vector3() Properties axis [Shortcut to: SteamVR_Input_Sources.Any] The current Vector3 value of the action. Note: Will only return non-zero if the action is also active. Declaration public Vector3 axis { get; } Property Value Type Description UnityEngine.Vector3 delta [Shortcut to: SteamVR_Input_Sources.Any] The Vector3 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector3 delta { get; } Property Value Type Description UnityEngine.Vector3 lastAxis [Shortcut to: SteamVR_Input_Sources.Any] The Vector3 value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public Vector3 lastAxis { get; } Property Value Type Description UnityEngine.Vector3 lastDelta [Shortcut to: SteamVR_Input_Sources.Any] The Vector3 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public Vector3 lastDelta { get; } Property Value Type Description UnityEngine.Vector3 Methods AddOnActiveBindingChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound Declaration public void AddOnActiveBindingChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnActiveChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void AddOnActiveChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnAxisListener(SteamVR_Action_Vector3.AxisHandler, SteamVR_Input_Sources) Executes a function when the Vector3 value of the action is non-zero. Declaration public void AddOnAxisListener(SteamVR_Action_Vector3.AxisHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.AxisHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnChangeListener(SteamVR_Action_Vector3.ChangeHandler, SteamVR_Input_Sources) Executes a function when the axis changes by more than the specified changeTolerance Declaration public void AddOnChangeListener(SteamVR_Action_Vector3.ChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnUpdateListener(SteamVR_Action_Vector3.UpdateHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) is updated. Declaration public void AddOnUpdateListener(SteamVR_Action_Vector3.UpdateHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. GetAxis(SteamVR_Input_Sources) The current Vector3 value of the action Declaration public Vector3 GetAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetAxisDelta(SteamVR_Input_Sources) The Vector3 value difference between this update and the previous update. Declaration public Vector3 GetAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLastAxis(SteamVR_Input_Sources) The Vector3 value of the action from the previous update. Declaration public Vector3 GetLastAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 GetLastAxisDelta(SteamVR_Input_Sources) The Vector3 value difference between the previous update and update before that. Declaration public Vector3 GetLastAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description UnityEngine.Vector3 RemoveOnActiveBindingChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveBindingChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnActiveChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Vector3.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnAxisListener(SteamVR_Action_Vector3.AxisHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnAxisListener(SteamVR_Action_Vector3.AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.AxisHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnChangeListener(SteamVR_Action_Vector3.ChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Action_Vector3.ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnUpdateListener(SteamVR_Action_Vector3.UpdateHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Action_Vector3.UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vector3.UpdateHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Events onActiveBindingChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Vector3.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vector3.ActiveChangeHandler onActiveChange [Shortcut to: SteamVR_Input_Sources.Any] Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Vector3.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vector3.ActiveChangeHandler onAxis [Shortcut to: SteamVR_Input_Sources.Any] This event will fire whenever the Vector3 value of the action is non-zero Declaration public event SteamVR_Action_Vector3.AxisHandler onAxis Event Type Type Description SteamVR_Action_Vector3.AxisHandler onChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Vector3.ChangeHandler onChange Event Type Type Description SteamVR_Action_Vector3.ChangeHandler onUpdate [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the action is updated Declaration public event SteamVR_Action_Vector3.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Vector3.UpdateHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Vector3 ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Vector3.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector3.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Vector3.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector3.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta); Parameters Type Name Description SteamVR_Action_Vector3 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector3 axis UnityEngine.Vector3 delta"
  },
  "api/Valve.VR.InteractionSystem.FallbackCameraController.html": {
    "href": "api/Valve.VR.InteractionSystem.FallbackCameraController.html",
    "title": "Class FallbackCameraController | SteamVR Unity Plugin",
    "keywords": "Class FallbackCameraController Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FallbackCameraController Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Camera))] public class FallbackCameraController : MonoBehaviour Fields shiftSpeed Declaration public float shiftSpeed Field Value Type Description System.Single showInstructions Declaration public bool showInstructions Field Value Type Description System.Boolean speed Declaration public float speed Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.ExplosionWobble.html": {
    "href": "api/Valve.VR.InteractionSystem.ExplosionWobble.html",
    "title": "Class ExplosionWobble | SteamVR Unity Plugin",
    "keywords": "Class ExplosionWobble Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ExplosionWobble Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ExplosionWobble : MonoBehaviour Methods ExplosionEvent(Vector3) Declaration public void ExplosionEvent(Vector3 explosionPos) Parameters Type Name Description UnityEngine.Vector3 explosionPos"
  },
  "api/Valve.VR.InteractionSystem.ComplexThrowable.html": {
    "href": "api/Valve.VR.InteractionSystem.ComplexThrowable.html",
    "title": "Class ComplexThrowable | SteamVR Unity Plugin",
    "keywords": "Class ComplexThrowable Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ComplexThrowable Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class ComplexThrowable : MonoBehaviour Fields attachForce Declaration public float attachForce Field Value Type Description System.Single attachForceDamper Declaration public float attachForceDamper Field Value Type Description System.Single attachmentFlags Declaration [EnumFlags] public Hand.AttachmentFlags attachmentFlags Field Value Type Description Hand.AttachmentFlags attachMode Declaration public ComplexThrowable.AttachMode attachMode Field Value Type Description ComplexThrowable.AttachMode"
  },
  "api/Valve.VR.InteractionSystem.ComplexThrowable.AttachMode.html": {
    "href": "api/Valve.VR.InteractionSystem.ComplexThrowable.AttachMode.html",
    "title": "Enum ComplexThrowable.AttachMode | SteamVR Unity Plugin",
    "keywords": "Enum ComplexThrowable.AttachMode Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum AttachMode Fields Name Description FixedJoint Force"
  },
  "api/Valve.VR.InteractionSystem.ArcheryTarget.html": {
    "href": "api/Valve.VR.InteractionSystem.ArcheryTarget.html",
    "title": "Class ArcheryTarget | SteamVR Unity Plugin",
    "keywords": "Class ArcheryTarget Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ArcheryTarget Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ArcheryTarget : MonoBehaviour Fields baseTransform Declaration public Transform baseTransform Field Value Type Description UnityEngine.Transform fallenDownTransform Declaration public Transform fallenDownTransform Field Value Type Description UnityEngine.Transform fallTime Declaration public float fallTime Field Value Type Description System.Single onceOnly Declaration public bool onceOnly Field Value Type Description System.Boolean onTakeDamage Declaration public UnityEvent onTakeDamage Field Value Type Description UnityEngine.Events.UnityEvent targetCenter Declaration public Transform targetCenter Field Value Type Description UnityEngine.Transform"
  },
  "api/Valve.VR.InteractionSystem.AllowTeleportWhileAttachedToHand.html": {
    "href": "api/Valve.VR.InteractionSystem.AllowTeleportWhileAttachedToHand.html",
    "title": "Class AllowTeleportWhileAttachedToHand | SteamVR Unity Plugin",
    "keywords": "Class AllowTeleportWhileAttachedToHand Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AllowTeleportWhileAttachedToHand Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class AllowTeleportWhileAttachedToHand : MonoBehaviour Fields overrideHoverLock Declaration public bool overrideHoverLock Field Value Type Description System.Boolean teleportAllowed Declaration public bool teleportAllowed Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.HmdQuaternionf_t.html": {
    "href": "api/Valve.VR.HmdQuaternionf_t.html",
    "title": "Struct HmdQuaternionf_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdQuaternionf_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdQuaternionf_t Fields w Declaration public float w Field Value Type Description System.Single x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single z Declaration public float z Field Value Type Description System.Single"
  },
  "api/Valve.VR.HmdQuad_t.html": {
    "href": "api/Valve.VR.HmdQuad_t.html",
    "title": "Struct HmdQuad_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdQuad_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdQuad_t Fields vCorners0 Declaration public HmdVector3_t vCorners0 Field Value Type Description HmdVector3_t vCorners1 Declaration public HmdVector3_t vCorners1 Field Value Type Description HmdVector3_t vCorners2 Declaration public HmdVector3_t vCorners2 Field Value Type Description HmdVector3_t vCorners3 Declaration public HmdVector3_t vCorners3 Field Value Type Description HmdVector3_t"
  },
  "api/Valve.VR.VRTextureWithPoseAndDepth_t.html": {
    "href": "api/Valve.VR.VRTextureWithPoseAndDepth_t.html",
    "title": "Struct VRTextureWithPoseAndDepth_t | SteamVR Unity Plugin",
    "keywords": "Struct VRTextureWithPoseAndDepth_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRTextureWithPoseAndDepth_t Fields depth Declaration public VRTextureDepthInfo_t depth Field Value Type Description VRTextureDepthInfo_t"
  },
  "api/Valve.VR.VRTextureWithDepth_t.html": {
    "href": "api/Valve.VR.VRTextureWithDepth_t.html",
    "title": "Struct VRTextureWithDepth_t | SteamVR Unity Plugin",
    "keywords": "Struct VRTextureWithDepth_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRTextureWithDepth_t Fields depth Declaration public VRTextureDepthInfo_t depth Field Value Type Description VRTextureDepthInfo_t"
  },
  "api/Valve.VR.VRTextureDepthInfo_t.html": {
    "href": "api/Valve.VR.VRTextureDepthInfo_t.html",
    "title": "Struct VRTextureDepthInfo_t | SteamVR Unity Plugin",
    "keywords": "Struct VRTextureDepthInfo_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRTextureDepthInfo_t Fields handle Declaration public IntPtr handle Field Value Type Description System.IntPtr mProjection Declaration public HmdMatrix44_t mProjection Field Value Type Description HmdMatrix44_t vRange Declaration public HmdVector2_t vRange Field Value Type Description HmdVector2_t"
  },
  "api/Valve.VR.VREvent_Screenshot_t.html": {
    "href": "api/Valve.VR.VREvent_Screenshot_t.html",
    "title": "Struct VREvent_Screenshot_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Screenshot_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Screenshot_t Fields handle Declaration public uint handle Field Value Type Description System.UInt32 type Declaration public uint type Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_ScreenshotProgress_t.html": {
    "href": "api/Valve.VR.VREvent_ScreenshotProgress_t.html",
    "title": "Struct VREvent_ScreenshotProgress_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_ScreenshotProgress_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_ScreenshotProgress_t Fields progress Declaration public float progress Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_Reserved_t.html": {
    "href": "api/Valve.VR.VREvent_Reserved_t.html",
    "title": "Struct VREvent_Reserved_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Reserved_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Reserved_t Fields reserved0 Declaration public ulong reserved0 Field Value Type Description System.UInt64 reserved1 Declaration public ulong reserved1 Field Value Type Description System.UInt64 reserved2 Declaration public ulong reserved2 Field Value Type Description System.UInt64 reserved3 Declaration public ulong reserved3 Field Value Type Description System.UInt64 reserved4 Declaration public ulong reserved4 Field Value Type Description System.UInt64 reserved5 Declaration public ulong reserved5 Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_Property_t.html": {
    "href": "api/Valve.VR.VREvent_Property_t.html",
    "title": "Struct VREvent_Property_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Property_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Property_t Fields container Declaration public ulong container Field Value Type Description System.UInt64 prop Declaration public ETrackedDeviceProperty prop Field Value Type Description ETrackedDeviceProperty"
  },
  "api/Valve.VR.SteamVR_Skybox.CellSize.html": {
    "href": "api/Valve.VR.SteamVR_Skybox.CellSize.html",
    "title": "Enum SteamVR_Skybox.CellSize | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skybox.CellSize Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum CellSize Fields Name Description x1024 x16 x32 x64 x8"
  },
  "api/Valve.VR.SteamVR_Action_Source_Map-1.html": {
    "href": "api/Valve.VR.SteamVR_Action_Source_Map-1.html",
    "title": "Class SteamVR_Action_Source_Map<SourceElement> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Source_Map<SourceElement> Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map<SourceElement> SteamVR_Action_In_Source_Map<SourceElement> SteamVR_Action_Vibration_Source_Map Inherited Members SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class SteamVR_Action_Source_Map<SourceElement> : SteamVR_Action_Source_Map where SourceElement : SteamVR_Action_Source, new() Type Parameters Name Description SourceElement Fields sources Declaration protected Dictionary<SteamVR_Input_Sources, SourceElement> sources Field Value Type Description System.Collections.Generic.Dictionary < SteamVR_Input_Sources , SourceElement> Properties Item[SteamVR_Input_Sources] Gets a reference to the action restricted to a certain input source. LeftHand or RightHand for example. Declaration public SourceElement this[SteamVR_Input_Sources inputSource] { get; } Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like data from Property Value Type Description SourceElement Methods GetSourceElementForIndexer(SteamVR_Input_Sources) Declaration protected virtual SourceElement GetSourceElementForIndexer(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description SourceElement Initialize() [Should not be called by user code] Initializes the individual sources as well as the base map itself. Gets the handle for the action from SteamVR and does any other SteamVR related setup that needs to be done Declaration public override void Initialize() Overrides SteamVR_Action_Source_Map.Initialize() OnAccessSource(SteamVR_Input_Sources) Declaration protected virtual void OnAccessSource(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) Declaration protected override void PreinitializeMap(SteamVR_Input_Sources inputSource, SteamVR_Action wrappingAction) Parameters Type Name Description SteamVR_Input_Sources inputSource SteamVR_Action wrappingAction Overrides SteamVR_Action_Source_Map.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action)"
  },
  "api/Valve.VR.SteamVR_Action_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Source.html",
    "title": "Class SteamVR_Action_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Out_Source Implements ISteamVR_Action_Source Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public abstract class SteamVR_Action_Source : ISteamVR_Action_Source Constructors SteamVR_Action_Source() Declaration public SteamVR_Action_Source() Fields action Declaration protected SteamVR_Action action Field Value Type Description SteamVR_Action inputSourceHandle Declaration protected ulong inputSourceHandle Field Value Type Description System.UInt64 Properties actionSet The ActionSet this action is contained within Declaration public SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet active Returns true if this action is bound and the ActionSet is active Declaration public abstract bool active { get; } Property Value Type Description System.Boolean activeBinding Returns true if the action is bound Declaration public abstract bool activeBinding { get; } Property Value Type Description System.Boolean direction The action direction of this action (in for input - most actions, out for output - haptics) Declaration public SteamVR_ActionDirections direction { get; } Property Value Type Description SteamVR_ActionDirections fullPath The full string path for this action (from the action manifest) Declaration public string fullPath { get; } Property Value Type Description System.String handle The underlying handle for this action used for native SteamVR Input calls. Retrieved on Initialization from SteamVR. Declaration public ulong handle { get; } Property Value Type Description System.UInt64 inputSource The input source that this instance corresponds to. ex. LeftHand, RightHand Declaration public SteamVR_Input_Sources inputSource { get; protected set; } Property Value Type Description SteamVR_Input_Sources lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public abstract bool lastActive { get; protected set; } Property Value Type Description System.Boolean lastActiveBinding Returns true if the action was bound during the previous update Declaration public abstract bool lastActiveBinding { get; } Property Value Type Description System.Boolean setActive Returns true if the action set this is contained in is active for this input source (or Any) Declaration public bool setActive { get; } Property Value Type Description System.Boolean Methods Initialize() [Should not be called by user code] Initializes the handle for the inputSource, and any other related SteamVR data. Declaration public virtual void Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public virtual void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Implements ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Skeleton_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Skeleton_Source_Map.html",
    "title": "Class SteamVR_Action_Skeleton_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Skeleton_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Skeleton_Source > SteamVR_Action_In_Source_Map < SteamVR_Action_Skeleton_Source > SteamVR_Action_Pose_Source_Map < SteamVR_Action_Skeleton_Source > SteamVR_Action_Skeleton_Source_Map Inherited Members SteamVR_Action_Pose_Source_Map<SteamVR_Action_Skeleton_Source>.SetTrackingUniverseOrigin(ETrackingUniverseOrigin) SteamVR_Action_Pose_Source_Map<SteamVR_Action_Skeleton_Source>.UpdateValues(Boolean) SteamVR_Action_In_Source_Map<SteamVR_Action_Skeleton_Source>.updatingSources SteamVR_Action_In_Source_Map<SteamVR_Action_Skeleton_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Skeleton_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Skeleton_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Skeleton_Source>.UpdateValues() SteamVR_Action_Source_Map<SteamVR_Action_Skeleton_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Skeleton_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Skeleton_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Skeleton_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Skeleton_Source_Map : SteamVR_Action_Pose_Source_Map<SteamVR_Action_Skeleton_Source> Methods GetSourceElementForIndexer(SteamVR_Input_Sources) Declaration protected override SteamVR_Action_Skeleton_Source GetSourceElementForIndexer(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description SteamVR_Action_Skeleton_Source Overrides Valve.VR.SteamVR_Action_Source_Map<Valve.VR.SteamVR_Action_Skeleton_Source>.GetSourceElementForIndexer(Valve.VR.SteamVR_Input_Sources)"
  },
  "api/Valve.VR.SteamVR_ActionSet_Data.html": {
    "href": "api/Valve.VR.SteamVR_ActionSet_Data.html",
    "title": "Class SteamVR_ActionSet_Data | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_ActionSet_Data Action sets are logical groupings of actions. Multiple sets can be active at one time. Inheritance System.Object SteamVR_ActionSet_Data Implements ISteamVR_ActionSet Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_ActionSet_Data : ISteamVR_ActionSet Constructors SteamVR_ActionSet_Data() Declaration public SteamVR_ActionSet_Data() Fields initialized Declaration protected bool initialized Field Value Type Description System.Boolean rawSetActive Declaration protected Dictionary<SteamVR_Input_Sources, bool> rawSetActive Field Value Type Description System.Collections.Generic.Dictionary < SteamVR_Input_Sources , System.Boolean > rawSetLastChanged Declaration protected Dictionary<SteamVR_Input_Sources, float> rawSetLastChanged Field Value Type Description System.Collections.Generic.Dictionary < SteamVR_Input_Sources , System.Single > rawSetPriority Declaration protected Dictionary<SteamVR_Input_Sources, int> rawSetPriority Field Value Type Description System.Collections.Generic.Dictionary < SteamVR_Input_Sources , System.Int32 > Properties allActions All actions within this set (including out actions) Declaration public SteamVR_Action[] allActions { get; set; } Property Value Type Description SteamVR_Action [] fullPath The full path to this action set (ex: /actions/in/default) Declaration public string fullPath { get; set; } Property Value Type Description System.String handle Declaration public ulong handle { get; set; } Property Value Type Description System.UInt64 nonVisualInActions All IN actions within this set that are NOT pose or skeleton actions Declaration public ISteamVR_Action_In[] nonVisualInActions { get; set; } Property Value Type Description ISteamVR_Action_In [] outActionArray All out actions within this set Declaration public ISteamVR_Action_Out[] outActionArray { get; set; } Property Value Type Description ISteamVR_Action_Out [] poseActions All pose actions within this set Declaration public SteamVR_Action_Pose[] poseActions { get; set; } Property Value Type Description SteamVR_Action_Pose [] skeletonActions All skeleton actions within this set Declaration public SteamVR_Action_Skeleton[] skeletonActions { get; set; } Property Value Type Description SteamVR_Action_Skeleton [] usage Declaration public string usage { get; set; } Property Value Type Description System.String visualActions All pose and skeleton actions within this set Declaration public ISteamVR_Action_In[] visualActions { get; set; } Property Value Type Description ISteamVR_Action_In [] Methods Activate(SteamVR_Input_Sources, Int32, Boolean) Activate this set so its actions can be called Declaration public void Activate(SteamVR_Input_Sources activateForSource = SteamVR_Input_Sources.Any, int priority = 0, bool disableAllOtherActionSets = false) Parameters Type Name Description SteamVR_Input_Sources activateForSource Will activate this action set only for the specified source. Any if you want to activate for everything System.Int32 priority The priority of this action set. If you have two actions bound to the same input (button) the higher priority set will override the lower priority. If they are the same priority both will execute. System.Boolean disableAllOtherActionSets Disable all other action sets at the same time Deactivate(SteamVR_Input_Sources) Deactivate the action set so its actions can no longer be called Declaration public void Deactivate(SteamVR_Input_Sources forSource = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources forSource FinishPreInitialize() Declaration public void FinishPreInitialize() GetShortName() Gets the last part of the path for this action. Removes \"actions\" and direction. Declaration public string GetShortName() Returns Type Description System.String GetTimeLastChanged(SteamVR_Input_Sources) Returns the last time this action set was changed (set to active or inactive) Declaration public float GetTimeLastChanged(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Single Initialize() Declaration public void Initialize() IsActive(SteamVR_Input_Sources) Returns whether the set is currently active or not. Declaration public bool IsActive(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Boolean PreInitialize() Declaration public void PreInitialize() ReadRawSetActive(SteamVR_Input_Sources) Declaration public bool ReadRawSetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean ReadRawSetLastChanged(SteamVR_Input_Sources) Declaration public float ReadRawSetLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Single ReadRawSetPriority(SteamVR_Input_Sources) Declaration public int ReadRawSetPriority(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Int32 Implements ISteamVR_ActionSet"
  },
  "api/Valve.VR.SteamVR_ActionDirections.html": {
    "href": "api/Valve.VR.SteamVR_ActionDirections.html",
    "title": "Enum SteamVR_ActionDirections | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_ActionDirections The direction the the action. In actions get input, Out actions send input. Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_ActionDirections Fields Name Description In Out"
  },
  "api/Valve.VR.IVRTrackedCamera.html": {
    "href": "api/Valve.VR.IVRTrackedCamera.html",
    "title": "Struct IVRTrackedCamera | SteamVR Unity Plugin",
    "keywords": "Struct IVRTrackedCamera Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRTrackedCamera"
  },
  "api/Valve.VR.IVRSystem.html": {
    "href": "api/Valve.VR.IVRSystem.html",
    "title": "Struct IVRSystem | SteamVR Unity Plugin",
    "keywords": "Struct IVRSystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRSystem"
  },
  "api/Valve.VR.IVRApplications.html": {
    "href": "api/Valve.VR.IVRApplications.html",
    "title": "Struct IVRApplications | SteamVR Unity Plugin",
    "keywords": "Struct IVRApplications Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRApplications"
  },
  "api/Valve.VR.ETrackedDeviceClass.html": {
    "href": "api/Valve.VR.ETrackedDeviceClass.html",
    "title": "Enum ETrackedDeviceClass | SteamVR Unity Plugin",
    "keywords": "Enum ETrackedDeviceClass Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackedDeviceClass Fields Name Description Controller DisplayRedirect GenericTracker HMD Invalid Max TrackingReference"
  },
  "api/Valve.VR.EIOBufferError.html": {
    "href": "api/Valve.VR.EIOBufferError.html",
    "title": "Enum EIOBufferError | SteamVR Unity Plugin",
    "keywords": "Enum EIOBufferError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EIOBufferError Fields Name Description IOBuffer_InvalidArgument IOBuffer_InvalidHandle IOBuffer_OperationFailed IOBuffer_PathDoesNotExist IOBuffer_PathExists IOBuffer_Permission IOBuffer_Success"
  },
  "api/Valve.VR.EColorSpace.html": {
    "href": "api/Valve.VR.EColorSpace.html",
    "title": "Enum EColorSpace | SteamVR Unity Plugin",
    "keywords": "Enum EColorSpace Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EColorSpace Fields Name Description Auto Gamma Linear"
  },
  "api/Valve.VR.DistortionCoordinates_t.html": {
    "href": "api/Valve.VR.DistortionCoordinates_t.html",
    "title": "Struct DistortionCoordinates_t | SteamVR Unity Plugin",
    "keywords": "Struct DistortionCoordinates_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct DistortionCoordinates_t Fields rfBlue0 Declaration public float rfBlue0 Field Value Type Description System.Single rfBlue1 Declaration public float rfBlue1 Field Value Type Description System.Single rfGreen0 Declaration public float rfGreen0 Field Value Type Description System.Single rfGreen1 Declaration public float rfGreen1 Field Value Type Description System.Single rfRed0 Declaration public float rfRed0 Field Value Type Description System.Single rfRed1 Declaration public float rfRed1 Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_MessageOverlay_t.html": {
    "href": "api/Valve.VR.VREvent_MessageOverlay_t.html",
    "title": "Struct VREvent_MessageOverlay_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_MessageOverlay_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_MessageOverlay_t Fields unVRMessageOverlayResponse Declaration public uint unVRMessageOverlayResponse Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_Keyboard_t.html": {
    "href": "api/Valve.VR.VREvent_Keyboard_t.html",
    "title": "Struct VREvent_Keyboard_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Keyboard_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Keyboard_t Fields cNewInput0 Declaration public byte cNewInput0 Field Value Type Description System.Byte cNewInput1 Declaration public byte cNewInput1 Field Value Type Description System.Byte cNewInput2 Declaration public byte cNewInput2 Field Value Type Description System.Byte cNewInput3 Declaration public byte cNewInput3 Field Value Type Description System.Byte cNewInput4 Declaration public byte cNewInput4 Field Value Type Description System.Byte cNewInput5 Declaration public byte cNewInput5 Field Value Type Description System.Byte cNewInput6 Declaration public byte cNewInput6 Field Value Type Description System.Byte cNewInput7 Declaration public byte cNewInput7 Field Value Type Description System.Byte uUserValue Declaration public ulong uUserValue Field Value Type Description System.UInt64 Properties cNewInput Declaration public string cNewInput { get; } Property Value Type Description System.String"
  },
  "api/Valve.VR.SteamVR_RenderModel.RenderModelInterfaceHolder.html": {
    "href": "api/Valve.VR.SteamVR_RenderModel.RenderModelInterfaceHolder.html",
    "title": "Class SteamVR_RenderModel.RenderModelInterfaceHolder | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_RenderModel.RenderModelInterfaceHolder Inheritance System.Object SteamVR_RenderModel.RenderModelInterfaceHolder Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public sealed class RenderModelInterfaceHolder : IDisposable Properties instance Declaration public CVRRenderModels instance { get; } Property Value Type Description CVRRenderModels Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Valve.VR.SteamVR_RenderModel.RenderModel.html": {
    "href": "api/Valve.VR.SteamVR_RenderModel.RenderModel.html",
    "title": "Class SteamVR_RenderModel.RenderModel | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_RenderModel.RenderModel Inheritance System.Object SteamVR_RenderModel.RenderModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class RenderModel Constructors RenderModel(Mesh, Material) Declaration public RenderModel(Mesh mesh, Material material) Parameters Type Name Description UnityEngine.Mesh mesh UnityEngine.Material material Properties material Declaration public Material material { get; } Property Value Type Description UnityEngine.Material mesh Declaration public Mesh mesh { get; } Property Value Type Description UnityEngine.Mesh"
  },
  "api/Valve.VR.InteractionSystem.TeleportPointEditor.html": {
    "href": "api/Valve.VR.InteractionSystem.TeleportPointEditor.html",
    "title": "Class TeleportPointEditor | SteamVR Unity Plugin",
    "keywords": "Class TeleportPointEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor TeleportPointEditor Inherited Members UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.Repaint() UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.serializedObject UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [CustomEditor(typeof(TeleportPoint))] public class TeleportPointEditor : Editor, IPreviewable Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/Valve.VR.InteractionSystem.ModalThrowable.html": {
    "href": "api/Valve.VR.InteractionSystem.ModalThrowable.html",
    "title": "Class ModalThrowable | SteamVR Unity Plugin",
    "keywords": "Class ModalThrowable Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Throwable ModalThrowable Inherited Members Throwable.attachmentFlags Throwable.attachmentOffset Throwable.catchingSpeedThreshold Throwable.releaseVelocityStyle Throwable.releaseVelocityTimeOffset Throwable.scaleReleaseVelocity Throwable.restoreOriginalParent Throwable.velocityEstimator Throwable.attached Throwable.attachTime Throwable.attachPosition Throwable.attachRotation Throwable.attachEaseInTransform Throwable.onPickUp Throwable.onDetachFromHand Throwable.onHeldUpdate Throwable.hadInterpolation Throwable.rigidbody Throwable.interactable Throwable.Awake() Throwable.OnHandHoverBegin(Hand) Throwable.OnHandHoverEnd(Hand) Throwable.OnAttachedToHand(Hand) Throwable.OnDetachedFromHand(Hand) Throwable.GetReleaseVelocities(Hand, Vector3, Vector3) Throwable.LateDetach(Hand) Throwable.OnHandFocusAcquired(Hand) Throwable.OnHandFocusLost(Hand) UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ModalThrowable : Throwable Fields gripOffset Declaration [Tooltip(\"The local point which acts as a positional and rotational offset to use while held with a grip type grab\")] public Transform gripOffset Field Value Type Description UnityEngine.Transform pinchOffset Declaration [Tooltip(\"The local point which acts as a positional and rotational offset to use while held with a pinch type grab\")] public Transform pinchOffset Field Value Type Description UnityEngine.Transform Methods HandAttachedUpdate(Hand) Declaration protected override void HandAttachedUpdate(Hand hand) Parameters Type Name Description Hand hand Overrides Throwable.HandAttachedUpdate(Hand) HandHoverUpdate(Hand) Declaration protected override void HandHoverUpdate(Hand hand) Parameters Type Name Description Hand hand Overrides Throwable.HandHoverUpdate(Hand)"
  },
  "api/Valve.VR.InteractionSystem.CustomEvents.UnityEventSingleFloat.html": {
    "href": "api/Valve.VR.InteractionSystem.CustomEvents.UnityEventSingleFloat.html",
    "title": "Class CustomEvents.UnityEventSingleFloat | SteamVR Unity Plugin",
    "keywords": "Class CustomEvents.UnityEventSingleFloat Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < System.Single > CustomEvents.UnityEventSingleFloat Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<System.Single>.AddListener(UnityEngine.Events.UnityAction<System.Single>) UnityEngine.Events.UnityEvent<System.Single>.RemoveListener(UnityEngine.Events.UnityAction<System.Single>) UnityEngine.Events.UnityEvent<System.Single>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<System.Single>.Invoke(System.Single) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [Serializable] public class UnityEventSingleFloat : UnityEvent<float>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.HmdVector3d_t.html": {
    "href": "api/Valve.VR.HmdVector3d_t.html",
    "title": "Struct HmdVector3d_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdVector3d_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdVector3d_t Fields v0 Declaration public double v0 Field Value Type Description System.Double v1 Declaration public double v1 Field Value Type Description System.Double v2 Declaration public double v2 Field Value Type Description System.Double"
  },
  "api/Valve.VR.EVRButtonId.html": {
    "href": "api/Valve.VR.EVRButtonId.html",
    "title": "Enum EVRButtonId | SteamVR Unity Plugin",
    "keywords": "Enum EVRButtonId Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRButtonId Fields Name Description k_EButton_A k_EButton_ApplicationMenu k_EButton_Axis0 k_EButton_Axis1 k_EButton_Axis2 k_EButton_Axis3 k_EButton_Axis4 k_EButton_Dashboard_Back k_EButton_DPad_Down k_EButton_DPad_Left k_EButton_DPad_Right k_EButton_DPad_Up k_EButton_Grip k_EButton_Knuckles_A k_EButton_Knuckles_B k_EButton_Knuckles_JoyStick k_EButton_Max k_EButton_ProximitySensor k_EButton_SteamVR_Touchpad k_EButton_SteamVR_Trigger k_EButton_System"
  },
  "api/Valve.VR.SteamVR_Events.Action-2.html": {
    "href": "api/Valve.VR.SteamVR_Events.Action-2.html",
    "title": "Class SteamVR_Events.Action<T0, T1> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Action<T0, T1> Inheritance System.Object SteamVR_Events.Action SteamVR_Events.Action<T0, T1> Inherited Members SteamVR_Events.Action.enabled System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class Action<T0, T1> : SteamVR_Events.Action Type Parameters Name Description T0 T1 Constructors Action(SteamVR_Events.Event<T0, T1>, UnityAction<T0, T1>) Declaration public Action(SteamVR_Events.Event<T0, T1> _event, UnityAction<T0, T1> action) Parameters Type Name Description SteamVR_Events.Event <T0, T1> _event UnityEngine.Events.UnityAction <T0, T1> action Methods Enable(Boolean) Declaration public override void Enable(bool enabled) Parameters Type Name Description System.Boolean enabled Overrides SteamVR_Events.Action.Enable(Boolean)"
  },
  "api/Valve.VR.SteamVR_Events.Action-1.html": {
    "href": "api/Valve.VR.SteamVR_Events.Action-1.html",
    "title": "Class SteamVR_Events.Action<T> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Action<T> Inheritance System.Object SteamVR_Events.Action SteamVR_Events.Action<T> Inherited Members SteamVR_Events.Action.enabled System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class Action<T> : SteamVR_Events.Action Type Parameters Name Description T Constructors Action(SteamVR_Events.Event<T>, UnityAction<T>) Declaration public Action(SteamVR_Events.Event<T> _event, UnityAction<T> action) Parameters Type Name Description SteamVR_Events.Event <T> _event UnityEngine.Events.UnityAction <T> action Methods Enable(Boolean) Declaration public override void Enable(bool enabled) Parameters Type Name Description System.Boolean enabled Overrides SteamVR_Events.Action.Enable(Boolean)"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent.html",
    "title": "Class SteamVR_Behaviour_Pose_DeviceIndexChangedEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Pose , SteamVR_Input_Sources , System.Int32 > SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32>.Invoke(Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Int32) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Pose_DeviceIndexChangedEvent : UnityEvent<SteamVR_Behaviour_Pose, SteamVR_Input_Sources, int>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent.html",
    "title": "Class SteamVR_Behaviour_Pose_ConnectedChangedEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Pose_ConnectedChangedEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Pose , SteamVR_Input_Sources , System.Boolean > SteamVR_Behaviour_Pose_ConnectedChangedEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean>.Invoke(Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources, System.Boolean) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Pose_ConnectedChangedEvent : UnityEvent<SteamVR_Behaviour_Pose, SteamVR_Input_Sources, bool>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_PoseEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_PoseEvent.html",
    "title": "Class SteamVR_Behaviour_PoseEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_PoseEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Pose , SteamVR_Input_Sources > SteamVR_Behaviour_PoseEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources>.Invoke(Valve.VR.SteamVR_Behaviour_Pose, Valve.VR.SteamVR_Input_Sources) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_PoseEvent : UnityEvent<SteamVR_Behaviour_Pose, SteamVR_Input_Sources>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.html",
    "title": "Class SteamVR_Behaviour_Pose | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Pose This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Pose Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Pose : MonoBehaviour Fields broadcastDeviceChanges Declaration [Tooltip(\"Can be disabled to stop broadcasting bound device status changes\")] public bool broadcastDeviceChanges Field Value Type Description System.Boolean deviceIndex Declaration protected int deviceIndex Field Value Type Description System.Int32 historyBuffer Declaration protected SteamVR_HistoryBuffer historyBuffer Field Value Type Description SteamVR_HistoryBuffer inputSource Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources lastFrameUpdated Declaration protected int lastFrameUpdated Field Value Type Description System.Int32 onConnectedChanged This Unity event will fire whenever the device is connected or disconnected Declaration public SteamVR_Behaviour_Pose_ConnectedChangedEvent onConnectedChanged Field Value Type Description SteamVR_Behaviour_Pose_ConnectedChangedEvent onConnectedChangedEvent This C# event will fire whenever the device is connected or disconnected Declaration public SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler onConnectedChangedEvent Field Value Type Description SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler onDeviceIndexChanged This Unity event will fire whenever the device's deviceIndex changes Declaration public SteamVR_Behaviour_Pose_DeviceIndexChangedEvent onDeviceIndexChanged Field Value Type Description SteamVR_Behaviour_Pose_DeviceIndexChangedEvent onDeviceIndexChangedEvent This C# event will fire whenever the device's deviceIndex changes Declaration public SteamVR_Behaviour_Pose.DeviceIndexChangedHandler onDeviceIndexChangedEvent Field Value Type Description SteamVR_Behaviour_Pose.DeviceIndexChangedHandler onTrackingChanged This Unity event will fire whenever the device's tracking state changes Declaration public SteamVR_Behaviour_Pose_TrackingChangedEvent onTrackingChanged Field Value Type Description SteamVR_Behaviour_Pose_TrackingChangedEvent onTrackingChangedEvent This C# event will fire whenever the device's tracking state changes Declaration public SteamVR_Behaviour_Pose.TrackingChangeHandler onTrackingChangedEvent Field Value Type Description SteamVR_Behaviour_Pose.TrackingChangeHandler onTransformChanged This Unity event will fire whenever the position or rotation of this transform is changed. Declaration public SteamVR_Behaviour_PoseEvent onTransformChanged Field Value Type Description SteamVR_Behaviour_PoseEvent onTransformChangedEvent This C# event will fire whenever the position or rotation of this transform is changed. Declaration public SteamVR_Behaviour_Pose.ChangeHandler onTransformChangedEvent Field Value Type Description SteamVR_Behaviour_Pose.ChangeHandler onTransformUpdated This Unity event will fire whenever the position or rotation of this transform is updated. Declaration public SteamVR_Behaviour_PoseEvent onTransformUpdated Field Value Type Description SteamVR_Behaviour_PoseEvent onTransformUpdatedEvent This C# event will fire whenever the position or rotation of this transform is updated. Declaration public SteamVR_Behaviour_Pose.UpdateHandler onTransformUpdatedEvent Field Value Type Description SteamVR_Behaviour_Pose.UpdateHandler origin Declaration [Tooltip(\"If not set, relative to parent\")] public Transform origin Field Value Type Description UnityEngine.Transform poseAction Declaration public SteamVR_Action_Pose poseAction Field Value Type Description SteamVR_Action_Pose Properties isActive Returns whether or not the pose action is bound and able to be updated Declaration public bool isActive { get; } Property Value Type Description System.Boolean isValid Returns whether or not the current pose is in a valid state Declaration public bool isValid { get; } Property Value Type Description System.Boolean Methods CheckDeviceIndex() Declaration protected virtual void CheckDeviceIndex() GetAngularVelocity() Returns the current angular velocity of the pose (as of the last update) Declaration public Vector3 GetAngularVelocity() Returns Type Description UnityEngine.Vector3 GetDeviceIndex() Returns the device index for the device bound to the pose. Declaration public int GetDeviceIndex() Returns Type Description System.Int32 GetEstimatedPeakVelocities(out Vector3, out Vector3) Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity Declaration public void GetEstimatedPeakVelocities(out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String GetVelocitiesAtTimeOffset(Single, out Vector3, out Vector3) Returns the velocities of the pose at the time specified. Can predict in the future or return past values. Declaration public bool GetVelocitiesAtTimeOffset(float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity) Parameters Type Name Description System.Single secondsFromNow UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity Returns Type Description System.Boolean GetVelocity() Returns the current velocity of the pose (as of the last update) Declaration public Vector3 GetVelocity() Returns Type Description UnityEngine.Vector3 OnDeviceConnectedChanged(SteamVR_Action_Pose, SteamVR_Input_Sources, Boolean) Declaration protected virtual void OnDeviceConnectedChanged(SteamVR_Action_Pose changedAction, SteamVR_Input_Sources changedSource, bool connected) Parameters Type Name Description SteamVR_Action_Pose changedAction SteamVR_Input_Sources changedSource System.Boolean connected OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnTrackingChanged(SteamVR_Action_Pose, SteamVR_Input_Sources, ETrackingResult) Declaration protected virtual void OnTrackingChanged(SteamVR_Action_Pose changedAction, SteamVR_Input_Sources changedSource, ETrackingResult trackingChanged) Parameters Type Name Description SteamVR_Action_Pose changedAction SteamVR_Input_Sources changedSource ETrackingResult trackingChanged Start() Declaration protected virtual void Start() UpdateHistoryBuffer() Declaration protected void UpdateHistoryBuffer() UpdateTransform() Declaration protected virtual void UpdateTransform()"
  },
  "api/Valve.VR.SteamVR_ActivateActionSetOnLoad.html": {
    "href": "api/Valve.VR.SteamVR_ActivateActionSetOnLoad.html",
    "title": "Class SteamVR_ActivateActionSetOnLoad | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_ActivateActionSetOnLoad Automatically activates an action set on Start() and deactivates the set on OnDestroy(). Optionally deactivating all other sets as well. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_ActivateActionSetOnLoad Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_ActivateActionSetOnLoad : MonoBehaviour Fields actionSet Declaration public SteamVR_ActionSet actionSet Field Value Type Description SteamVR_ActionSet activateOnStart Declaration public bool activateOnStart Field Value Type Description System.Boolean deactivateOnDestroy Declaration public bool deactivateOnDestroy Field Value Type Description System.Boolean disableAllOtherActionSets Declaration public bool disableAllOtherActionSets Field Value Type Description System.Boolean forSources Declaration public SteamVR_Input_Sources forSources Field Value Type Description SteamVR_Input_Sources"
  },
  "api/Valve.VR.SteamVR_Action_Vibration_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vibration_Source_Map.html",
    "title": "Class SteamVR_Action_Vibration_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vibration_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Vibration_Source > SteamVR_Action_Vibration_Source_Map Inherited Members SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vibration_Source_Map : SteamVR_Action_Source_Map<SteamVR_Action_Vibration_Source> Methods IsUpdating(SteamVR_Input_Sources) Declaration public bool IsUpdating(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean"
  },
  "api/Valve.VR.SteamVR_Action_Vibration_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vibration_Source.html",
    "title": "Class SteamVR_Action_Vibration_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vibration_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_Out_Source SteamVR_Action_Vibration_Source Implements ISteamVR_Action_Out_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Vibration_Source : SteamVR_Action_Out_Source, ISteamVR_Action_Out_Source, ISteamVR_Action_Source Fields vibrationAction Declaration protected SteamVR_Action_Vibration vibrationAction Field Value Type Description SteamVR_Action_Vibration Properties active Returns true if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding Returns true if the action was bound during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding timeLastExecuted The last time the execute method was called on this action Declaration public float timeLastExecuted { get; protected set; } Property Value Type Description System.Single Methods Execute(Single, Single, Single, Single) Trigger the haptics at a certain time for a certain length Declaration public void Execute(float secondsFromNow, float durationSeconds, float frequency, float amplitude) Parameters Type Name Description System.Single secondsFromNow How long from the current time to execute the action (in seconds - can be 0) System.Single durationSeconds How long the haptic action should last (in seconds) System.Single frequency How often the haptic motor should bounce (0 - 320 in hz. The lower end being more useful) System.Single amplitude How intense the haptic action should be (0 - 1) Initialize() [Should not be called by user code] Initializes the handle for the inputSource, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Vibration.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vibration.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Vibration.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vibration.ActiveChangeHandler onExecute Event fires whenever this action is executed Declaration public event SteamVR_Action_Vibration.ExecuteHandler onExecute Event Type Type Description SteamVR_Action_Vibration.ExecuteHandler Implements ISteamVR_Action_Out_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Vibration.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vibration.html",
    "title": "Class SteamVR_Action_Vibration | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Vibration Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Vibration_Source_Map , SteamVR_Action_Vibration_Source > SteamVR_Action_Out < SteamVR_Action_Vibration_Source_Map , SteamVR_Action_Vibration_Source > SteamVR_Action_Vibration Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_Out ISteamVR_Action ISteamVR_Action_Out_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.sourceMap SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.fullPath SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.handle SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.actionSet SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.direction SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.active SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.lastActive SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.activeBinding SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.initialized SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Vibration : SteamVR_Action_Out<SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_Out, ISteamVR_Action, ISteamVR_Action_Out_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Vibration() Declaration public SteamVR_Action_Vibration() Methods AddOnActiveBindingChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound Declaration public void AddOnActiveBindingChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnActiveChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void AddOnActiveChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnExecuteListener(SteamVR_Action_Vibration.ExecuteHandler, SteamVR_Input_Sources) Executes a function when the execute method of this action (with the specified inputSource) is called. This happens when the action is bound or unbound Declaration public void AddOnExecuteListener(SteamVR_Action_Vibration.ExecuteHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ExecuteHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Execute(Single, Single, Single, Single, SteamVR_Input_Sources) Trigger the haptics at a certain time for a certain length Declaration public void Execute(float secondsFromNow, float durationSeconds, float frequency, float amplitude, SteamVR_Input_Sources inputSource) Parameters Type Name Description System.Single secondsFromNow How long from the current time to execute the action (in seconds - can be 0) System.Single durationSeconds How long the haptic action should last (in seconds) System.Single frequency How often the haptic motor should bounce (0 - 320 in hz. The lower end being more useful) System.Single amplitude How intense the haptic action should be (0 - 1) SteamVR_Input_Sources inputSource The device you would like to execute the haptic action. Any if the action is not device specific. GetTimeLastChanged(SteamVR_Input_Sources) Returns the last time this action was executed Declaration public override float GetTimeLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single Overrides SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) IsUpdating(SteamVR_Input_Sources) Declaration public override bool IsUpdating(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean Overrides SteamVR_Action.IsUpdating(SteamVR_Input_Sources) RemoveOnActiveBindingChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveBindingChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnActiveChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Vibration.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnExecuteListener(SteamVR_Action_Vibration.ExecuteHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnExecuteListener(SteamVR_Action_Vibration.ExecuteHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Vibration.ExecuteHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Events onActiveBindingChange [SteamVR_Input_Sources.Any] This event fires whenever a change happens in the action Declaration public event SteamVR_Action_Vibration.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Vibration.ActiveChangeHandler onActiveChange [SteamVR_Input_Sources.Any] This event fires whenever a change happens in the action Declaration public event SteamVR_Action_Vibration.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Vibration.ActiveChangeHandler onExecute [SteamVR_Input_Sources.Any] This event fires whenever this action is executed Declaration public event SteamVR_Action_Vibration.ExecuteHandler onExecute Event Type Type Description SteamVR_Action_Vibration.ExecuteHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_Out ISteamVR_Action ISteamVR_Action_Out_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Single_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single_Source_Map.html",
    "title": "Class SteamVR_Action_Single_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Single_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Single_Source > SteamVR_Action_In_Source_Map < SteamVR_Action_Single_Source > SteamVR_Action_Single_Source_Map Inherited Members SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>.updatingSources SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>.UpdateValues() SteamVR_Action_Source_Map<SteamVR_Action_Single_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Single_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Single_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Single_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SteamVR_Action_Single_Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Single_Source_Map : SteamVR_Action_In_Source_Map<SteamVR_Action_Single_Source>"
  },
  "api/Valve.VR.SteamVR_Action_Single_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single_Source.html",
    "title": "Class SteamVR_Action_Single_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Single_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Single_Source Implements ISteamVR_Action_Single ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Single_Source : SteamVR_Action_In_Source, ISteamVR_Action_Single, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields actionData Declaration protected InputAnalogActionData_t actionData Field Value Type Description InputAnalogActionData_t actionData_size Declaration protected static uint actionData_size Field Value Type Description System.UInt32 changeTolerance The amount the axis needs to change before a change is detected Declaration public float changeTolerance Field Value Type Description System.Single lastActionData Declaration protected InputAnalogActionData_t lastActionData Field Value Type Description InputAnalogActionData_t singleAction Declaration protected SteamVR_Action_Single singleAction Field Value Type Description SteamVR_Action_Single Properties active Returns true if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding activeOrigin The handle to the origin of the component that was used to update the value for this action Declaration public override ulong activeOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.activeOrigin axis The current float value of the action. Note: Will only return non-zero if the action is also active. Declaration public float axis { get; } Property Value Type Description System.Single changed If the float value of this action has changed more than the changeTolerance since the last update Declaration public override bool changed { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.changed delta The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public float delta { get; } Property Value Type Description System.Single lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding Returns true if the action was bound during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding lastActiveOrigin The handle to the origin of the component that was used to update the value for this action (for the previous update) Declaration public override ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.lastActiveOrigin lastAxis The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public float lastAxis { get; } Property Value Type Description System.Single lastChanged If the float value of this action has changed more than the changeTolerance between the previous update and the update before that Declaration public override bool lastChanged { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.lastChanged lastDelta The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public float lastDelta { get; } Property Value Type Description System.Single Methods Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_In_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_In_Source.UpdateValue() Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Single.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Single.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Single.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Single.ActiveChangeHandler onAxis Event fires when the value of the action is non-zero Declaration public event SteamVR_Action_Single.AxisHandler onAxis Event Type Type Description SteamVR_Action_Single.AxisHandler onChange This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Single.ChangeHandler onChange Event Type Type Description SteamVR_Action_Single.ChangeHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Single.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Single.UpdateHandler Implements ISteamVR_Action_Single ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.SteamVR_Action_Single.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single.html",
    "title": "Class SteamVR_Action_Single | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Single Inheritance System.Object SteamVR_Action SteamVR_Action < SteamVR_Action_Single_Source_Map , SteamVR_Action_Single_Source > SteamVR_Action_In < SteamVR_Action_Single_Source_Map , SteamVR_Action_Single_Source > SteamVR_Action_Single Implements System.IEquatable < SteamVR_Action > ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Single ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.changed SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.lastChanged SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.changedTime SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.updateTime SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.activeOrigin SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.lastActiveOrigin SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.activeDevice SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.trackedDeviceIndex SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.renderModelComponentName SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.localizedOriginName SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.UpdateValues() SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetRenderModelComponentName(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetActiveDevice(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetDeviceIndex(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetLocalizedOriginPart(SteamVR_Input_Sources, EVRInputStringBits[]) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetLocalizedOrigin(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.sourceMap SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.Item[SteamVR_Input_Sources] SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.fullPath SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.handle SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.actionSet SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.direction SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.active SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.lastActive SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.activeBinding SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.lastActiveBinding SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.initialized SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.PreInitialize(String) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.CreateUninitialized(String, Boolean) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.TryNeedsInitData() SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.Initialize(Boolean, Boolean) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetSourceMap() SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.InitAfterDeserialize() SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetLastActive(SteamVR_Input_Sources) SteamVR_Action<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.actionPath SteamVR_Action.needsReinit SteamVR_Action.startUpdatingSourceOnAccess SteamVR_Action.Create<CreateType>(String) SteamVR_Action.CreateUninitialized<CreateType>(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.CreateUninitialized<CreateType>(String, Boolean) SteamVR_Action.GetCopy<CreateType>() SteamVR_Action.TryNeedsInitData() SteamVR_Action.InitializeCopy(String, SteamVR_Action_Source_Map) SteamVR_Action.fullPath SteamVR_Action.handle SteamVR_Action.actionSet SteamVR_Action.direction SteamVR_Action.setActive SteamVR_Action.active SteamVR_Action.activeBinding SteamVR_Action.lastActive SteamVR_Action.lastActiveBinding SteamVR_Action.PreInitialize(String) SteamVR_Action.CreateUninitialized(String, Boolean) SteamVR_Action.CreateUninitialized(String, SteamVR_ActionDirections, String, Boolean) SteamVR_Action.Initialize(Boolean, Boolean) SteamVR_Action.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_Action.GetSourceMap() SteamVR_Action.GetActive(SteamVR_Input_Sources) SteamVR_Action.GetSetActive(SteamVR_Input_Sources) SteamVR_Action.GetActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetLastActive(SteamVR_Input_Sources) SteamVR_Action.GetLastActiveBinding(SteamVR_Input_Sources) SteamVR_Action.GetPath() SteamVR_Action.IsUpdating(SteamVR_Input_Sources) SteamVR_Action.GetHashCode() SteamVR_Action.Equals(SteamVR_Action) SteamVR_Action.Equals(Object) SteamVR_Action.FindExistingActionForPartialPath(String) SteamVR_Action.GetShortName() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Action_Single : SteamVR_Action_In<SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source>, IEquatable<SteamVR_Action>, ISteamVR_Action_In, ISteamVR_Action, ISteamVR_Action_Single, ISteamVR_Action_In_Source, ISteamVR_Action_Source, ISerializationCallbackReceiver Constructors SteamVR_Action_Single() Declaration public SteamVR_Action_Single() Properties axis [Shortcut to: SteamVR_Input_Sources.Any] The current float value of the action. Note: Will only return non-zero if the action is also active. Declaration public float axis { get; } Property Value Type Description System.Single delta [Shortcut to: SteamVR_Input_Sources.Any] The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration public float delta { get; } Property Value Type Description System.Single lastAxis [Shortcut to: SteamVR_Input_Sources.Any] The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration public float lastAxis { get; } Property Value Type Description System.Single lastDelta [Shortcut to: SteamVR_Input_Sources.Any] The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration public float lastDelta { get; } Property Value Type Description System.Single Methods AddOnActiveBindingChangeListener(SteamVR_Action_Single.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound Declaration public void AddOnActiveBindingChangeListener(SteamVR_Action_Single.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnActiveChangeListener(SteamVR_Action_Single.ActiveChangeHandler, SteamVR_Input_Sources) Executes a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void AddOnActiveChangeListener(SteamVR_Action_Single.ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ActiveChangeHandler functionToCall A local function that receives the boolean action who's active state changes and the corresponding input source SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnAxisListener(SteamVR_Action_Single.AxisHandler, SteamVR_Input_Sources) Executes a function when the float value of the action is non-zero. Declaration public void AddOnAxisListener(SteamVR_Action_Single.AxisHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.AxisHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnChangeListener(SteamVR_Action_Single.ChangeHandler, SteamVR_Input_Sources) Executes a function when the axis changes by more than the specified changeTolerance Declaration public void AddOnChangeListener(SteamVR_Action_Single.ChangeHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ChangeHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. AddOnUpdateListener(SteamVR_Action_Single.UpdateHandler, SteamVR_Input_Sources) Executes a function when the state of this action (with the specified inputSource) is updated. Declaration public void AddOnUpdateListener(SteamVR_Action_Single.UpdateHandler functionToCall, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.UpdateHandler functionToCall A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. GetAxis(SteamVR_Input_Sources) The current float value of the action Declaration public float GetAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single GetAxisDelta(SteamVR_Input_Sources) The float value difference between this update and the previous update. Declaration public float GetAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single GetLastAxis(SteamVR_Input_Sources) The float value of the action from the previous update. Declaration public float GetLastAxis(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single GetLastAxisDelta(SteamVR_Input_Sources) The float value difference between the previous update and update before that. Declaration public float GetLastAxisDelta(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Returns Type Description System.Single RemoveOnActiveBindingChangeListener(SteamVR_Action_Single.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnActiveBindingChangeListener(SteamVR_Action_Single.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnActiveChangeListener(SteamVR_Action_Single.ActiveChangeHandler, SteamVR_Input_Sources) Stops executing a function when the functional active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. Declaration public void RemoveOnActiveChangeListener(SteamVR_Action_Single.ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ActiveChangeHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnAxisListener(SteamVR_Action_Single.AxisHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnAxisListener(SteamVR_Action_Single.AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.AxisHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnChangeListener(SteamVR_Action_Single.ChangeHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnChangeListener(SteamVR_Action_Single.ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.ChangeHandler functionToStopCalling The local function that you've setup to receive on change events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. RemoveOnUpdateListener(SteamVR_Action_Single.UpdateHandler, SteamVR_Input_Sources) Stops executing the function setup by the corresponding AddListener Declaration public void RemoveOnUpdateListener(SteamVR_Action_Single.UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Action_Single.UpdateHandler functionToStopCalling The local function that you've setup to receive update events SteamVR_Input_Sources inputSource The device you would like to get data from. Any if the action is not device specific. Events onActiveBindingChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires when the active state of the binding changes Declaration public event SteamVR_Action_Single.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Single.ActiveChangeHandler onActiveChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Single.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Single.ActiveChangeHandler onAxis [Shortcut to: SteamVR_Input_Sources.Any] This event will fire whenever the float value of the action is non-zero Declaration public event SteamVR_Action_Single.AxisHandler onAxis Event Type Type Description SteamVR_Action_Single.AxisHandler onChange [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the axis changes by more than the specified changeTolerance Declaration public event SteamVR_Action_Single.ChangeHandler onChange Event Type Type Description SteamVR_Action_Single.ChangeHandler onUpdate [Shortcut to: SteamVR_Input_Sources.Any] This event fires whenever the action is updated Declaration public event SteamVR_Action_Single.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Single.UpdateHandler Explicit Interface Implementations ISerializationCallbackReceiver.OnAfterDeserialize() Declaration void ISerializationCallbackReceiver.OnAfterDeserialize() ISerializationCallbackReceiver.OnBeforeSerialize() Declaration void ISerializationCallbackReceiver.OnBeforeSerialize() Implements System.IEquatable<T> ISteamVR_Action_In ISteamVR_Action ISteamVR_Action_Single ISteamVR_Action_In_Source ISteamVR_Action_Source UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Action_Single.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Single.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Single.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Single.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Action_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.StateDownHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.StateDownHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.StateDownHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.StateDownHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void StateDownHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource"
  },
  "api/Valve.VR.SteamVR_Action_Boolean.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Boolean.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Boolean.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState); Parameters Type Name Description SteamVR_Action_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean newState"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.TrackingChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.TrackingChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.TrackingChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.TrackingChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void TrackingChangeHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, ETrackingResult trackingState); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource ETrackingResult trackingState"
  },
  "api/Valve.VR.SteamVR_Behaviour_Pose.DeviceIndexChangedHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Pose.DeviceIndexChangedHandler.html",
    "title": "Delegate SteamVR_Behaviour_Pose.DeviceIndexChangedHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Pose.DeviceIndexChangedHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void DeviceIndexChangedHandler(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, int newDeviceIndex); Parameters Type Name Description SteamVR_Behaviour_Pose fromAction SteamVR_Input_Sources fromSource System.Int32 newDeviceIndex"
  },
  "api/Valve.VR.SteamVR_Action_Vector2.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2.UpdateHandler.html",
    "title": "Delegate SteamVR_Action_Vector2.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector2.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta); Parameters Type Name Description SteamVR_Action_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 axis UnityEngine.Vector2 delta"
  },
  "api/Valve.VR.SteamVR_Action_Vector2.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Action_Vector2.ChangeHandler.html",
    "title": "Delegate SteamVR_Action_Vector2.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Action_Vector2.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta); Parameters Type Name Description SteamVR_Action_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 axis UnityEngine.Vector2 delta"
  },
  "api/Valve.VR.EVRDistortionFunctionType.html": {
    "href": "api/Valve.VR.EVRDistortionFunctionType.html",
    "title": "Enum EVRDistortionFunctionType | SteamVR Unity Plugin",
    "keywords": "Enum EVRDistortionFunctionType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRDistortionFunctionType Fields Name Description Extended_FTheta FTheta MAX_DISTORTION_FUNCTION_TYPES None"
  },
  "api/Valve.VR.EVRControllerEventOutputType.html": {
    "href": "api/Valve.VR.EVRControllerEventOutputType.html",
    "title": "Enum EVRControllerEventOutputType | SteamVR Unity Plugin",
    "keywords": "Enum EVRControllerEventOutputType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRControllerEventOutputType Fields Name Description ControllerEventOutput_OSEvents ControllerEventOutput_VREvents"
  },
  "api/Valve.VR.EVRApplicationType.html": {
    "href": "api/Valve.VR.EVRApplicationType.html",
    "title": "Enum EVRApplicationType | SteamVR Unity Plugin",
    "keywords": "Enum EVRApplicationType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRApplicationType Fields Name Description VRApplication_Background VRApplication_Bootstrapper VRApplication_Max VRApplication_Other VRApplication_Overlay VRApplication_Scene VRApplication_SteamWatchdog VRApplication_Utility VRApplication_VRMonitor VRApplication_WebHelper"
  },
  "api/Valve.VR.ETextureType.html": {
    "href": "api/Valve.VR.ETextureType.html",
    "title": "Enum ETextureType | SteamVR Unity Plugin",
    "keywords": "Enum ETextureType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETextureType Fields Name Description DirectX DirectX12 DXGISharedHandle Invalid IOSurface Metal OpenGL Vulkan"
  },
  "api/Valve.VR.EHDCPError.html": {
    "href": "api/Valve.VR.EHDCPError.html",
    "title": "Enum EHDCPError | SteamVR Unity Plugin",
    "keywords": "Enum EHDCPError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EHDCPError Fields Name Description DeviceRevoked LinkLost None Tampered Unknown"
  },
  "api/Valve.VR.EChaperoneImportFlags.html": {
    "href": "api/Valve.VR.EChaperoneImportFlags.html",
    "title": "Enum EChaperoneImportFlags | SteamVR Unity Plugin",
    "keywords": "Enum EChaperoneImportFlags Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EChaperoneImportFlags Fields Name Description EChaperoneImport_BoundsOnly"
  },
  "api/Valve.VR.CVRSpatialAnchors.html": {
    "href": "api/Valve.VR.CVRSpatialAnchors.html",
    "title": "Class CVRSpatialAnchors | SteamVR Unity Plugin",
    "keywords": "Class CVRSpatialAnchors Inheritance System.Object CVRSpatialAnchors Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRSpatialAnchors Methods CreateSpatialAnchorFromDescriptor(String, ref UInt32) Declaration public EVRSpatialAnchorError CreateSpatialAnchorFromDescriptor(string pchDescriptor, ref uint pHandleOut) Parameters Type Name Description System.String pchDescriptor System.UInt32 pHandleOut Returns Type Description EVRSpatialAnchorError CreateSpatialAnchorFromPose(UInt32, ETrackingUniverseOrigin, ref SpatialAnchorPose_t, ref UInt32) Declaration public EVRSpatialAnchorError CreateSpatialAnchorFromPose(uint unDeviceIndex, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPose, ref uint pHandleOut) Parameters Type Name Description System.UInt32 unDeviceIndex ETrackingUniverseOrigin eOrigin SpatialAnchorPose_t pPose System.UInt32 pHandleOut Returns Type Description EVRSpatialAnchorError GetSpatialAnchorDescriptor(UInt32, StringBuilder, ref UInt32) Declaration public EVRSpatialAnchorError GetSpatialAnchorDescriptor(uint unHandle, StringBuilder pchDescriptorOut, ref uint punDescriptorBufferLenInOut) Parameters Type Name Description System.UInt32 unHandle System.Text.StringBuilder pchDescriptorOut System.UInt32 punDescriptorBufferLenInOut Returns Type Description EVRSpatialAnchorError GetSpatialAnchorPose(UInt32, ETrackingUniverseOrigin, ref SpatialAnchorPose_t) Declaration public EVRSpatialAnchorError GetSpatialAnchorPose(uint unHandle, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPoseOut) Parameters Type Name Description System.UInt32 unHandle ETrackingUniverseOrigin eOrigin SpatialAnchorPose_t pPoseOut Returns Type Description EVRSpatialAnchorError"
  },
  "api/Valve.VR.CVRIOBuffer.html": {
    "href": "api/Valve.VR.CVRIOBuffer.html",
    "title": "Class CVRIOBuffer | SteamVR Unity Plugin",
    "keywords": "Class CVRIOBuffer Inheritance System.Object CVRIOBuffer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRIOBuffer Methods Close(UInt64) Declaration public EIOBufferError Close(ulong ulBuffer) Parameters Type Name Description System.UInt64 ulBuffer Returns Type Description EIOBufferError HasReaders(UInt64) Declaration public bool HasReaders(ulong ulBuffer) Parameters Type Name Description System.UInt64 ulBuffer Returns Type Description System.Boolean Open(String, EIOBufferMode, UInt32, UInt32, ref UInt64) Declaration public EIOBufferError Open(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer) Parameters Type Name Description System.String pchPath EIOBufferMode mode System.UInt32 unElementSize System.UInt32 unElements System.UInt64 pulBuffer Returns Type Description EIOBufferError PropertyContainer(UInt64) Declaration public ulong PropertyContainer(ulong ulBuffer) Parameters Type Name Description System.UInt64 ulBuffer Returns Type Description System.UInt64 Read(UInt64, IntPtr, UInt32, ref UInt32) Declaration public EIOBufferError Read(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead) Parameters Type Name Description System.UInt64 ulBuffer System.IntPtr pDst System.UInt32 unBytes System.UInt32 punRead Returns Type Description EIOBufferError Write(UInt64, IntPtr, UInt32) Declaration public EIOBufferError Write(ulong ulBuffer, IntPtr pSrc, uint unBytes) Parameters Type Name Description System.UInt64 ulBuffer System.IntPtr pSrc System.UInt32 unBytes Returns Type Description EIOBufferError"
  },
  "api/Valve.VR.CVRCompositor.html": {
    "href": "api/Valve.VR.CVRCompositor.html",
    "title": "Class CVRCompositor | SteamVR Unity Plugin",
    "keywords": "Class CVRCompositor Inheritance System.Object CVRCompositor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRCompositor Methods CanRenderScene() Declaration public bool CanRenderScene() Returns Type Description System.Boolean ClearLastSubmittedFrame() Declaration public void ClearLastSubmittedFrame() ClearSkyboxOverride() Declaration public void ClearSkyboxOverride() CompositorBringToFront() Declaration public void CompositorBringToFront() CompositorDumpImages() Declaration public void CompositorDumpImages() CompositorGoToBack() Declaration public void CompositorGoToBack() CompositorQuit() Declaration public void CompositorQuit() FadeGrid(Single, Boolean) Declaration public void FadeGrid(float fSeconds, bool bFadeIn) Parameters Type Name Description System.Single fSeconds System.Boolean bFadeIn FadeToColor(Single, Single, Single, Single, Single, Boolean) Declaration public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground) Parameters Type Name Description System.Single fSeconds System.Single fRed System.Single fGreen System.Single fBlue System.Single fAlpha System.Boolean bBackground ForceInterleavedReprojectionOn(Boolean) Declaration public void ForceInterleavedReprojectionOn(bool bOverride) Parameters Type Name Description System.Boolean bOverride ForceReconnectProcess() Declaration public void ForceReconnectProcess() GetCumulativeStats(ref Compositor_CumulativeStats, UInt32) Declaration public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes) Parameters Type Name Description Compositor_CumulativeStats pStats System.UInt32 nStatsSizeInBytes GetCurrentFadeColor(Boolean) Declaration public HmdColor_t GetCurrentFadeColor(bool bBackground) Parameters Type Name Description System.Boolean bBackground Returns Type Description HmdColor_t GetCurrentGridAlpha() Declaration public float GetCurrentGridAlpha() Returns Type Description System.Single GetCurrentSceneFocusProcess() Declaration public uint GetCurrentSceneFocusProcess() Returns Type Description System.UInt32 GetFrameTimeRemaining() Declaration public float GetFrameTimeRemaining() Returns Type Description System.Single GetFrameTiming(ref Compositor_FrameTiming, UInt32) Declaration public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo) Parameters Type Name Description Compositor_FrameTiming pTiming System.UInt32 unFramesAgo Returns Type Description System.Boolean GetFrameTimings(ref Compositor_FrameTiming, UInt32) Declaration public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames) Parameters Type Name Description Compositor_FrameTiming pTiming System.UInt32 nFrames Returns Type Description System.UInt32 GetLastFrameRenderer() Declaration public uint GetLastFrameRenderer() Returns Type Description System.UInt32 GetLastPoseForTrackedDeviceIndex(UInt32, ref TrackedDevicePose_t, ref TrackedDevicePose_t) Declaration public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose) Parameters Type Name Description System.UInt32 unDeviceIndex TrackedDevicePose_t pOutputPose TrackedDevicePose_t pOutputGamePose Returns Type Description EVRCompositorError GetLastPoses(TrackedDevicePose_t[], TrackedDevicePose_t[]) Declaration public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray) Parameters Type Name Description TrackedDevicePose_t [] pRenderPoseArray TrackedDevicePose_t [] pGamePoseArray Returns Type Description EVRCompositorError GetMirrorTextureD3D11(EVREye, IntPtr, ref IntPtr) Declaration public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView) Parameters Type Name Description EVREye eEye System.IntPtr pD3D11DeviceOrResource System.IntPtr ppD3D11ShaderResourceView Returns Type Description EVRCompositorError GetMirrorTextureGL(EVREye, ref UInt32, IntPtr) Declaration public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle) Parameters Type Name Description EVREye eEye System.UInt32 pglTextureId System.IntPtr pglSharedTextureHandle Returns Type Description EVRCompositorError GetTrackingSpace() Declaration public ETrackingUniverseOrigin GetTrackingSpace() Returns Type Description ETrackingUniverseOrigin GetVulkanDeviceExtensionsRequired(IntPtr, StringBuilder, UInt32) Declaration public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize) Parameters Type Name Description System.IntPtr pPhysicalDevice System.Text.StringBuilder pchValue System.UInt32 unBufferSize Returns Type Description System.UInt32 GetVulkanInstanceExtensionsRequired(StringBuilder, UInt32) Declaration public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize) Parameters Type Name Description System.Text.StringBuilder pchValue System.UInt32 unBufferSize Returns Type Description System.UInt32 HideMirrorWindow() Declaration public void HideMirrorWindow() IsFullscreen() Declaration public bool IsFullscreen() Returns Type Description System.Boolean IsMirrorWindowVisible() Declaration public bool IsMirrorWindowVisible() Returns Type Description System.Boolean IsMotionSmoothingEnabled() Declaration public bool IsMotionSmoothingEnabled() Returns Type Description System.Boolean LockGLSharedTextureForAccess(IntPtr) Declaration public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle) Parameters Type Name Description System.IntPtr glSharedTextureHandle PostPresentHandoff() Declaration public void PostPresentHandoff() ReleaseMirrorTextureD3D11(IntPtr) Declaration public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView) Parameters Type Name Description System.IntPtr pD3D11ShaderResourceView ReleaseSharedGLTexture(UInt32, IntPtr) Declaration public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle) Parameters Type Name Description System.UInt32 glTextureId System.IntPtr glSharedTextureHandle Returns Type Description System.Boolean SetExplicitTimingMode(EVRCompositorTimingMode) Declaration public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode) Parameters Type Name Description EVRCompositorTimingMode eTimingMode SetSkyboxOverride(Texture_t[]) Declaration public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures) Parameters Type Name Description Texture_t [] pTextures Returns Type Description EVRCompositorError SetTrackingSpace(ETrackingUniverseOrigin) Declaration public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin) Parameters Type Name Description ETrackingUniverseOrigin eOrigin ShouldAppRenderWithLowResources() Declaration public bool ShouldAppRenderWithLowResources() Returns Type Description System.Boolean ShowMirrorWindow() Declaration public void ShowMirrorWindow() Submit(EVREye, ref Texture_t, ref VRTextureBounds_t, EVRSubmitFlags) Declaration public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags) Parameters Type Name Description EVREye eEye Texture_t pTexture VRTextureBounds_t pBounds EVRSubmitFlags nSubmitFlags Returns Type Description EVRCompositorError SubmitExplicitTimingData() Declaration public EVRCompositorError SubmitExplicitTimingData() Returns Type Description EVRCompositorError SuspendRendering(Boolean) Declaration public void SuspendRendering(bool bSuspend) Parameters Type Name Description System.Boolean bSuspend UnlockGLSharedTextureForAccess(IntPtr) Declaration public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle) Parameters Type Name Description System.IntPtr glSharedTextureHandle WaitGetPoses(TrackedDevicePose_t[], TrackedDevicePose_t[]) Declaration public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray) Parameters Type Name Description TrackedDevicePose_t [] pRenderPoseArray TrackedDevicePose_t [] pGamePoseArray Returns Type Description EVRCompositorError"
  },
  "api/Valve.VR.SteamVR_Frustum.html": {
    "href": "api/Valve.VR.SteamVR_Frustum.html",
    "title": "Class SteamVR_Frustum | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Frustum Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Frustum Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] [RequireComponent(typeof(MeshRenderer), typeof(MeshFilter))] public class SteamVR_Frustum : MonoBehaviour Fields farZ Declaration public float farZ Field Value Type Description System.Single fovBottom Declaration public float fovBottom Field Value Type Description System.Single fovLeft Declaration public float fovLeft Field Value Type Description System.Single fovRight Declaration public float fovRight Field Value Type Description System.Single fovTop Declaration public float fovTop Field Value Type Description System.Single index Declaration public SteamVR_TrackedObject.EIndex index Field Value Type Description SteamVR_TrackedObject.EIndex nearZ Declaration public float nearZ Field Value Type Description System.Single Methods UpdateModel() Declaration public void UpdateModel()"
  },
  "api/Valve.VR.SteamVR_Fade.html": {
    "href": "api/Valve.VR.SteamVR_Fade.html",
    "title": "Class SteamVR_Fade | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Fade Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Fade Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Fade : MonoBehaviour Methods OnStartFade(Color, Single, Boolean) Declaration public void OnStartFade(Color newColor, float duration, bool fadeOverlay) Parameters Type Name Description UnityEngine.Color newColor System.Single duration System.Boolean fadeOverlay Start(Color, Single, Boolean) Declaration public static void Start(Color newColor, float duration, bool fadeOverlay = false) Parameters Type Name Description UnityEngine.Color newColor System.Single duration System.Boolean fadeOverlay View(Color, Single) Declaration public static void View(Color newColor, float duration) Parameters Type Name Description UnityEngine.Color newColor System.Single duration"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector2.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector2.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector2.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector2.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 newAxis, Vector2 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 newAxis UnityEngine.Vector2 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector2.AxisHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector2.AxisHandler.html",
    "title": "Delegate SteamVR_Behaviour_Vector2.AxisHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Vector2.AxisHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void AxisHandler(SteamVR_Behaviour_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 newAxis, Vector2 newDelta); Parameters Type Name Description SteamVR_Behaviour_Vector2 fromAction SteamVR_Input_Sources fromSource UnityEngine.Vector2 newAxis UnityEngine.Vector2 newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent.html",
    "title": "Class SteamVR_Behaviour_Skeleton_TrackingChangedEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Skeleton_TrackingChangedEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Skeleton , SteamVR_Input_Sources , ETrackingResult > SteamVR_Behaviour_Skeleton_TrackingChangedEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult>.Invoke(Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, Valve.VR.ETrackingResult) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Skeleton_TrackingChangedEvent : UnityEvent<SteamVR_Behaviour_Skeleton, SteamVR_Input_Sources, ETrackingResult>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent.html",
    "title": "Class SteamVR_Behaviour_Skeleton_ConnectedChangedEvent | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Skeleton_ConnectedChangedEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Skeleton , SteamVR_Input_Sources , System.Boolean > SteamVR_Behaviour_Skeleton_ConnectedChangedEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean>.Invoke(Valve.VR.SteamVR_Behaviour_Skeleton, Valve.VR.SteamVR_Input_Sources, System.Boolean) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Skeleton_ConnectedChangedEvent : UnityEvent<SteamVR_Behaviour_Skeleton, SteamVR_Input_Sources, bool>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.html",
    "title": "Class SteamVR_Behaviour_Boolean | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Boolean This component simplifies using boolean actions. Provides editor accessible events: OnPress, OnPressDown, OnPressUp, OnChange, and OnUpdate. Provides script accessible events: OnPressEvent, OnPressDownEvent, OnPressUpEvent, OnChangeEvent, and OnUpdateEvent. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Behaviour_Boolean Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Behaviour_Boolean : MonoBehaviour Fields booleanAction Declaration [Tooltip(\"The SteamVR boolean action that this component should use\")] public SteamVR_Action_Boolean booleanAction Field Value Type Description SteamVR_Action_Boolean inputSource Declaration [Tooltip(\"The device this action should apply to. Any if the action is not device specific.\")] public SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources onChange This UnityEvent fires whenever a change happens in the action Declaration public SteamVR_Behaviour_BooleanEvent onChange Field Value Type Description SteamVR_Behaviour_BooleanEvent onPress This UnityEvent will fire whenever the boolean action is true and gets updated Declaration public SteamVR_Behaviour_BooleanEvent onPress Field Value Type Description SteamVR_Behaviour_BooleanEvent onPressDown This UnityEvent will fire whenever the boolean action has changed from false to true in the last update Declaration public SteamVR_Behaviour_BooleanEvent onPressDown Field Value Type Description SteamVR_Behaviour_BooleanEvent onPressUp This UnityEvent will fire whenever the boolean action has changed from true to false in the last update Declaration public SteamVR_Behaviour_BooleanEvent onPressUp Field Value Type Description SteamVR_Behaviour_BooleanEvent onUpdate This UnityEvent fires whenever the action is updated Declaration public SteamVR_Behaviour_BooleanEvent onUpdate Field Value Type Description SteamVR_Behaviour_BooleanEvent Properties actionSet Returns the action set that this action is in. Declaration public SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet isActive Returns true if this action is currently bound and its action set is active Declaration public bool isActive { get; } Property Value Type Description System.Boolean Methods AddHandlers() Declaration protected void AddHandlers() GetLocalizedName(EVRInputStringBits[]) Gets the localized name of the device that the action corresponds to. Declaration public string GetLocalizedName(params EVRInputStringBits[] localizedParts) Parameters Type Name Description EVRInputStringBits [] localizedParts VRInputString_Hand - Which hand the origin is in. E.g. \"Left Hand\" VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. \"Vive Controller\" VRInputString_InputSource - What part of that controller is the origin. E.g. \"Trackpad\" VRInputString_All - All of the above. E.g. \"Left Hand Vive Controller Trackpad\" Returns Type Description System.String OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RemoveHandlers() Declaration protected void RemoveHandlers() Events onChangeEvent This C# event fires whenever a change happens in the action Declaration public event SteamVR_Behaviour_Boolean.ChangeHandler onChangeEvent Event Type Type Description SteamVR_Behaviour_Boolean.ChangeHandler onPressDownEvent This C# event will fire whenever the boolean action has changed from false to true in the last update Declaration public event SteamVR_Behaviour_Boolean.StateDownHandler onPressDownEvent Event Type Type Description SteamVR_Behaviour_Boolean.StateDownHandler onPressEvent This C# event will fire whenever the boolean action is true and gets updated Declaration public event SteamVR_Behaviour_Boolean.StateHandler onPressEvent Event Type Type Description SteamVR_Behaviour_Boolean.StateHandler onPressUpEvent This C# event will fire whenever the boolean action has changed from true to false in the last update Declaration public event SteamVR_Behaviour_Boolean.StateUpHandler onPressUpEvent Event Type Type Description SteamVR_Behaviour_Boolean.StateUpHandler onUpdateEvent This C# event fires whenever the action is updated Declaration public event SteamVR_Behaviour_Boolean.UpdateHandler onUpdateEvent Event Type Type Description SteamVR_Behaviour_Boolean.UpdateHandler"
  },
  "api/Valve.VR.SteamVR_Behaviour_Boolean.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Boolean.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Boolean.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Boolean.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState); Parameters Type Name Description SteamVR_Behaviour_Boolean fromAction SteamVR_Input_Sources fromSource System.Boolean newState"
  },
  "api/Valve.VR.SteamVR_Action_Boolean_Source_Map.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean_Source_Map.html",
    "title": "Class SteamVR_Action_Boolean_Source_Map | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Boolean_Source_Map Inheritance System.Object SteamVR_Action_Source_Map SteamVR_Action_Source_Map < SteamVR_Action_Boolean_Source > SteamVR_Action_In_Source_Map < SteamVR_Action_Boolean_Source > SteamVR_Action_Boolean_Source_Map Inherited Members SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>.updatingSources SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>.IsUpdating(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>.OnAccessSource(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>.ForceAddSourceToUpdateList(SteamVR_Input_Sources) SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>.UpdateValues() SteamVR_Action_Source_Map<SteamVR_Action_Boolean_Source>.Item[SteamVR_Input_Sources] SteamVR_Action_Source_Map<SteamVR_Action_Boolean_Source>.sources SteamVR_Action_Source_Map<SteamVR_Action_Boolean_Source>.Initialize() SteamVR_Action_Source_Map<SteamVR_Action_Boolean_Source>.PreinitializeMap(SteamVR_Input_Sources, SteamVR_Action) SteamVR_Action_Source_Map<SteamVR_Action_Boolean_Source>.GetSourceElementForIndexer(SteamVR_Input_Sources) SteamVR_Action_Source_Map.fullPath SteamVR_Action_Source_Map.handle SteamVR_Action_Source_Map.actionSet SteamVR_Action_Source_Map.direction SteamVR_Action_Source_Map.action SteamVR_Action_Source_Map.PreInitialize(SteamVR_Action, String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Boolean_Source_Map : SteamVR_Action_In_Source_Map<SteamVR_Action_Boolean_Source>"
  },
  "api/Valve.VR.SteamVR_Action_Boolean_Source.html": {
    "href": "api/Valve.VR.SteamVR_Action_Boolean_Source.html",
    "title": "Class SteamVR_Action_Boolean_Source | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Action_Boolean_Source Inheritance System.Object SteamVR_Action_Source SteamVR_Action_In_Source SteamVR_Action_Boolean_Source Implements ISteamVR_Action_Boolean ISteamVR_Action_In_Source ISteamVR_Action_Source Inherited Members SteamVR_Action_In_Source.inputOriginInfo_size SteamVR_Action_In_Source.isUpdating SteamVR_Action_In_Source.updateTime SteamVR_Action_In_Source.activeDevice SteamVR_Action_In_Source.trackedDeviceIndex SteamVR_Action_In_Source.renderModelComponentName SteamVR_Action_In_Source.localizedOriginName SteamVR_Action_In_Source.changedTime SteamVR_Action_In_Source.lastOriginGetFrame SteamVR_Action_In_Source.inputOriginInfo SteamVR_Action_In_Source.lastInputOriginInfo SteamVR_Action_In_Source.UpdateOriginTrackedDeviceInfo() SteamVR_Action_In_Source.GetLocalizedOriginPart(EVRInputStringBits[]) SteamVR_Action_In_Source.GetLocalizedOrigin() SteamVR_Action_Source.fullPath SteamVR_Action_Source.handle SteamVR_Action_Source.actionSet SteamVR_Action_Source.direction SteamVR_Action_Source.inputSource SteamVR_Action_Source.setActive SteamVR_Action_Source.inputSourceHandle SteamVR_Action_Source.action System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Action_Boolean_Source : SteamVR_Action_In_Source, ISteamVR_Action_Boolean, ISteamVR_Action_In_Source, ISteamVR_Action_Source Fields actionData Declaration protected InputDigitalActionData_t actionData Field Value Type Description InputDigitalActionData_t actionData_size Declaration protected static uint actionData_size Field Value Type Description System.UInt32 booleanAction Declaration protected SteamVR_Action_Boolean booleanAction Field Value Type Description SteamVR_Action_Boolean lastActionData Declaration protected InputDigitalActionData_t lastActionData Field Value Type Description InputDigitalActionData_t Properties active Returns true if this action is bound and the ActionSet is active Declaration public override bool active { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.active activeBinding Returns true if the action is bound Declaration public override bool activeBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.activeBinding activeOrigin The handle to the origin of the component that was used to update the value for this action Declaration public override ulong activeOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.activeOrigin changed True when the action's state changed during the most recent update. Note: Will only return true if the action is also active. Declaration public override bool changed { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.changed Remarks ActionSet is ignored since get is coming from the native struct. lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration public override bool lastActive { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActive lastActiveBinding Returns true if the action was bound during the previous update Declaration public override bool lastActiveBinding { get; } Property Value Type Description System.Boolean Overrides SteamVR_Action_Source.lastActiveBinding lastActiveOrigin The handle to the origin of the component that was used to update the value for this action (for the previous update) Declaration public override ulong lastActiveOrigin { get; } Property Value Type Description System.UInt64 Overrides SteamVR_Action_In_Source.lastActiveOrigin lastChanged The value of the action's 'changed' during the previous update Declaration public override bool lastChanged { get; protected set; } Property Value Type Description System.Boolean Overrides SteamVR_Action_In_Source.lastChanged Remarks Always returns the previous update state. Set is ignored since get is coming from the native struct. lastState The value of the action's 'state' during the previous update Declaration public bool lastState { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state lastStateDown The value of the action's 'stateDown' during the previous update Declaration public bool lastStateDown { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state lastStateUp The value of the action's 'stateUp' during the previous update Declaration public bool lastStateUp { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state state The current value of the boolean action. Note: Will only return true if the action is also active. Declaration public bool state { get; } Property Value Type Description System.Boolean stateDown True when the action's state changes from false to true. Note: Will only return true if the action is also active. Declaration public bool stateDown { get; } Property Value Type Description System.Boolean Remarks Will only return true if the action is also active. stateUp True when the action's state changes from true to false. Note: Will only return true if the action is also active. Declaration public bool stateUp { get; } Property Value Type Description System.Boolean Remarks Will only return true if the action is also active. Methods Initialize() [Should not be called by user code] Initializes the handle for the inputSource, the action data size, and any other related SteamVR data. Declaration public override void Initialize() Overrides SteamVR_Action_In_Source.Initialize() Preinitialize(SteamVR_Action, SteamVR_Input_Sources) [Should not be called by user code] Sets up the internals of the action source before SteamVR has been initialized. Declaration public override void Preinitialize(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource) Parameters Type Name Description SteamVR_Action wrappingAction SteamVR_Input_Sources forInputSource Overrides SteamVR_Action_Source.Preinitialize(SteamVR_Action, SteamVR_Input_Sources) UpdateValue() [Should not be called by user code] Updates the data for this action and this input source. Sends related events. Declaration public override void UpdateValue() Overrides SteamVR_Action_In_Source.UpdateValue() Events onActiveBindingChange Event fires when the active state of the binding changes Declaration public event SteamVR_Action_Boolean.ActiveChangeHandler onActiveBindingChange Event Type Type Description SteamVR_Action_Boolean.ActiveChangeHandler onActiveChange Event fires when the active state (ActionSet active and binding active) changes Declaration public event SteamVR_Action_Boolean.ActiveChangeHandler onActiveChange Event Type Type Description SteamVR_Action_Boolean.ActiveChangeHandler onChange Event fires when the state of the action changes from false to true or true to false Declaration public event SteamVR_Action_Boolean.ChangeHandler onChange Event Type Type Description SteamVR_Action_Boolean.ChangeHandler onState Event fires when the state of the action is true and the action gets updated Declaration public event SteamVR_Action_Boolean.StateHandler onState Event Type Type Description SteamVR_Action_Boolean.StateHandler onStateDown Event fires when the state of the action changes from false to true Declaration public event SteamVR_Action_Boolean.StateDownHandler onStateDown Event Type Type Description SteamVR_Action_Boolean.StateDownHandler onStateUp Event fires when the state of the action changes from true to false Declaration public event SteamVR_Action_Boolean.StateUpHandler onStateUp Event Type Type Description SteamVR_Action_Boolean.StateUpHandler onUpdate Event fires when the action is updated Declaration public event SteamVR_Action_Boolean.UpdateHandler onUpdate Event Type Type Description SteamVR_Action_Boolean.UpdateHandler Implements ISteamVR_Action_Boolean ISteamVR_Action_In_Source ISteamVR_Action_Source"
  },
  "api/Valve.VR.IVRSpatialAnchors.html": {
    "href": "api/Valve.VR.IVRSpatialAnchors.html",
    "title": "Struct IVRSpatialAnchors | SteamVR Unity Plugin",
    "keywords": "Struct IVRSpatialAnchors Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRSpatialAnchors"
  },
  "api/Valve.VR.IVRSettings.html": {
    "href": "api/Valve.VR.IVRSettings.html",
    "title": "Struct IVRSettings | SteamVR Unity Plugin",
    "keywords": "Struct IVRSettings Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IVRSettings"
  },
  "api/Valve.VR.ISteamVR_Action_Source.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Source.html",
    "title": "Interface ISteamVR_Action_Source | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Source Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Source Properties actionSet The ActionSet this action is contained within Declaration SteamVR_ActionSet actionSet { get; } Property Value Type Description SteamVR_ActionSet active Returns true if this action is bound and the ActionSet is active Declaration bool active { get; } Property Value Type Description System.Boolean activeBinding Returns true if the action is bound Declaration bool activeBinding { get; } Property Value Type Description System.Boolean direction The action direction of this action (in for input, out for output) Declaration SteamVR_ActionDirections direction { get; } Property Value Type Description SteamVR_ActionDirections fullPath The full string path for this action (from the action manifest) Declaration string fullPath { get; } Property Value Type Description System.String handle The underlying handle for this action used for native SteamVR Input calls. Retrieved on Initialization from SteamVR. Declaration ulong handle { get; } Property Value Type Description System.UInt64 lastActive Returns true if the action was bound and the ActionSet was active during the previous update Declaration bool lastActive { get; } Property Value Type Description System.Boolean lastActiveBinding Returns true if the action was bound last update Declaration bool lastActiveBinding { get; } Property Value Type Description System.Boolean"
  },
  "api/Valve.VR.ISteamVR_Action_Skeleton_Source.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Skeleton_Source.html",
    "title": "Interface ISteamVR_Action_Skeleton_Source | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Skeleton_Source Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Skeleton_Source Properties bonePositions An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration Vector3[] bonePositions { get; } Property Value Type Description UnityEngine.Vector3 [] boneRotations An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration Quaternion[] boneRotations { get; } Property Value Type Description UnityEngine.Quaternion [] fingerCurls 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration float[] fingerCurls { get; } Property Value Type Description System.Single [] fingerSplays 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration float[] fingerSplays { get; } Property Value Type Description System.Single [] indexCurl A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration float indexCurl { get; } Property Value Type Description System.Single indexMiddleSplay A 0-1 value representing the size of the gap between the index and middle fingers Declaration float indexMiddleSplay { get; } Property Value Type Description System.Single lastBonePositions From the previous update: An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration Vector3[] lastBonePositions { get; } Property Value Type Description UnityEngine.Vector3 [] lastBoneRotations From the previous update: An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. Declaration Quaternion[] lastBoneRotations { get; } Property Value Type Description UnityEngine.Quaternion [] lastFingerCurls [Previous Update] 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration float[] lastFingerCurls { get; } Property Value Type Description System.Single [] lastFingerSplays [Previous Update] 0-1 values representing how splayed the specified finger and it's next index'd finger is. For indexes see: SteamVR_Skeleton_FingerIndexes Declaration float[] lastFingerSplays { get; } Property Value Type Description System.Single [] lastIndexCurl [Previous Update] A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. Declaration float lastIndexCurl { get; } Property Value Type Description System.Single lastIndexMiddleSplay [Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers Declaration float lastIndexMiddleSplay { get; } Property Value Type Description System.Single lastMiddleCurl [Previous Update] A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration float lastMiddleCurl { get; } Property Value Type Description System.Single lastMiddleRingSplay [Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers Declaration float lastMiddleRingSplay { get; } Property Value Type Description System.Single lastPinkyCurl [Previous Update] A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration float lastPinkyCurl { get; } Property Value Type Description System.Single lastRingCurl [Previous Update] A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration float lastRingCurl { get; } Property Value Type Description System.Single lastRingPinkySplay [Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration float lastRingPinkySplay { get; } Property Value Type Description System.Single lastThumbCurl [Previous Update] A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration float lastThumbCurl { get; } Property Value Type Description System.Single lastThumbIndexSplay [Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers Declaration float lastThumbIndexSplay { get; } Property Value Type Description System.Single middleCurl A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. Declaration float middleCurl { get; } Property Value Type Description System.Single middleRingSplay A 0-1 value representing the size of the gap between the middle and ring fingers Declaration float middleRingSplay { get; } Property Value Type Description System.Single pinkyCurl A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. Declaration float pinkyCurl { get; } Property Value Type Description System.Single rangeOfMotion The range of motion the we're using to get bone data from. With Controller being your hand while holding the controller. Declaration EVRSkeletalMotionRange rangeOfMotion { get; set; } Property Value Type Description EVRSkeletalMotionRange ringCurl A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. Declaration float ringCurl { get; } Property Value Type Description System.Single ringPinkySplay A 0-1 value representing the size of the gap between the ring and pinky fingers Declaration float ringPinkySplay { get; } Property Value Type Description System.Single skeletalTrackingLevel Get the accuracy level of the skeletal tracking data. * Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. * Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl * Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. Declaration EVRSkeletalTrackingLevel skeletalTrackingLevel { get; } Property Value Type Description EVRSkeletalTrackingLevel skeletalTransformSpace The space to get bone data in. Parent space by default Declaration EVRSkeletalTransformSpace skeletalTransformSpace { get; set; } Property Value Type Description EVRSkeletalTransformSpace thumbCurl A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. Declaration float thumbCurl { get; } Property Value Type Description System.Single thumbIndexSplay A 0-1 value representing the size of the gap between the thumb and index fingers Declaration float thumbIndexSplay { get; } Property Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.SleepOnAwake.html": {
    "href": "api/Valve.VR.InteractionSystem.SleepOnAwake.html",
    "title": "Class SleepOnAwake | SteamVR Unity Plugin",
    "keywords": "Class SleepOnAwake Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SleepOnAwake Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SleepOnAwake : MonoBehaviour"
  },
  "api/Valve.VR.InteractionSystem.SeeThru.html": {
    "href": "api/Valve.VR.InteractionSystem.SeeThru.html",
    "title": "Class SeeThru | SteamVR Unity Plugin",
    "keywords": "Class SeeThru Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SeeThru Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SeeThru : MonoBehaviour Fields seeThruMaterial Declaration public Material seeThruMaterial Field Value Type Description UnityEngine.Material"
  },
  "api/Valve.VR.SteamVR_Input_ActionSet_mixedreality.html": {
    "href": "api/Valve.VR.SteamVR_Input_ActionSet_mixedreality.html",
    "title": "Class SteamVR_Input_ActionSet_mixedreality | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input_ActionSet_mixedreality Inheritance System.Object SteamVR_ActionSet SteamVR_Input_ActionSet_mixedreality Implements System.IEquatable < SteamVR_ActionSet > ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_ActionSet.setData SteamVR_ActionSet.allActions SteamVR_ActionSet.nonVisualInActions SteamVR_ActionSet.visualActions SteamVR_ActionSet.poseActions SteamVR_ActionSet.skeletonActions SteamVR_ActionSet.outActionArray SteamVR_ActionSet.fullPath SteamVR_ActionSet.usage SteamVR_ActionSet.handle SteamVR_ActionSet.initialized SteamVR_ActionSet.Create<CreateType>(String) SteamVR_ActionSet.CreateFromName<CreateType>(String) SteamVR_ActionSet.PreInitialize(String) SteamVR_ActionSet.FinishPreInitialize() SteamVR_ActionSet.Initialize(Boolean, Boolean) SteamVR_ActionSet.GetPath() SteamVR_ActionSet.IsActive(SteamVR_Input_Sources) SteamVR_ActionSet.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.Activate(SteamVR_Input_Sources, Int32, Boolean) SteamVR_ActionSet.Deactivate(SteamVR_Input_Sources) SteamVR_ActionSet.GetShortName() SteamVR_ActionSet.ReadRawSetActive(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetPriority(SteamVR_Input_Sources) SteamVR_ActionSet.GetActionSetData() SteamVR_ActionSet.GetCopy<CreateType>() SteamVR_ActionSet.Equals(SteamVR_ActionSet) SteamVR_ActionSet.Equals(Object) SteamVR_ActionSet.GetHashCode() SteamVR_ActionSet.ISerializationCallbackReceiver.OnBeforeSerialize() SteamVR_ActionSet.ISerializationCallbackReceiver.OnAfterDeserialize() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Input_ActionSet_mixedreality : SteamVR_ActionSet, IEquatable<SteamVR_ActionSet>, ISteamVR_ActionSet, ISerializationCallbackReceiver Properties ExternalCamera Declaration public virtual SteamVR_Action_Pose ExternalCamera { get; } Property Value Type Description SteamVR_Action_Pose Implements System.IEquatable<T> ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Input_ActionSet_default.html": {
    "href": "api/Valve.VR.SteamVR_Input_ActionSet_default.html",
    "title": "Class SteamVR_Input_ActionSet_default | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Input_ActionSet_default Inheritance System.Object SteamVR_ActionSet SteamVR_Input_ActionSet_default Implements System.IEquatable < SteamVR_ActionSet > ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver Inherited Members SteamVR_ActionSet.setData SteamVR_ActionSet.allActions SteamVR_ActionSet.nonVisualInActions SteamVR_ActionSet.visualActions SteamVR_ActionSet.poseActions SteamVR_ActionSet.skeletonActions SteamVR_ActionSet.outActionArray SteamVR_ActionSet.fullPath SteamVR_ActionSet.usage SteamVR_ActionSet.handle SteamVR_ActionSet.initialized SteamVR_ActionSet.Create<CreateType>(String) SteamVR_ActionSet.CreateFromName<CreateType>(String) SteamVR_ActionSet.PreInitialize(String) SteamVR_ActionSet.FinishPreInitialize() SteamVR_ActionSet.Initialize(Boolean, Boolean) SteamVR_ActionSet.GetPath() SteamVR_ActionSet.IsActive(SteamVR_Input_Sources) SteamVR_ActionSet.GetTimeLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.Activate(SteamVR_Input_Sources, Int32, Boolean) SteamVR_ActionSet.Deactivate(SteamVR_Input_Sources) SteamVR_ActionSet.GetShortName() SteamVR_ActionSet.ReadRawSetActive(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetLastChanged(SteamVR_Input_Sources) SteamVR_ActionSet.ReadRawSetPriority(SteamVR_Input_Sources) SteamVR_ActionSet.GetActionSetData() SteamVR_ActionSet.GetCopy<CreateType>() SteamVR_ActionSet.Equals(SteamVR_ActionSet) SteamVR_ActionSet.Equals(Object) SteamVR_ActionSet.GetHashCode() SteamVR_ActionSet.ISerializationCallbackReceiver.OnBeforeSerialize() SteamVR_ActionSet.ISerializationCallbackReceiver.OnAfterDeserialize() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Input_ActionSet_default : SteamVR_ActionSet, IEquatable<SteamVR_ActionSet>, ISteamVR_ActionSet, ISerializationCallbackReceiver Properties GrabGrip Declaration public virtual SteamVR_Action_Boolean GrabGrip { get; } Property Value Type Description SteamVR_Action_Boolean GrabPinch Declaration public virtual SteamVR_Action_Boolean GrabPinch { get; } Property Value Type Description SteamVR_Action_Boolean Haptic Declaration public virtual SteamVR_Action_Vibration Haptic { get; } Property Value Type Description SteamVR_Action_Vibration HeadsetOnHead Declaration public virtual SteamVR_Action_Boolean HeadsetOnHead { get; } Property Value Type Description SteamVR_Action_Boolean InteractUI Declaration public virtual SteamVR_Action_Boolean InteractUI { get; } Property Value Type Description SteamVR_Action_Boolean Pose Declaration public virtual SteamVR_Action_Pose Pose { get; } Property Value Type Description SteamVR_Action_Pose SkeletonLeftHand Declaration public virtual SteamVR_Action_Skeleton SkeletonLeftHand { get; } Property Value Type Description SteamVR_Action_Skeleton SkeletonRightHand Declaration public virtual SteamVR_Action_Skeleton SkeletonRightHand { get; } Property Value Type Description SteamVR_Action_Skeleton Squeeze Declaration public virtual SteamVR_Action_Single Squeeze { get; } Property Value Type Description SteamVR_Action_Single Teleport Declaration public virtual SteamVR_Action_Boolean Teleport { get; } Property Value Type Description SteamVR_Action_Boolean Implements System.IEquatable<T> ISteamVR_ActionSet UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.CVRNotifications.html": {
    "href": "api/Valve.VR.CVRNotifications.html",
    "title": "Class CVRNotifications | SteamVR Unity Plugin",
    "keywords": "Class CVRNotifications Inheritance System.Object CVRNotifications Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRNotifications Methods CreateNotification(UInt64, UInt64, EVRNotificationType, String, EVRNotificationStyle, ref NotificationBitmap_t, ref UInt32) Declaration public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId) Parameters Type Name Description System.UInt64 ulOverlayHandle System.UInt64 ulUserValue EVRNotificationType type System.String pchText EVRNotificationStyle style NotificationBitmap_t pImage System.UInt32 pNotificationId Returns Type Description EVRNotificationError RemoveNotification(UInt32) Declaration public EVRNotificationError RemoveNotification(uint notificationId) Parameters Type Name Description System.UInt32 notificationId Returns Type Description EVRNotificationError"
  },
  "api/Valve.VR.Compositor_CumulativeStats.html": {
    "href": "api/Valve.VR.Compositor_CumulativeStats.html",
    "title": "Struct Compositor_CumulativeStats | SteamVR Unity Plugin",
    "keywords": "Struct Compositor_CumulativeStats Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct Compositor_CumulativeStats Fields m_nNumDroppedFrames Declaration public uint m_nNumDroppedFrames Field Value Type Description System.UInt32 m_nNumDroppedFramesLoading Declaration public uint m_nNumDroppedFramesLoading Field Value Type Description System.UInt32 m_nNumDroppedFramesOnStartup Declaration public uint m_nNumDroppedFramesOnStartup Field Value Type Description System.UInt32 m_nNumDroppedFramesTimedOut Declaration public uint m_nNumDroppedFramesTimedOut Field Value Type Description System.UInt32 m_nNumFramePresents Declaration public uint m_nNumFramePresents Field Value Type Description System.UInt32 m_nNumFramePresentsLoading Declaration public uint m_nNumFramePresentsLoading Field Value Type Description System.UInt32 m_nNumFramePresentsOnStartup Declaration public uint m_nNumFramePresentsOnStartup Field Value Type Description System.UInt32 m_nNumFramePresentsTimedOut Declaration public uint m_nNumFramePresentsTimedOut Field Value Type Description System.UInt32 m_nNumLoading Declaration public uint m_nNumLoading Field Value Type Description System.UInt32 m_nNumReprojectedFrames Declaration public uint m_nNumReprojectedFrames Field Value Type Description System.UInt32 m_nNumReprojectedFramesLoading Declaration public uint m_nNumReprojectedFramesLoading Field Value Type Description System.UInt32 m_nNumReprojectedFramesOnStartup Declaration public uint m_nNumReprojectedFramesOnStartup Field Value Type Description System.UInt32 m_nNumReprojectedFramesTimedOut Declaration public uint m_nNumReprojectedFramesTimedOut Field Value Type Description System.UInt32 m_nNumTimedOut Declaration public uint m_nNumTimedOut Field Value Type Description System.UInt32 m_nPid Declaration public uint m_nPid Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_ShowUI_t.html": {
    "href": "api/Valve.VR.VREvent_ShowUI_t.html",
    "title": "Struct VREvent_ShowUI_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_ShowUI_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_ShowUI_t Fields eType Declaration public EShowUIType eType Field Value Type Description EShowUIType"
  },
  "api/Valve.VR.VREvent_ShowDevTools_t.html": {
    "href": "api/Valve.VR.VREvent_ShowDevTools_t.html",
    "title": "Struct VREvent_ShowDevTools_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_ShowDevTools_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_ShowDevTools_t Fields nBrowserIdentifier Declaration public int nBrowserIdentifier Field Value Type Description System.Int32"
  },
  "api/Valve.VR.VREvent_SeatedZeroPoseReset_t.html": {
    "href": "api/Valve.VR.VREvent_SeatedZeroPoseReset_t.html",
    "title": "Struct VREvent_SeatedZeroPoseReset_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_SeatedZeroPoseReset_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_SeatedZeroPoseReset_t Fields bResetBySystemMenu Declaration public bool bResetBySystemMenu Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.VREvent_Scroll_t.html": {
    "href": "api/Valve.VR.VREvent_Scroll_t.html",
    "title": "Struct VREvent_Scroll_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Scroll_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Scroll_t Fields unused Declaration public uint unused Field Value Type Description System.UInt32 viewportscale Declaration public float viewportscale Field Value Type Description System.Single xdelta Declaration public float xdelta Field Value Type Description System.Single ydelta Declaration public float ydelta Field Value Type Description System.Single"
  },
  "api/Valve.VR.TrackedDevicePose_t.html": {
    "href": "api/Valve.VR.TrackedDevicePose_t.html",
    "title": "Struct TrackedDevicePose_t | SteamVR Unity Plugin",
    "keywords": "Struct TrackedDevicePose_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct TrackedDevicePose_t Fields bDeviceIsConnected Declaration public bool bDeviceIsConnected Field Value Type Description System.Boolean bPoseIsValid Declaration public bool bPoseIsValid Field Value Type Description System.Boolean eTrackingResult Declaration public ETrackingResult eTrackingResult Field Value Type Description ETrackingResult mDeviceToAbsoluteTracking Declaration public HmdMatrix34_t mDeviceToAbsoluteTracking Field Value Type Description HmdMatrix34_t vAngularVelocity Declaration public HmdVector3_t vAngularVelocity Field Value Type Description HmdVector3_t vVelocity Declaration public HmdVector3_t vVelocity Field Value Type Description HmdVector3_t"
  },
  "api/Valve.VR.Texture_t.html": {
    "href": "api/Valve.VR.Texture_t.html",
    "title": "Struct Texture_t | SteamVR Unity Plugin",
    "keywords": "Struct Texture_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct Texture_t Fields eColorSpace Declaration public EColorSpace eColorSpace Field Value Type Description EColorSpace eType Declaration public ETextureType eType Field Value Type Description ETextureType handle Declaration public IntPtr handle Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.InteractionSystem.SoundDeparent.html": {
    "href": "api/Valve.VR.InteractionSystem.SoundDeparent.html",
    "title": "Class SoundDeparent | SteamVR Unity Plugin",
    "keywords": "Class SoundDeparent Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SoundDeparent Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SoundDeparent : MonoBehaviour Fields destroyAfterPlayOnce Declaration public bool destroyAfterPlayOnce Field Value Type Description System.Boolean"
  },
  "api/Valve.VR.InteractionSystem.SoundBowClick.html": {
    "href": "api/Valve.VR.InteractionSystem.SoundBowClick.html",
    "title": "Class SoundBowClick | SteamVR Unity Plugin",
    "keywords": "Class SoundBowClick Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SoundBowClick Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SoundBowClick : MonoBehaviour Fields bowClick Declaration public AudioClip bowClick Field Value Type Description UnityEngine.AudioClip maxPitch Declaration public float maxPitch Field Value Type Description System.Single minPitch Declaration public float minPitch Field Value Type Description System.Single pitchTensionCurve Declaration public AnimationCurve pitchTensionCurve Field Value Type Description UnityEngine.AnimationCurve Methods PlayBowTensionClicks(Single) Declaration public void PlayBowTensionClicks(float normalizedTension) Parameters Type Name Description System.Single normalizedTension"
  },
  "api/Valve.VR.InteractionSystem.LinearAnimator.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearAnimator.html",
    "title": "Class LinearAnimator | SteamVR Unity Plugin",
    "keywords": "Class LinearAnimator Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearAnimator Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearAnimator : MonoBehaviour Fields animator Declaration public Animator animator Field Value Type Description UnityEngine.Animator linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping"
  },
  "api/Valve.VR.InteractionSystem.LinearAnimation.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearAnimation.html",
    "title": "Class LinearAnimation | SteamVR Unity Plugin",
    "keywords": "Class LinearAnimation Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearAnimation Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearAnimation : MonoBehaviour Fields animation Declaration public Animation animation Field Value Type Description UnityEngine.Animation linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping"
  },
  "api/Valve.VR.InteractionSystem.HapticRack.html": {
    "href": "api/Valve.VR.InteractionSystem.HapticRack.html",
    "title": "Class HapticRack | SteamVR Unity Plugin",
    "keywords": "Class HapticRack Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour HapticRack Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class HapticRack : MonoBehaviour Fields linearMapping Declaration [Tooltip(\"The linear mapping driving the haptic rack\")] public LinearMapping linearMapping Field Value Type Description LinearMapping maximumPulseDuration Declaration [Tooltip(\"Maximum duration of the haptic pulse\")] public int maximumPulseDuration Field Value Type Description System.Int32 minimumPulseDuration Declaration [Tooltip(\"Minimum duration of the haptic pulse\")] public int minimumPulseDuration Field Value Type Description System.Int32 onPulse Declaration [Tooltip(\"This event is triggered every time a haptic pulse is made\")] public UnityEvent onPulse Field Value Type Description UnityEngine.Events.UnityEvent teethCount Declaration [Tooltip(\"The number of haptic pulses evenly distributed along the mapping\")] public int teethCount Field Value Type Description System.Int32"
  },
  "api/Valve.VR.InteractionSystem.HandEvent.html": {
    "href": "api/Valve.VR.InteractionSystem.HandEvent.html",
    "title": "Class HandEvent | SteamVR Unity Plugin",
    "keywords": "Class HandEvent Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < Hand > HandEvent Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.InteractionSystem.Hand>) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.InteractionSystem.Hand>) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.InteractionSystem.Hand>.Invoke(Valve.VR.InteractionSystem.Hand) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [Serializable] public class HandEvent : UnityEvent<Hand>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.InteractionSystem.DebugUI.html": {
    "href": "api/Valve.VR.InteractionSystem.DebugUI.html",
    "title": "Class DebugUI | SteamVR Unity Plugin",
    "keywords": "Class DebugUI Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DebugUI Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class DebugUI : MonoBehaviour Properties instance Declaration public static DebugUI instance { get; } Property Value Type Description DebugUI"
  },
  "api/Valve.VR.InteractionSystem.CustomEvents.html": {
    "href": "api/Valve.VR.InteractionSystem.CustomEvents.html",
    "title": "Class CustomEvents | SteamVR Unity Plugin",
    "keywords": "Class CustomEvents Inheritance System.Object CustomEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public static class CustomEvents"
  },
  "api/Valve.VR.EVRFinger.html": {
    "href": "api/Valve.VR.EVRFinger.html",
    "title": "Enum EVRFinger | SteamVR Unity Plugin",
    "keywords": "Enum EVRFinger Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRFinger Fields Name Description Count Index Middle Pinky Ring Thumb"
  },
  "api/Valve.VR.EVREye.html": {
    "href": "api/Valve.VR.EVREye.html",
    "title": "Enum EVREye | SteamVR Unity Plugin",
    "keywords": "Enum EVREye Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVREye Fields Name Description Eye_Left Eye_Right"
  },
  "api/Valve.VR.EVRComponentProperty.html": {
    "href": "api/Valve.VR.EVRComponentProperty.html",
    "title": "Enum EVRComponentProperty | SteamVR Unity Plugin",
    "keywords": "Enum EVRComponentProperty Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRComponentProperty Fields Name Description IsPressed IsScrolled IsStatic IsTouched IsVisible"
  },
  "api/Valve.VR.ETrackingResult.html": {
    "href": "api/Valve.VR.ETrackingResult.html",
    "title": "Enum ETrackingResult | SteamVR Unity Plugin",
    "keywords": "Enum ETrackingResult Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackingResult Fields Name Description Calibrating_InProgress Calibrating_OutOfRange Fallback_RotationOnly Running_OK Running_OutOfRange Uninitialized"
  },
  "api/Valve.VR.EOverlayDirection.html": {
    "href": "api/Valve.VR.EOverlayDirection.html",
    "title": "Enum EOverlayDirection | SteamVR Unity Plugin",
    "keywords": "Enum EOverlayDirection Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EOverlayDirection Fields Name Description Count Down Left Right Up"
  },
  "api/Valve.VR.EDualAnalogWhich.html": {
    "href": "api/Valve.VR.EDualAnalogWhich.html",
    "title": "Enum EDualAnalogWhich | SteamVR Unity Plugin",
    "keywords": "Enum EDualAnalogWhich Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EDualAnalogWhich Fields Name Description k_EDualAnalog_Left k_EDualAnalog_Right"
  },
  "api/Valve.VR.DriverDirectMode_FrameTiming.html": {
    "href": "api/Valve.VR.DriverDirectMode_FrameTiming.html",
    "title": "Struct DriverDirectMode_FrameTiming | SteamVR Unity Plugin",
    "keywords": "Struct DriverDirectMode_FrameTiming Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct DriverDirectMode_FrameTiming Fields m_nNumDroppedFrames Declaration public uint m_nNumDroppedFrames Field Value Type Description System.UInt32 m_nNumFramePresents Declaration public uint m_nNumFramePresents Field Value Type Description System.UInt32 m_nNumMisPresented Declaration public uint m_nNumMisPresented Field Value Type Description System.UInt32 m_nReprojectionFlags Declaration public uint m_nReprojectionFlags Field Value Type Description System.UInt32 m_nSize Declaration public uint m_nSize Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.CVRScreenshots.html": {
    "href": "api/Valve.VR.CVRScreenshots.html",
    "title": "Class CVRScreenshots | SteamVR Unity Plugin",
    "keywords": "Class CVRScreenshots Inheritance System.Object CVRScreenshots Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRScreenshots Methods GetScreenshotPropertyFilename(UInt32, EVRScreenshotPropertyFilenames, StringBuilder, UInt32, ref EVRScreenshotError) Declaration public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError) Parameters Type Name Description System.UInt32 screenshotHandle EVRScreenshotPropertyFilenames filenameType System.Text.StringBuilder pchFilename System.UInt32 cchFilename EVRScreenshotError pError Returns Type Description System.UInt32 GetScreenshotPropertyType(UInt32, ref EVRScreenshotError) Declaration public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError) Parameters Type Name Description System.UInt32 screenshotHandle EVRScreenshotError pError Returns Type Description EVRScreenshotType HookScreenshot(EVRScreenshotType[]) Declaration public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes) Parameters Type Name Description EVRScreenshotType [] pSupportedTypes Returns Type Description EVRScreenshotError RequestScreenshot(ref UInt32, EVRScreenshotType, String, String) Declaration public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename) Parameters Type Name Description System.UInt32 pOutScreenshotHandle EVRScreenshotType type System.String pchPreviewFilename System.String pchVRFilename Returns Type Description EVRScreenshotError SubmitScreenshot(UInt32, EVRScreenshotType, String, String) Declaration public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename) Parameters Type Name Description System.UInt32 screenshotHandle EVRScreenshotType type System.String pchSourcePreviewFilename System.String pchSourceVRFilename Returns Type Description EVRScreenshotError TakeStereoScreenshot(ref UInt32, String, String) Declaration public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename) Parameters Type Name Description System.UInt32 pOutScreenshotHandle System.String pchPreviewFilename System.String pchVRFilename Returns Type Description EVRScreenshotError UpdateScreenshotProgress(UInt32, Single) Declaration public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress) Parameters Type Name Description System.UInt32 screenshotHandle System.Single flProgress Returns Type Description EVRScreenshotError"
  },
  "api/Valve.VR.VREvent_Status_t.html": {
    "href": "api/Valve.VR.VREvent_Status_t.html",
    "title": "Struct VREvent_Status_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Status_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Status_t Fields statusState Declaration public uint statusState Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_SpatialAnchor_t.html": {
    "href": "api/Valve.VR.VREvent_SpatialAnchor_t.html",
    "title": "Struct VREvent_SpatialAnchor_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_SpatialAnchor_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_SpatialAnchor_t Fields unHandle Declaration public uint unHandle Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.SteamVR_Skeleton_JointIndexes.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_JointIndexes.html",
    "title": "Class SteamVR_Skeleton_JointIndexes | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_JointIndexes The order of the joints that SteamVR Skeleton Input is expecting. Inheritance System.Object SteamVR_Skeleton_JointIndexes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public static class SteamVR_Skeleton_JointIndexes Fields indexAux Declaration public const int indexAux = 27 Field Value Type Description System.Int32 indexDistal Declaration public const int indexDistal = 9 Field Value Type Description System.Int32 indexMetacarpal Declaration public const int indexMetacarpal = 6 Field Value Type Description System.Int32 indexMiddle Declaration public const int indexMiddle = 8 Field Value Type Description System.Int32 indexProximal Declaration public const int indexProximal = 7 Field Value Type Description System.Int32 indexTip Declaration public const int indexTip = 10 Field Value Type Description System.Int32 middleAux Declaration public const int middleAux = 28 Field Value Type Description System.Int32 middleDistal Declaration public const int middleDistal = 14 Field Value Type Description System.Int32 middleMetacarpal Declaration public const int middleMetacarpal = 11 Field Value Type Description System.Int32 middleMiddle Declaration public const int middleMiddle = 13 Field Value Type Description System.Int32 middleProximal Declaration public const int middleProximal = 12 Field Value Type Description System.Int32 middleTip Declaration public const int middleTip = 15 Field Value Type Description System.Int32 pinkyAux Declaration public const int pinkyAux = 30 Field Value Type Description System.Int32 pinkyDistal Declaration public const int pinkyDistal = 24 Field Value Type Description System.Int32 pinkyMetacarpal Declaration public const int pinkyMetacarpal = 21 Field Value Type Description System.Int32 pinkyMiddle Declaration public const int pinkyMiddle = 23 Field Value Type Description System.Int32 pinkyProximal Declaration public const int pinkyProximal = 22 Field Value Type Description System.Int32 pinkyTip Declaration public const int pinkyTip = 25 Field Value Type Description System.Int32 ringAux Declaration public const int ringAux = 29 Field Value Type Description System.Int32 ringDistal Declaration public const int ringDistal = 19 Field Value Type Description System.Int32 ringMetacarpal Declaration public const int ringMetacarpal = 16 Field Value Type Description System.Int32 ringMiddle Declaration public const int ringMiddle = 18 Field Value Type Description System.Int32 ringProximal Declaration public const int ringProximal = 17 Field Value Type Description System.Int32 ringTip Declaration public const int ringTip = 20 Field Value Type Description System.Int32 root Declaration public const int root = 0 Field Value Type Description System.Int32 thumbAux Declaration public const int thumbAux = 26 Field Value Type Description System.Int32 thumbDistal Declaration public const int thumbDistal = 4 Field Value Type Description System.Int32 thumbMetacarpal Declaration public const int thumbMetacarpal = 2 Field Value Type Description System.Int32 thumbMiddle Declaration public const int thumbMiddle = 3 Field Value Type Description System.Int32 thumbProximal Declaration public const int thumbProximal = 2 Field Value Type Description System.Int32 thumbTip Declaration public const int thumbTip = 5 Field Value Type Description System.Int32 wrist Declaration public const int wrist = 1 Field Value Type Description System.Int32 Methods GetFingerForBone(Int32) Declaration public static int GetFingerForBone(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description System.Int32"
  },
  "api/Valve.VR.SteamVR_Skeleton_JointIndexEnum.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_JointIndexEnum.html",
    "title": "Enum SteamVR_Skeleton_JointIndexEnum | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skeleton_JointIndexEnum Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_Skeleton_JointIndexEnum Fields Name Description indexAux indexDistal indexMetacarpal indexMiddle indexProximal indexTip middleAux middleDistal middleMetacarpal middleMiddle middleProximal middleTip pinkyAux pinkyDistal pinkyMetacarpal pinkyMiddle pinkyProximal pinkyTip ringAux ringDistal ringMetacarpal ringMiddle ringProximal ringTip root thumbAux thumbDistal thumbMetacarpal thumbMiddle thumbProximal thumbTip wrist"
  },
  "api/Valve.VR.InteractionSystem.RenderModel.html": {
    "href": "api/Valve.VR.InteractionSystem.RenderModel.html",
    "title": "Class RenderModel | SteamVR Unity Plugin",
    "keywords": "Class RenderModel Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour RenderModel Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class RenderModel : MonoBehaviour Fields animatorParameterStateName Declaration protected string animatorParameterStateName Field Value Type Description System.String controllerInstance Declaration protected GameObject controllerInstance Field Value Type Description UnityEngine.GameObject controllerPrefab Declaration [Space] public GameObject controllerPrefab Field Value Type Description UnityEngine.GameObject controllerRenderers Declaration protected Renderer[] controllerRenderers Field Value Type Description UnityEngine.Renderer [] controllerRenderModel Declaration protected SteamVR_RenderModel controllerRenderModel Field Value Type Description SteamVR_RenderModel delayedSetMaterial Declaration protected Material delayedSetMaterial Field Value Type Description UnityEngine.Material displayControllerByDefault Declaration public bool displayControllerByDefault Field Value Type Description System.Boolean displayHandByDefault Declaration public bool displayHandByDefault Field Value Type Description System.Boolean handAnimator Declaration protected Animator handAnimator Field Value Type Description UnityEngine.Animator handAnimatorStateId Declaration protected int handAnimatorStateId Field Value Type Description System.Int32 handInstance Declaration protected GameObject handInstance Field Value Type Description UnityEngine.GameObject handPrefab Declaration public GameObject handPrefab Field Value Type Description UnityEngine.GameObject handRenderers Declaration protected Renderer[] handRenderers Field Value Type Description UnityEngine.Renderer [] handSkeleton Declaration protected SteamVR_Behaviour_Skeleton handSkeleton Field Value Type Description SteamVR_Behaviour_Skeleton inputSource Declaration protected SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources renderModelLoadedAction Declaration protected SteamVR_Events.Action renderModelLoadedAction Field Value Type Description SteamVR_Events.Action Properties GetSkeletonRangeOfMotion Declaration public EVRSkeletalMotionRange GetSkeletonRangeOfMotion { get; } Property Value Type Description EVRSkeletalMotionRange Methods Awake() Declaration protected void Awake() DestroyHand() Declaration protected virtual void DestroyHand() GetBone(Int32) Declaration public Transform GetBone(int boneIndex) Parameters Type Name Description System.Int32 boneIndex Returns Type Description UnityEngine.Transform GetBonePosition(Int32, Boolean) Declaration public Vector3 GetBonePosition(int boneIndex, bool local = false) Parameters Type Name Description System.Int32 boneIndex System.Boolean local Returns Type Description UnityEngine.Vector3 GetBoneRotation(Int32, Boolean) Declaration public Quaternion GetBoneRotation(int boneIndex, bool local = false) Parameters Type Name Description System.Int32 boneIndex System.Boolean local Returns Type Description UnityEngine.Quaternion GetControllerPosition(String) Declaration public Vector3 GetControllerPosition(string componentName = null) Parameters Type Name Description System.String componentName Returns Type Description UnityEngine.Vector3 GetHandPosition() Declaration public Vector3 GetHandPosition() Returns Type Description UnityEngine.Vector3 GetHandRotation() Declaration public Quaternion GetHandRotation() Returns Type Description UnityEngine.Quaternion GetSkeleton() Declaration public SteamVR_Behaviour_Skeleton GetSkeleton() Returns Type Description SteamVR_Behaviour_Skeleton Hide() Declaration public void Hide() InitializeController() Declaration protected void InitializeController() InitializeHand() Declaration protected void InitializeHand() IsControllerVisibile() Declaration public bool IsControllerVisibile() Returns Type Description System.Boolean IsHandVisibile() Declaration public bool IsHandVisibile() Returns Type Description System.Boolean MatchHandToTransform(Transform) Declaration public void MatchHandToTransform(Transform match) Parameters Type Name Description UnityEngine.Transform match OnDestroy() Declaration protected void OnDestroy() OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() OnHandInitialized(Int32) Declaration public virtual void OnHandInitialized(int deviceIndex) Parameters Type Name Description System.Int32 deviceIndex OnSkeletonActiveChange(SteamVR_Action_Skeleton, Boolean) Declaration protected virtual void OnSkeletonActiveChange(SteamVR_Action_Skeleton changedAction, bool newState) Parameters Type Name Description SteamVR_Action_Skeleton changedAction System.Boolean newState ResetTemporarySkeletonRangeOfMotion(Single) Declaration public void ResetTemporarySkeletonRangeOfMotion(float blendOverSeconds = 0.1F) Parameters Type Name Description System.Single blendOverSeconds SetAnimationState(Int32) Declaration public void SetAnimationState(int stateValue) Parameters Type Name Description System.Int32 stateValue SetControllerMaterial(Material) Declaration public void SetControllerMaterial(Material material) Parameters Type Name Description UnityEngine.Material material SetControllerVisibility(Boolean, Boolean) Declaration public void SetControllerVisibility(bool state, bool permanent = false) Parameters Type Name Description System.Boolean state System.Boolean permanent SetHandMaterial(Material) Declaration public void SetHandMaterial(Material material) Parameters Type Name Description UnityEngine.Material material SetHandPosition(Vector3) Declaration public void SetHandPosition(Vector3 newPosition) Parameters Type Name Description UnityEngine.Vector3 newPosition SetHandRotation(Quaternion) Declaration public void SetHandRotation(Quaternion newRotation) Parameters Type Name Description UnityEngine.Quaternion newRotation SetHandVisibility(Boolean, Boolean) Declaration public void SetHandVisibility(bool state, bool permanent = false) Parameters Type Name Description System.Boolean state System.Boolean permanent SetInputSource(SteamVR_Input_Sources) Declaration public virtual void SetInputSource(SteamVR_Input_Sources newInputSource) Parameters Type Name Description SteamVR_Input_Sources newInputSource SetMaterial(Material) Declaration public virtual void SetMaterial(Material material) Parameters Type Name Description UnityEngine.Material material SetSkeletonRangeOfMotion(EVRSkeletalMotionRange, Single) Declaration public void SetSkeletonRangeOfMotion(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds = 0.1F) Parameters Type Name Description EVRSkeletalMotionRange newRangeOfMotion System.Single blendOverSeconds SetTemporarySkeletonRangeOfMotion(SkeletalMotionRangeChange, Single) Declaration public void SetTemporarySkeletonRangeOfMotion(SkeletalMotionRangeChange temporaryRangeOfMotionChange, float blendOverSeconds = 0.1F) Parameters Type Name Description SkeletalMotionRangeChange temporaryRangeOfMotionChange System.Single blendOverSeconds SetVisibility(Boolean, Boolean) Declaration public void SetVisibility(bool state, bool overrideDefault = false) Parameters Type Name Description System.Boolean state System.Boolean overrideDefault Show(Boolean) Declaration public void Show(bool overrideDefault = false) Parameters Type Name Description System.Boolean overrideDefault StopAnimation() Declaration public void StopAnimation() Events onControllerLoaded Declaration public event Action onControllerLoaded Event Type Type Description System.Action"
  },
  "api/Valve.VR.InteractionSystem.ReleaseStyle.html": {
    "href": "api/Valve.VR.InteractionSystem.ReleaseStyle.html",
    "title": "Enum ReleaseStyle | SteamVR Unity Plugin",
    "keywords": "Enum ReleaseStyle Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum ReleaseStyle Fields Name Description AdvancedEstimation GetFromHand NoChange ShortEstimation"
  },
  "api/Valve.VR.InteractionSystem.InteractableHoverEvents.html": {
    "href": "api/Valve.VR.InteractionSystem.InteractableHoverEvents.html",
    "title": "Class InteractableHoverEvents | SteamVR Unity Plugin",
    "keywords": "Class InteractableHoverEvents Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour InteractableHoverEvents Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class InteractableHoverEvents : MonoBehaviour Fields onAttachedToHand Declaration public UnityEvent onAttachedToHand Field Value Type Description UnityEngine.Events.UnityEvent onDetachedFromHand Declaration public UnityEvent onDetachedFromHand Field Value Type Description UnityEngine.Events.UnityEvent onHandHoverBegin Declaration public UnityEvent onHandHoverBegin Field Value Type Description UnityEngine.Events.UnityEvent onHandHoverEnd Declaration public UnityEvent onHandHoverEnd Field Value Type Description UnityEngine.Events.UnityEvent"
  },
  "api/Valve.VR.InteractionSystem.InteractableDebug.html": {
    "href": "api/Valve.VR.InteractionSystem.InteractableDebug.html",
    "title": "Class InteractableDebug | SteamVR Unity Plugin",
    "keywords": "Class InteractableDebug Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour InteractableDebug Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class InteractableDebug : MonoBehaviour Fields attachedToHand Declaration [NonSerialized] public Hand attachedToHand Field Value Type Description Hand rigidbody Declaration public Rigidbody rigidbody Field Value Type Description UnityEngine.Rigidbody setPositionsForSimulations Declaration public bool setPositionsForSimulations Field Value Type Description System.Boolean simulateReleasesEveryXSeconds Declaration public float simulateReleasesEveryXSeconds Field Value Type Description System.Single simulateReleasesForXSecondsAroundRelease Declaration public float simulateReleasesForXSecondsAroundRelease Field Value Type Description System.Single Methods GetColliders() Declaration public Collider[] GetColliders() Returns Type Description UnityEngine.Collider [] HandAttachedUpdate(Hand) Declaration protected virtual void HandAttachedUpdate(Hand hand) Parameters Type Name Description Hand hand IgnoreObject(InteractableDebug) Declaration public void IgnoreObject(InteractableDebug otherInteractable) Parameters Type Name Description InteractableDebug otherInteractable SetIsSimulation() Declaration public void SetIsSimulation()"
  },
  "api/Valve.VR.EVRSkeletalTransformSpace.html": {
    "href": "api/Valve.VR.EVRSkeletalTransformSpace.html",
    "title": "Enum EVRSkeletalTransformSpace | SteamVR Unity Plugin",
    "keywords": "Enum EVRSkeletalTransformSpace Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSkeletalTransformSpace Fields Name Description Model Parent"
  },
  "api/Valve.VR.EVRSkeletalTrackingLevel.html": {
    "href": "api/Valve.VR.EVRSkeletalTrackingLevel.html",
    "title": "Enum EVRSkeletalTrackingLevel | SteamVR Unity Plugin",
    "keywords": "Enum EVRSkeletalTrackingLevel Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSkeletalTrackingLevel Fields Name Description Count Max VRSkeletalTracking_Estimated VRSkeletalTracking_Full VRSkeletalTracking_Partial"
  },
  "api/Valve.VR.EVRMuraCorrectionMode.html": {
    "href": "api/Valve.VR.EVRMuraCorrectionMode.html",
    "title": "Enum EVRMuraCorrectionMode | SteamVR Unity Plugin",
    "keywords": "Enum EVRMuraCorrectionMode Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRMuraCorrectionMode Fields Name Description Default NoCorrection"
  },
  "api/Valve.VR.EVRMouseButton.html": {
    "href": "api/Valve.VR.EVRMouseButton.html",
    "title": "Enum EVRMouseButton | SteamVR Unity Plugin",
    "keywords": "Enum EVRMouseButton Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRMouseButton Fields Name Description Left Middle Right"
  },
  "api/Valve.VR.CVRApplications.html": {
    "href": "api/Valve.VR.CVRApplications.html",
    "title": "Class CVRApplications | SteamVR Unity Plugin",
    "keywords": "Class CVRApplications Inheritance System.Object CVRApplications Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRApplications Methods AddApplicationManifest(String, Boolean) Declaration public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary) Parameters Type Name Description System.String pchApplicationManifestFullPath System.Boolean bTemporary Returns Type Description EVRApplicationError CancelApplicationLaunch(String) Declaration public bool CancelApplicationLaunch(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description System.Boolean GetApplicationAutoLaunch(String) Declaration public bool GetApplicationAutoLaunch(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description System.Boolean GetApplicationCount() Declaration public uint GetApplicationCount() Returns Type Description System.UInt32 GetApplicationKeyByIndex(UInt32, StringBuilder, UInt32) Declaration public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen) Parameters Type Name Description System.UInt32 unApplicationIndex System.Text.StringBuilder pchAppKeyBuffer System.UInt32 unAppKeyBufferLen Returns Type Description EVRApplicationError GetApplicationKeyByProcessId(UInt32, StringBuilder, UInt32) Declaration public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen) Parameters Type Name Description System.UInt32 unProcessId System.Text.StringBuilder pchAppKeyBuffer System.UInt32 unAppKeyBufferLen Returns Type Description EVRApplicationError GetApplicationLaunchArguments(UInt32, StringBuilder, UInt32) Declaration public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs) Parameters Type Name Description System.UInt32 unHandle System.Text.StringBuilder pchArgs System.UInt32 unArgs Returns Type Description System.UInt32 GetApplicationProcessId(String) Declaration public uint GetApplicationProcessId(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description System.UInt32 GetApplicationPropertyBool(String, EVRApplicationProperty, ref EVRApplicationError) Declaration public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError) Parameters Type Name Description System.String pchAppKey EVRApplicationProperty eProperty EVRApplicationError peError Returns Type Description System.Boolean GetApplicationPropertyString(String, EVRApplicationProperty, StringBuilder, UInt32, ref EVRApplicationError) Declaration public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError) Parameters Type Name Description System.String pchAppKey EVRApplicationProperty eProperty System.Text.StringBuilder pchPropertyValueBuffer System.UInt32 unPropertyValueBufferLen EVRApplicationError peError Returns Type Description System.UInt32 GetApplicationPropertyUint64(String, EVRApplicationProperty, ref EVRApplicationError) Declaration public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError) Parameters Type Name Description System.String pchAppKey EVRApplicationProperty eProperty EVRApplicationError peError Returns Type Description System.UInt64 GetApplicationsErrorNameFromEnum(EVRApplicationError) Declaration public string GetApplicationsErrorNameFromEnum(EVRApplicationError error) Parameters Type Name Description EVRApplicationError error Returns Type Description System.String GetApplicationsThatSupportMimeType(String, StringBuilder, UInt32) Declaration public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer) Parameters Type Name Description System.String pchMimeType System.Text.StringBuilder pchAppKeysThatSupportBuffer System.UInt32 unAppKeysThatSupportBuffer Returns Type Description System.UInt32 GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState) Declaration public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state) Parameters Type Name Description EVRApplicationTransitionState state Returns Type Description System.String GetApplicationSupportedMimeTypes(String, StringBuilder, UInt32) Declaration public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer) Parameters Type Name Description System.String pchAppKey System.Text.StringBuilder pchMimeTypesBuffer System.UInt32 unMimeTypesBuffer Returns Type Description System.Boolean GetCurrentSceneProcessId() Declaration public uint GetCurrentSceneProcessId() Returns Type Description System.UInt32 GetDefaultApplicationForMimeType(String, StringBuilder, UInt32) Declaration public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen) Parameters Type Name Description System.String pchMimeType System.Text.StringBuilder pchAppKeyBuffer System.UInt32 unAppKeyBufferLen Returns Type Description System.Boolean GetStartingApplication(StringBuilder, UInt32) Declaration public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen) Parameters Type Name Description System.Text.StringBuilder pchAppKeyBuffer System.UInt32 unAppKeyBufferLen Returns Type Description EVRApplicationError GetTransitionState() Declaration public EVRApplicationTransitionState GetTransitionState() Returns Type Description EVRApplicationTransitionState IdentifyApplication(UInt32, String) Declaration public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey) Parameters Type Name Description System.UInt32 unProcessId System.String pchAppKey Returns Type Description EVRApplicationError IsApplicationInstalled(String) Declaration public bool IsApplicationInstalled(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description System.Boolean IsQuitUserPromptRequested() Declaration public bool IsQuitUserPromptRequested() Returns Type Description System.Boolean LaunchApplication(String) Declaration public EVRApplicationError LaunchApplication(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description EVRApplicationError LaunchApplicationFromMimeType(String, String) Declaration public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs) Parameters Type Name Description System.String pchMimeType System.String pchArgs Returns Type Description EVRApplicationError LaunchDashboardOverlay(String) Declaration public EVRApplicationError LaunchDashboardOverlay(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description EVRApplicationError LaunchInternalProcess(String, String, String) Declaration public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory) Parameters Type Name Description System.String pchBinaryPath System.String pchArguments System.String pchWorkingDirectory Returns Type Description EVRApplicationError LaunchTemplateApplication(String, String, AppOverrideKeys_t[]) Declaration public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys) Parameters Type Name Description System.String pchTemplateAppKey System.String pchNewAppKey AppOverrideKeys_t [] pKeys Returns Type Description EVRApplicationError PerformApplicationPrelaunchCheck(String) Declaration public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey) Parameters Type Name Description System.String pchAppKey Returns Type Description EVRApplicationError RemoveApplicationManifest(String) Declaration public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath) Parameters Type Name Description System.String pchApplicationManifestFullPath Returns Type Description EVRApplicationError SetApplicationAutoLaunch(String, Boolean) Declaration public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch) Parameters Type Name Description System.String pchAppKey System.Boolean bAutoLaunch Returns Type Description EVRApplicationError SetDefaultApplicationForMimeType(String, String) Declaration public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType) Parameters Type Name Description System.String pchAppKey System.String pchMimeType Returns Type Description EVRApplicationError"
  },
  "api/Valve.VR.VRTextureWithPose_t.html": {
    "href": "api/Valve.VR.VRTextureWithPose_t.html",
    "title": "Struct VRTextureWithPose_t | SteamVR Unity Plugin",
    "keywords": "Struct VRTextureWithPose_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRTextureWithPose_t Fields mDeviceToAbsoluteTracking Declaration public HmdMatrix34_t mDeviceToAbsoluteTracking Field Value Type Description HmdMatrix34_t"
  },
  "api/Valve.VR.InteractionSystem.SpawnAndAttachToHand.html": {
    "href": "api/Valve.VR.InteractionSystem.SpawnAndAttachToHand.html",
    "title": "Class SpawnAndAttachToHand | SteamVR Unity Plugin",
    "keywords": "Class SpawnAndAttachToHand Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SpawnAndAttachToHand Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class SpawnAndAttachToHand : MonoBehaviour Fields hand Declaration public Hand hand Field Value Type Description Hand prefab Declaration public GameObject prefab Field Value Type Description UnityEngine.GameObject Methods SpawnAndAttach(Hand) Declaration public void SpawnAndAttach(Hand passedInhand) Parameters Type Name Description Hand passedInhand"
  },
  "api/Valve.VR.InteractionSystem.LinearBlendshape.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearBlendshape.html",
    "title": "Class LinearBlendshape | SteamVR Unity Plugin",
    "keywords": "Class LinearBlendshape Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearBlendshape Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearBlendshape : MonoBehaviour Fields linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping skinnedMesh Declaration public SkinnedMeshRenderer skinnedMesh Field Value Type Description UnityEngine.SkinnedMeshRenderer"
  },
  "api/Valve.VR.SteamVR_ExternalCamera.html": {
    "href": "api/Valve.VR.SteamVR_ExternalCamera.html",
    "title": "Class SteamVR_ExternalCamera | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_ExternalCamera Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_ExternalCamera Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_ExternalCamera : MonoBehaviour Fields activatedActionSet Declaration protected SteamVR_ActionSet activatedActionSet Field Value Type Description SteamVR_ActionSet activatedInputSource Declaration protected SteamVR_Input_Sources activatedInputSource Field Value Type Description SteamVR_Input_Sources autoEnableDisableActionSet Declaration [Tooltip(\"This will automatically activate the action set the specified pose belongs to. And deactivate it when this component is disabled.\")] public bool autoEnableDisableActionSet Field Value Type Description System.Boolean config Declaration public SteamVR_ExternalCamera.Config config Field Value Type Description SteamVR_ExternalCamera.Config configPath Declaration public string configPath Field Value Type Description System.String Methods AttachToCamera(SteamVR_Camera) Declaration public void AttachToCamera(SteamVR_Camera steamVR_Camera) Parameters Type Name Description SteamVR_Camera steamVR_Camera GetTargetDistance() Declaration public float GetTargetDistance() Returns Type Description System.Single ReadConfig() Declaration public void ReadConfig() RenderFar() Declaration public void RenderFar() RenderNear() Declaration public void RenderNear()"
  },
  "api/Valve.VR.SteamVR_ExternalCamera.Config.html": {
    "href": "api/Valve.VR.SteamVR_ExternalCamera.Config.html",
    "title": "Struct SteamVR_ExternalCamera.Config | SteamVR Unity Plugin",
    "keywords": "Struct SteamVR_ExternalCamera.Config Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public struct Config Fields a Declaration public float a Field Value Type Description System.Single b Declaration public float b Field Value Type Description System.Single disableStandardAssets Declaration public bool disableStandardAssets Field Value Type Description System.Boolean far Declaration public float far Field Value Type Description System.Single farOffset Declaration public float farOffset Field Value Type Description System.Single fov Declaration public float fov Field Value Type Description System.Single frameSkip Declaration public float frameSkip Field Value Type Description System.Single g Declaration public float g Field Value Type Description System.Single hmdOffset Declaration public float hmdOffset Field Value Type Description System.Single near Declaration public float near Field Value Type Description System.Single nearOffset Declaration public float nearOffset Field Value Type Description System.Single r Declaration public float r Field Value Type Description System.Single rx Declaration public float rx Field Value Type Description System.Single ry Declaration public float ry Field Value Type Description System.Single rz Declaration public float rz Field Value Type Description System.Single sceneResolutionScale Declaration public float sceneResolutionScale Field Value Type Description System.Single x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single z Declaration public float z Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.Interactable.html": {
    "href": "api/Valve.VR.InteractionSystem.Interactable.html",
    "title": "Class Interactable | SteamVR Unity Plugin",
    "keywords": "Class Interactable Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Interactable Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Interactable : MonoBehaviour Fields activateActionSetOnAttach Declaration [Tooltip(\"Activates an action set on attach and deactivates on detach\")] public SteamVR_ActionSet activateActionSetOnAttach Field Value Type Description SteamVR_ActionSet attachEaseIn Declaration public bool attachEaseIn Field Value Type Description System.Boolean attachedToHand Declaration [NonSerialized] public Hand attachedToHand Field Value Type Description Hand blendToPoseTime Declaration protected float blendToPoseTime Field Value Type Description System.Single existingRenderers Declaration protected MeshRenderer[] existingRenderers Field Value Type Description UnityEngine.MeshRenderer [] existingSkinnedRenderers Declaration protected SkinnedMeshRenderer[] existingSkinnedRenderers Field Value Type Description UnityEngine.SkinnedMeshRenderer [] handAnimationOnPickup Declaration [Tooltip(\"The integer in the animator to trigger on pickup. 0 for none\")] public int handAnimationOnPickup Field Value Type Description System.Int32 handFollowTransform Declaration [Tooltip(\"Should the rendered hand lock on to and follow the object\")] public bool handFollowTransform Field Value Type Description System.Boolean hideControllerOnAttach Declaration [Tooltip(\"Hide the controller part of the hand on attachment and show on detach\")] public bool hideControllerOnAttach Field Value Type Description System.Boolean hideHandOnAttach Declaration [Tooltip(\"Hide the whole hand on attachment and show on detach\")] public bool hideHandOnAttach Field Value Type Description System.Boolean hideHighlight Declaration [Tooltip(\"An array of child gameObjects to not render a highlight for. Things like transparent parts, vfx, etc.\")] public GameObject[] hideHighlight Field Value Type Description UnityEngine.GameObject [] hideSkeletonOnAttach Declaration [Tooltip(\"Hide the skeleton part of the hand on attachment and show on detach\")] public bool hideSkeletonOnAttach Field Value Type Description System.Boolean highlightHolder Declaration protected GameObject highlightHolder Field Value Type Description UnityEngine.GameObject highlightMat Declaration protected static Material highlightMat Field Value Type Description UnityEngine.Material highlightOnHover Declaration [Tooltip(\"Set whether or not you want this interactible to highlight when hovering over it\")] public bool highlightOnHover Field Value Type Description System.Boolean highlightRenderers Declaration protected MeshRenderer[] highlightRenderers Field Value Type Description UnityEngine.MeshRenderer [] highlightSkinnedRenderers Declaration protected SkinnedMeshRenderer[] highlightSkinnedRenderers Field Value Type Description UnityEngine.SkinnedMeshRenderer [] hoveringHand Declaration [NonSerialized] public Hand hoveringHand Field Value Type Description Hand releasePoseBlendTime Declaration protected float releasePoseBlendTime Field Value Type Description System.Single setRangeOfMotionOnPickup Declaration [Tooltip(\"The range of motion to set on the skeleton. None for no change.\")] public SkeletalMotionRangeChange setRangeOfMotionOnPickup Field Value Type Description SkeletalMotionRangeChange skeletonPoser Declaration [HideInInspector] public SteamVR_Skeleton_Poser skeletonPoser Field Value Type Description SteamVR_Skeleton_Poser snapAttachEaseInCompleted Declaration public bool snapAttachEaseInCompleted Field Value Type Description System.Boolean snapAttachEaseInCurve Declaration [HideInInspector] public AnimationCurve snapAttachEaseInCurve Field Value Type Description UnityEngine.AnimationCurve snapAttachEaseInTime Declaration public float snapAttachEaseInTime Field Value Type Description System.Single useHandObjectAttachmentPoint Declaration [Tooltip(\"Specify whether you want to snap to the hand's object attachment point, or just the raw hand\")] public bool useHandObjectAttachmentPoint Field Value Type Description System.Boolean Properties isDestroying Declaration public bool isDestroying { get; protected set; } Property Value Type Description System.Boolean isHovering Declaration public bool isHovering { get; protected set; } Property Value Type Description System.Boolean wasHovering Declaration public bool wasHovering { get; protected set; } Property Value Type Description System.Boolean Methods CreateHighlightRenderers() Declaration protected virtual void CreateHighlightRenderers() OnAttachedToHand(Hand) Declaration protected virtual void OnAttachedToHand(Hand hand) Parameters Type Name Description Hand hand OnDestroy() Declaration protected virtual void OnDestroy() OnDetachedFromHand(Hand) Declaration protected virtual void OnDetachedFromHand(Hand hand) Parameters Type Name Description Hand hand OnDisable() Declaration protected virtual void OnDisable() OnHandHoverBegin(Hand) Called when a Hand starts hovering over this object Declaration protected virtual void OnHandHoverBegin(Hand hand) Parameters Type Name Description Hand hand ShouldIgnore(GameObject) Declaration protected virtual bool ShouldIgnore(GameObject check) Parameters Type Name Description UnityEngine.GameObject check Returns Type Description System.Boolean ShouldIgnoreHighlight(Component) Declaration protected virtual bool ShouldIgnoreHighlight(Component component) Parameters Type Name Description UnityEngine.Component component Returns Type Description System.Boolean Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update() UpdateHighlightRenderers() Declaration protected virtual void UpdateHighlightRenderers() Events onAttachedToHand Declaration public event Interactable.OnAttachedToHandDelegate onAttachedToHand Event Type Type Description Interactable.OnAttachedToHandDelegate onDetachedFromHand Declaration public event Interactable.OnDetachedFromHandDelegate onDetachedFromHand Event Type Type Description Interactable.OnDetachedFromHandDelegate"
  },
  "api/Valve.VR.InteractionSystem.Balloon.BalloonColor.html": {
    "href": "api/Valve.VR.InteractionSystem.Balloon.BalloonColor.html",
    "title": "Enum Balloon.BalloonColor | SteamVR Unity Plugin",
    "keywords": "Enum Balloon.BalloonColor Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum BalloonColor Fields Name Description Blue BlueGreen DarkGray Green GreenYellow LightGray Orange OrangeRed Random Red RedViolet Violet VioletBlue Yellow YellowOrange"
  },
  "api/Valve.VR.COpenVRContext.html": {
    "href": "api/Valve.VR.COpenVRContext.html",
    "title": "Struct COpenVRContext | SteamVR Unity Plugin",
    "keywords": "Struct COpenVRContext Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct COpenVRContext Fields m_pVRApplications Declaration public IntPtr m_pVRApplications Field Value Type Description System.IntPtr m_pVRChaperone Declaration public IntPtr m_pVRChaperone Field Value Type Description System.IntPtr m_pVRChaperoneSetup Declaration public IntPtr m_pVRChaperoneSetup Field Value Type Description System.IntPtr m_pVRCompositor Declaration public IntPtr m_pVRCompositor Field Value Type Description System.IntPtr m_pVRDriverManager Declaration public IntPtr m_pVRDriverManager Field Value Type Description System.IntPtr m_pVRExtendedDisplay Declaration public IntPtr m_pVRExtendedDisplay Field Value Type Description System.IntPtr m_pVRInput Declaration public IntPtr m_pVRInput Field Value Type Description System.IntPtr m_pVRIOBuffer Declaration public IntPtr m_pVRIOBuffer Field Value Type Description System.IntPtr m_pVROverlay Declaration public IntPtr m_pVROverlay Field Value Type Description System.IntPtr m_pVRRenderModels Declaration public IntPtr m_pVRRenderModels Field Value Type Description System.IntPtr m_pVRResources Declaration public IntPtr m_pVRResources Field Value Type Description System.IntPtr m_pVRScreenshots Declaration public IntPtr m_pVRScreenshots Field Value Type Description System.IntPtr m_pVRSettings Declaration public IntPtr m_pVRSettings Field Value Type Description System.IntPtr m_pVRSpatialAnchors Declaration public IntPtr m_pVRSpatialAnchors Field Value Type Description System.IntPtr m_pVRSystem Declaration public IntPtr m_pVRSystem Field Value Type Description System.IntPtr m_pVRTrackedCamera Declaration public IntPtr m_pVRTrackedCamera Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.InteractionSystem.LinearDrive.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearDrive.html",
    "title": "Class LinearDrive | SteamVR Unity Plugin",
    "keywords": "Class LinearDrive Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearDrive Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class LinearDrive : MonoBehaviour Fields attachmentFlags Declaration protected Hand.AttachmentFlags attachmentFlags Field Value Type Description Hand.AttachmentFlags endPosition Declaration public Transform endPosition Field Value Type Description UnityEngine.Transform initialMappingOffset Declaration protected float initialMappingOffset Field Value Type Description System.Single interactable Declaration protected Interactable interactable Field Value Type Description Interactable linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping maintainMomemntum Declaration public bool maintainMomemntum Field Value Type Description System.Boolean mappingChangeRate Declaration protected float mappingChangeRate Field Value Type Description System.Single mappingChangeSamples Declaration protected float[] mappingChangeSamples Field Value Type Description System.Single [] momemtumDampenRate Declaration public float momemtumDampenRate Field Value Type Description System.Single numMappingChangeSamples Declaration protected int numMappingChangeSamples Field Value Type Description System.Int32 prevMapping Declaration protected float prevMapping Field Value Type Description System.Single repositionGameObject Declaration public bool repositionGameObject Field Value Type Description System.Boolean sampleCount Declaration protected int sampleCount Field Value Type Description System.Int32 startPosition Declaration public Transform startPosition Field Value Type Description UnityEngine.Transform Methods Awake() Declaration protected virtual void Awake() CalculateLinearMapping(Transform) Declaration protected float CalculateLinearMapping(Transform updateTransform) Parameters Type Name Description UnityEngine.Transform updateTransform Returns Type Description System.Single CalculateMappingChangeRate() Declaration protected void CalculateMappingChangeRate() HandAttachedUpdate(Hand) Declaration protected virtual void HandAttachedUpdate(Hand hand) Parameters Type Name Description Hand hand HandHoverUpdate(Hand) Declaration protected virtual void HandHoverUpdate(Hand hand) Parameters Type Name Description Hand hand OnDetachedFromHand(Hand) Declaration protected virtual void OnDetachedFromHand(Hand hand) Parameters Type Name Description Hand hand Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update() UpdateLinearMapping(Transform) Declaration protected void UpdateLinearMapping(Transform updateTransform) Parameters Type Name Description UnityEngine.Transform updateTransform"
  },
  "api/Valve.VR.InteractionSystem.LinearDisplacement.html": {
    "href": "api/Valve.VR.InteractionSystem.LinearDisplacement.html",
    "title": "Class LinearDisplacement | SteamVR Unity Plugin",
    "keywords": "Class LinearDisplacement Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LinearDisplacement Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class LinearDisplacement : MonoBehaviour Fields displacement Declaration public Vector3 displacement Field Value Type Description UnityEngine.Vector3 linearMapping Declaration public LinearMapping linearMapping Field Value Type Description LinearMapping"
  },
  "api/Valve.VR.InteractionSystem.Interactable.OnAttachedToHandDelegate.html": {
    "href": "api/Valve.VR.InteractionSystem.Interactable.OnAttachedToHandDelegate.html",
    "title": "Delegate Interactable.OnAttachedToHandDelegate | SteamVR Unity Plugin",
    "keywords": "Delegate Interactable.OnAttachedToHandDelegate Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public delegate void OnAttachedToHandDelegate(Hand hand); Parameters Type Name Description Hand hand"
  },
  "api/Valve.VR.InteractionSystem.InputModule.html": {
    "href": "api/Valve.VR.InteractionSystem.InputModule.html",
    "title": "Class InputModule | SteamVR Unity Plugin",
    "keywords": "Class InputModule Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UnityEngine.EventSystems.UIBehaviour UnityEngine.EventSystems.BaseInputModule InputModule Inherited Members UnityEngine.EventSystems.BaseInputModule.m_RaycastResultCache UnityEngine.EventSystems.BaseInputModule.OnEnable() UnityEngine.EventSystems.BaseInputModule.OnDisable() UnityEngine.EventSystems.BaseInputModule.FindFirstRaycast(System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult>) UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection(System.Single, System.Single) UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection(System.Single, System.Single, System.Single) UnityEngine.EventSystems.BaseInputModule.FindCommonRoot(UnityEngine.GameObject, UnityEngine.GameObject) UnityEngine.EventSystems.BaseInputModule.HandlePointerExitAndEnter(UnityEngine.EventSystems.PointerEventData, UnityEngine.GameObject) UnityEngine.EventSystems.BaseInputModule.GetAxisEventData(System.Single, System.Single, System.Single) UnityEngine.EventSystems.BaseInputModule.GetBaseEventData() UnityEngine.EventSystems.BaseInputModule.IsPointerOverGameObject(System.Int32) UnityEngine.EventSystems.BaseInputModule.DeactivateModule() UnityEngine.EventSystems.BaseInputModule.ActivateModule() UnityEngine.EventSystems.BaseInputModule.UpdateModule() UnityEngine.EventSystems.BaseInputModule.IsModuleSupported() UnityEngine.EventSystems.BaseInputModule.eventSystem UnityEngine.EventSystems.UIBehaviour.Awake() UnityEngine.EventSystems.UIBehaviour.Start() UnityEngine.EventSystems.UIBehaviour.OnDestroy() UnityEngine.EventSystems.UIBehaviour.IsActive() UnityEngine.EventSystems.UIBehaviour.OnValidate() UnityEngine.EventSystems.UIBehaviour.Reset() UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange() UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged() UnityEngine.EventSystems.UIBehaviour.OnTransformParentChanged() UnityEngine.EventSystems.UIBehaviour.OnDidApplyAnimationProperties() UnityEngine.EventSystems.UIBehaviour.OnCanvasGroupChanged() UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged() UnityEngine.EventSystems.UIBehaviour.IsDestroyed() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class InputModule : BaseInputModule Properties instance Declaration public static InputModule instance { get; } Property Value Type Description InputModule Methods HoverBegin(GameObject) Declaration public void HoverBegin(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject HoverEnd(GameObject) Declaration public void HoverEnd(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject Process() Declaration public override void Process() Overrides UnityEngine.EventSystems.BaseInputModule.Process() ShouldActivateModule() Declaration public override bool ShouldActivateModule() Returns Type Description System.Boolean Overrides UnityEngine.EventSystems.BaseInputModule.ShouldActivateModule() Submit(GameObject) Declaration public void Submit(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject"
  },
  "api/Valve.VR.InteractionSystem.Equippable.html": {
    "href": "api/Valve.VR.InteractionSystem.Equippable.html",
    "title": "Class Equippable | SteamVR Unity Plugin",
    "keywords": "Class Equippable Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Equippable Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Throwable))] public class Equippable : MonoBehaviour Fields antiFlip Declaration [Tooltip(\"Array of children you do not want to be mirrored. Text, logos, etc.\")] public Transform[] antiFlip Field Value Type Description UnityEngine.Transform [] defaultHand Declaration public WhichHand defaultHand Field Value Type Description WhichHand Properties attachedHandType Declaration [HideInInspector] public SteamVR_Input_Sources attachedHandType { get; } Property Value Type Description SteamVR_Input_Sources"
  },
  "api/Valve.VR.InteractionSystem.EnumFlagsPropertyDrawer.html": {
    "href": "api/Valve.VR.InteractionSystem.EnumFlagsPropertyDrawer.html",
    "title": "Class EnumFlagsPropertyDrawer | SteamVR Unity Plugin",
    "keywords": "Class EnumFlagsPropertyDrawer Inheritance System.Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer EnumFlagsPropertyDrawer Inherited Members UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) UnityEditor.PropertyDrawer.attribute UnityEditor.PropertyDrawer.fieldInfo System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [CustomPropertyDrawer(typeof(EnumFlags))] public class EnumFlagsPropertyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Valve.VR.InteractionSystem.CircularDrive.html": {
    "href": "api/Valve.VR.InteractionSystem.CircularDrive.html",
    "title": "Class CircularDrive | SteamVR Unity Plugin",
    "keywords": "Class CircularDrive Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour CircularDrive Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(Interactable))] public class CircularDrive : MonoBehaviour Fields axisOfRotation Declaration [Tooltip(\"The axis around which the circular drive will rotate in local space\")] public CircularDrive.Axis_t axisOfRotation Field Value Type Description CircularDrive.Axis_t childCollider Declaration [Tooltip(\"Child GameObject which has the Collider component to initiate interaction, only needs to be set if there is more than one Collider child\")] public Collider childCollider Field Value Type Description UnityEngine.Collider dbgPathLimit Declaration [Tooltip(\"If debugPath is true, this is the maximum number of GameObjects to create to draw the path\")] public int dbgPathLimit Field Value Type Description System.Int32 debugPath Declaration [Tooltip(\"If true, the path of the Hand (red) and the projected value (green) will be drawn\")] public bool debugPath Field Value Type Description System.Boolean debugText Declaration [Tooltip(\"If not null, the TextMesh will display the linear value and the angular value of this circular drive\")] public TextMesh debugText Field Value Type Description UnityEngine.TextMesh forceStart Declaration [Tooltip(\"If limited is true, this forces the starting angle to be startAngle, clamped to [minAngle, maxAngle]\")] public bool forceStart Field Value Type Description System.Boolean freezeOnMax Declaration [Tooltip(\"If limited, set whether drive will freeze its angle when the max angle is reached\")] public bool freezeOnMax Field Value Type Description System.Boolean freezeOnMin Declaration [Tooltip(\"If limited, set whether drive will freeze its angle when the min angle is reached\")] public bool freezeOnMin Field Value Type Description System.Boolean frozenDistanceMinMaxThreshold Declaration public Vector2 frozenDistanceMinMaxThreshold Field Value Type Description UnityEngine.Vector2 hoverLock Declaration [Tooltip(\"If true, the drive will stay manipulating as long as the button is held down, if false, it will stop if the controller moves out of the collider\")] public bool hoverLock Field Value Type Description System.Boolean limited Declaration [Header(\"Limited Rotation\")] [Tooltip(\"If true, the rotation will be limited to [minAngle, maxAngle], if false, the rotation is unlimited\")] public bool limited Field Value Type Description System.Boolean linearMapping Declaration [Tooltip(\"A LinearMapping component to drive, if not specified one will be dynamically added to this GameObject\")] public LinearMapping linearMapping Field Value Type Description LinearMapping maxAngle Declaration [Header(\"Limited Rotation Max\")] [Tooltip(\"If limited is true, the specifies the upper limit, otherwise value is unused\")] public float maxAngle Field Value Type Description System.Single minAngle Declaration [Header(\"Limited Rotation Min\")] [Tooltip(\"If limited is true, the specifies the lower limit, otherwise value is unused\")] public float minAngle Field Value Type Description System.Single onFrozenDistanceThreshold Declaration public UnityEvent onFrozenDistanceThreshold Field Value Type Description UnityEngine.Events.UnityEvent onMaxAngle Declaration [Tooltip(\"If limited, event invoked when maxAngle is reached\")] public UnityEvent onMaxAngle Field Value Type Description UnityEngine.Events.UnityEvent onMinAngle Declaration [Tooltip(\"If limited, event invoked when minAngle is reached\")] public UnityEvent onMinAngle Field Value Type Description UnityEngine.Events.UnityEvent outAngle Declaration [Tooltip(\"The output angle value of the drive in degrees, unlimited will increase or decrease without bound, take the 360 modulus to find number of rotations\")] public float outAngle Field Value Type Description System.Single rotateGameObject Declaration [Tooltip(\"If true, the transform of the GameObject this component is on will be rotated accordingly\")] public bool rotateGameObject Field Value Type Description System.Boolean startAngle Declaration [Tooltip(\"If limited is true and forceStart is true, the starting angle will be this, clamped to [minAngle, maxAngle]\")] public float startAngle Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.CircularDrive.Axis_t.html": {
    "href": "api/Valve.VR.InteractionSystem.CircularDrive.Axis_t.html",
    "title": "Enum CircularDrive.Axis_t | SteamVR Unity Plugin",
    "keywords": "Enum CircularDrive.Axis_t Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum Axis_t Fields Name Description XAxis YAxis ZAxis"
  },
  "api/Valve.VR.InteractionSystem.ArrowHand.html": {
    "href": "api/Valve.VR.InteractionSystem.ArrowHand.html",
    "title": "Class ArrowHand | SteamVR Unity Plugin",
    "keywords": "Class ArrowHand Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ArrowHand Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ArrowHand : MonoBehaviour Fields arrowNockTransform Declaration public Transform arrowNockTransform Field Value Type Description UnityEngine.Transform arrowPrefab Declaration public GameObject arrowPrefab Field Value Type Description UnityEngine.GameObject arrowSpawnSound Declaration public SoundPlayOneshot arrowSpawnSound Field Value Type Description SoundPlayOneshot lerpCompleteDistance Declaration public float lerpCompleteDistance Field Value Type Description System.Single maxArrowCount Declaration public int maxArrowCount Field Value Type Description System.Int32 nockDistance Declaration public float nockDistance Field Value Type Description System.Single positionLerpThreshold Declaration public float positionLerpThreshold Field Value Type Description System.Single rotationLerpThreshold Declaration public float rotationLerpThreshold Field Value Type Description System.Single"
  },
  "api/Valve.VR.InteractionSystem.Arrow.html": {
    "href": "api/Valve.VR.InteractionSystem.Arrow.html",
    "title": "Class Arrow | SteamVR Unity Plugin",
    "keywords": "Class Arrow Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Arrow Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Arrow : MonoBehaviour Fields airReleaseSound Declaration public SoundPlayOneshot airReleaseSound Field Value Type Description SoundPlayOneshot arrowHeadRB Declaration public Rigidbody arrowHeadRB Field Value Type Description UnityEngine.Rigidbody fireReleaseSound Declaration public SoundPlayOneshot fireReleaseSound Field Value Type Description SoundPlayOneshot glintParticle Declaration public ParticleSystem glintParticle Field Value Type Description UnityEngine.ParticleSystem hitGroundSound Declaration public PlaySound hitGroundSound Field Value Type Description PlaySound hitTargetSound Declaration public SoundPlayOneshot hitTargetSound Field Value Type Description SoundPlayOneshot shaftRB Declaration public Rigidbody shaftRB Field Value Type Description UnityEngine.Rigidbody targetPhysMaterial Declaration public PhysicMaterial targetPhysMaterial Field Value Type Description UnityEngine.PhysicMaterial Methods ArrowReleased(Single) Declaration public void ArrowReleased(float inputVelocity) Parameters Type Name Description System.Single inputVelocity SetCollisionMode(CollisionDetectionMode, Boolean) Declaration protected void SetCollisionMode(CollisionDetectionMode newMode, bool force = false) Parameters Type Name Description UnityEngine.CollisionDetectionMode newMode System.Boolean force"
  },
  "api/Valve.VR.HmdRect2_t.html": {
    "href": "api/Valve.VR.HmdRect2_t.html",
    "title": "Struct HmdRect2_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdRect2_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdRect2_t Fields vBottomRight Declaration public HmdVector2_t vBottomRight Field Value Type Description HmdVector2_t vTopLeft Declaration public HmdVector2_t vTopLeft Field Value Type Description HmdVector2_t"
  },
  "api/Valve.VR.HmdQuaternion_t.html": {
    "href": "api/Valve.VR.HmdQuaternion_t.html",
    "title": "Struct HmdQuaternion_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdQuaternion_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdQuaternion_t Fields w Declaration public double w Field Value Type Description System.Double x Declaration public double x Field Value Type Description System.Double y Declaration public double y Field Value Type Description System.Double z Declaration public double z Field Value Type Description System.Double"
  },
  "api/Valve.VR.EVRState.html": {
    "href": "api/Valve.VR.EVRState.html",
    "title": "Enum EVRState | SteamVR Unity Plugin",
    "keywords": "Enum EVRState Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRState Fields Name Description NotReady Off Ready Ready_Alert Ready_Alert_Low Searching Searching_Alert Standby Undefined"
  },
  "api/Valve.VR.EVRSpatialAnchorError.html": {
    "href": "api/Valve.VR.EVRSpatialAnchorError.html",
    "title": "Enum EVRSpatialAnchorError | SteamVR Unity Plugin",
    "keywords": "Enum EVRSpatialAnchorError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRSpatialAnchorError Fields Name Description ArrayTooSmall DescriptorTooLong Internal InvalidArgument InvalidDescriptorChar NoRoomCalibration NotAvailableInThisUniverse NotYetAvailable PermanentlyUnavailable Success Unknown UnknownDriver UnknownHandle WrongDriver"
  },
  "api/Valve.VR.EVRNotificationStyle.html": {
    "href": "api/Valve.VR.EVRNotificationStyle.html",
    "title": "Enum EVRNotificationStyle | SteamVR Unity Plugin",
    "keywords": "Enum EVRNotificationStyle Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRNotificationStyle Fields Name Description Application Contact_Active Contact_Disabled Contact_Enabled None"
  },
  "api/Valve.VR.EVRNotificationError.html": {
    "href": "api/Valve.VR.EVRNotificationError.html",
    "title": "Enum EVRNotificationError | SteamVR Unity Plugin",
    "keywords": "Enum EVRNotificationError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRNotificationError Fields Name Description InvalidNotificationId InvalidOverlayHandle NotificationQueueFull OK SystemWithUserValueAlreadyExists"
  },
  "api/Valve.VR.InteractionSystem.ItemPackage.html": {
    "href": "api/Valve.VR.InteractionSystem.ItemPackage.html",
    "title": "Class ItemPackage | SteamVR Unity Plugin",
    "keywords": "Class ItemPackage Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ItemPackage Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class ItemPackage : MonoBehaviour Fields fadedPreviewPrefab Declaration public GameObject fadedPreviewPrefab Field Value Type Description UnityEngine.GameObject itemPrefab Declaration public GameObject itemPrefab Field Value Type Description UnityEngine.GameObject name Declaration public string name Field Value Type Description System.String otherHandItemPrefab Declaration public GameObject otherHandItemPrefab Field Value Type Description UnityEngine.GameObject packageType Declaration public ItemPackage.ItemPackageType packageType Field Value Type Description ItemPackage.ItemPackageType previewPrefab Declaration public GameObject previewPrefab Field Value Type Description UnityEngine.GameObject"
  },
  "api/Valve.VR.InteractionSystem.ItemPackage.ItemPackageType.html": {
    "href": "api/Valve.VR.InteractionSystem.ItemPackage.ItemPackageType.html",
    "title": "Enum ItemPackage.ItemPackageType | SteamVR Unity Plugin",
    "keywords": "Enum ItemPackage.ItemPackageType Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public enum ItemPackageType Fields Name Description OneHanded TwoHanded Unrestricted"
  },
  "articles/Render-Models.html": {
    "href": "articles/Render-Models.html",
    "title": "Render Models | SteamVR Unity Plugin",
    "keywords": "Render Models Since your whole field of vision is covered when immersed in Virtual Reality it's helpful to have virtual representations of the controllers you're holding. SteamVR provides an easy way to get not just a general controller model but models with individually actuating components. So when you pull the trigger on your controller in real life you can see it pull in the virtual world as well. This helps with usability as well as strongly encourages the feeling of presence. The Component Both the Interaction System and the Simple Sample scenes have rigs that use render models. In the Simple Sample scene look in the [Camera Rig] prefab, you'll find Controller (left) and Controller (right). These GameObjects have a SteamVR_Behaviour_Pose component on them which sets the position and rotation of the transform. Under those objects you'll see GameObjects called Model which hold our SteamVR_RenderModel component. It has a few members: Index - this is the \"tracked device index\" for the controller. It's an integer id used by the render model system to identify the controller to the underlying system. In previous iterations of SteamVR this was also used to access inputs on that controller, but now that is done through the Input System . Model Override - Generally for testing purposes you can specify what model you would like to display instead of dynamically assessing the type of device connected. Shader - If you would prefer to use a different shader to render the model you can specify it here. By default, Unity's Standard Shader is used. Verbose - Will output debug logs to tell you what's happening with the script Create Components - Creates individual GameObjects for each component where available Update Dynamically - Will move the individual components inline with their physical counterparts. Attaching Objects Developers commonly want to attach GameObjects to specific points on controllers. For this we have placed a GameObject called \"attach\" under each part of the controller that is centered on the part in question. For ease of access you can get access to the SteamVR_RenderModel script and call GetComponentTransform(string componentName) which will return \\a Transform (without doing any GC alloc). The componentName parameter here is case sensitive so make sure you pass in the component name exactly as it appears in the hierarchy at runtime. Notes The SteamVR_RenderModel component needs to be on the same gameobject as something that will set its Index. In the [CameraRig] prefab this is done by the SteamVR_Behaviour_Pose script."
  },
  "tutorials/Skeleton-Poser.html": {
    "href": "tutorials/Skeleton-Poser.html",
    "title": "Introduction | SteamVR Unity Plugin",
    "keywords": "Click here for the video version of this tutorial, with step-by-step versions of all features and detailed examples. Introduction The Skeleton Poser system has a straightforward purpose: when picking up physical objects, your in-game hands should morph to poses holding the objects. These rock solid poses can be authored and tweaked right in the Unity editor, for quick iteration as your game progresses. You can apply fancy effects on top of the poses such as additive per-finger animation and dynamic grips, and multi-pose blending. The value of this system comes from the simplified workflow. Instead of dealing with imported animations and nightmarish animation graphs, poses are stored as compact assets and animations are applied automatically based on the pose associated with whatever you're holding. This allows more complex hand behaviour on a smaller time budget. These are the basics of what these tools can do. What makes them superior to built in Unity animations is that, again, poses are authored right in the scene view, and complex behaviours can be stacked with the flick of a few switches. To add hand poses to any object in your game, just add the SteamVR_Skeleton_Poser script to it. There are two sections of the Poser script, and we will be covering both in this tutorial. Pose Editor The pose editor is for creating and editing Poses ( Steamvr_Skeleton_Pose ) which can be saved as ScriptableObjects into your project and used on this object or any other in the game. When you first add the script to a GameObject you will see an option to either select a pose from the project, or create a new one. To preview the poses you're authoring, click the hand Icons in the Left Hand and Right Hand sections to toggle the previews on and off in the scene. These preview skeletons hold all your modifications in their transforms, so remember not to disable a hand with changes unless they have been saved with the Save Pose button. The hands instantiated in the scene when you do this are temporary and will be destroyed when the game is run, as long as the script has kept track of them properly. It is good practice to disable both hand previews before applying to a prefab, as the skeletons are messy, large, and unnecessary in a prefab. It's easiest to edit the poses when just one is enabled, but for some of the buttons in this tab to work you need both preview hands to be enabled. If a button is greyed out, you likely need to enable one or both skeletons to activate it. If you want to modify the skeleton's pose, just open up the hierarchy underneath your interactable object. You can see that a vr glove skeleton has been added to it, and you can go in and edit the transforms of these bones to form your pose. If you want to make asymmetrical poses---if you have, say an asymmetrical object---you can author a different pose for the right hand and left hand. For simple or symmetrical objects, though, you probably want the same pose for both hands, so you can copy any single-hand modifications you've made over onto the other hand with the Copy x Pose to y hand buttons. When the pose is copied, the hands are automatically mirrored across your object, and often give perfect results. Be careful with this operation, as it will permanently overwrite the other hand's pose. It's a good idea to make backups of really important poses if you're going to be editing them, as the work can be lost easily. To add more usable poses to an object, or to create a new pose, hit the little plus button next to the list of poses at the top. You'll see a new tab is created with no pose selected by default, and again you can either select one from the project or create a new pose. The poses added to a single SteamVR_Skeleton_Poser will be the poses available for blending later on. The order of these doesn't matter except for the first pose, labeled (MAIN), which will be the base pose. Underneath each of the hand icons you may have noticed all the options for finger movement. This is for additive animation where you want the skeletal system's individual finger animation to apply on top of the poses that you've created. By default this will be set to static, but there are three other options. Static - No additive animation :,( Free - If you do not want your pose to apply to that finger at all, and in that case it'll listen only to the skeletal system. Extend - If the pose that in the hand is in will be the tightest possible grip of that finger, lifting it up when the player lifts their finger up. This will probably be the most common, as poses are mainly going to be wrapping around objects. Contract - The opposite of extend, where whatever pose the finger is in will be the maximum extended value of the finger, and it will only be allowed to contract further towards the fist pose. I'm not sure when that one would be used but we added it just in case. Blending Editor The next tab is the blending editor. This is what you will use if you want to create more complicated behaviors, i.e. blending between multiple poses. To start, you'll want to hit the plus button at the bottom to add a new blending behavior, called New Behaviour by default. You can enable and disable behaviors, and they have an influence slider where you can turn them off and on with more of a ramp if you don't want to harshly enable and disable them during runtime. They have a target pose that they will be blending to which by default is the main pose. This is poor design, because since the main pose is the base, this won't do anything. Instead, you'll want to set this to one of the secondary poses you've added on the pose editor list. There are three different types of Blending Behaviours. Manual - What you would use if you want this blending to be controlled by a script or just set in the inspector right here with this value slider. Does nothing on its own. Analog - Lets you map this blending behaviour weight to one of the analog actions in your project. Smoothing speed lets you apply a little bit of smoothing to this. Zero means no smoothing, anything above zero is going to be slow smoothing getting faster and faster as the value goes up. An appropriate value would be somewhere between 10 and 30, although you may not want any smoothing at all since this is an analog action. Boolean - This is very similar to the analog action, except it can be mapped to a boolean action in your project such as a button press. In this behavior type the smoothing is probably a little bit more important, because if you don't have any smoothing it's going to be an instant jump. Again, a value between 10 and 30 is recommended. The final option in every blending behavior is the mask. Anybody who's used Unity's humanoid animation system will find this UI very familiar, and those who haven't will find it is pretty self-explanatory. If you do not use the mask the blending behavior will be applied to the entire hand. If you do opt in for the mask, then you can select different parts of the hand to apply blending to. Green parts will have the blending behavior applied to them, and gray parts will not. Remember, you can stack multiple blending behaviors on top of each other and they will be applied in order. Using this, you can create some really cool complicated hand behaviors. Manual Behaviours Analog and Boolean behaviours animate automatically, but you do have to modify manual ones through code. Luckily, this is very easy. Here's an example script that would modulate a Behaviour named \"Example Behaviour\" using a sine wave using UnityEngine; using System.Collections; using Valve.VR; public class PoseModulator : MonoBehaviour { SteamVR_Skeleton_Poser poser; private void Start() { poser = GetComponent<SteamVR_Skeleton_Poser>(); } private void Update() { poser.SetBlendingBehaviourValue(\"Example Behaviour\", Mathf.Sin(Time.time * 10) / 2 + 0.5f); } } And the result: Scaling Lots of games are made at different scales for any number of reasons. What matters is that your player may be scaled up or down. The poses are applied at runtime at whatever the player scale is, which is great, but the pose authoring tools are done at a normal scale by default. This will be a problem if you're making objects that should be interactable at larger scales, as the preview you get as you work on a pose will not match the pose that you see in the game. To solve this, we added a property, Preview Pose Scale, that lets you change the working scale of the pose editor. This value should be set to whatever your player's scale will be. Poses saved from different Preview Scales will be indistinguishable, it is merely a helper for the editor to show what your poses will look like applied from differently scaled hands. Conclusion If you would like a more step-by-step guide to these features, check out the video version. I hope this tutorial helped you get started creating your own hand poses!"
  },
  "tutorials/intro.html": {
    "href": "tutorials/intro.html",
    "title": "Tutorials | SteamVR Unity Plugin",
    "keywords": "Tutorials These tutorials cover subjects specifically related to the SteamVR Unity Plugin. We have some basic tutorials now but if there's a specific component of the system you'd like more information on please create an Issue on the github Issues page of the SteamVR Unity Plugin."
  },
  "articles/Quickstart.html": {
    "href": "articles/Quickstart.html",
    "title": "Quickstart | SteamVR Unity Plugin",
    "keywords": "Quickstart You'll need to have SteamVR installed and a SteamVR compatible headset. If you have a VR HMD it's probably compatible. You can download SteamVR here: https://store.steampowered.com/app/250820/SteamVR/ Download Download the SteamVR Unity Plugin from the asset store here: https://assetstore.unity.com/packages/tools/integration/steamvr-plugin-32647 SteamVR Input Window Once imported open the SteamVR Input window under the Window file menu. Copy JSONs Click Okay to copy the default SteamVR Input JSON files. These are actions and bindings that will help the Interaction System work and give you examples of how to get started. Save and Generate After those files copy and the window has opened click the \"Save and Generate\" button at the bottom. This will save your actions and generate some classes to initialize them and give you easy access to them in the editor and through code. Interaction System Once that's done go ahead and open the Interaction System sample scene. You'll find it in Assets/SteamVR/InteractionSystem/Samples/Interaction_Example Then connect your headset, controllers, hit play, and explore the Interaction System example scene!"
  },
  "index.html": {
    "href": "index.html",
    "title": "SteamVR Unity Plugin | SteamVR Unity Plugin",
    "keywords": "SteamVR Unity Plugin Valve maintains a Unity plugin to smoothly interface SteamVR with Unity. With SteamVR developers can target one API that all the popular VR headsets can connect to. The modern SteamVR Unity Plugin manages three main things for developers: loading 3d models for VR controllers, handling input from those controllers, and estimating what your hand looks like while using those controllers. On top of managing those things we have an Interaction System example to help get your VR application off the ground. Providing concrete examples of interacting with the virtual world and our APIs. Requirements The SteamVR runtime must be installed. This can be downloaded from Steam under the Tools category. Or by clicking here . As developers we strongly recommend that you opt-in to SteamVR beta so you can test new features and verify your application works with the latest versions of SteamVR. Quick Start Follow the Quickstart guide on this site If you want to explore the Interaction System scene you'll need to open the SteamVR Input window (under the Window Menu), click yes to copy example jsons, then click Save and Generate to create input actions. For the most simple example of VR with tracked controllers see the sample scene at /SteamVR/Simple Sample For a more extensive example including picking up, throwing objects, and animated hands see the Interaction System example at /SteamVR/Interaction System/Samples/Interactions_Example Documentation This website contains API level documentation . General overview articles that explain concepts at a high level. As well as couple tutorials around specific features. Support If you're having trouble with the plugin the best place to discuss issues is our github here: https://github.com/ValveSoftware/steamvr_unity_plugin/issues/ If you'd like to discuss features, post guides, and give general feedback please post on the steam forum here: https://steamcommunity.com/app/250820/discussions/7/"
  },
  "articles/SteamVR-Input.html": {
    "href": "articles/SteamVR-Input.html",
    "title": "Input System | SteamVR Unity Plugin",
    "keywords": "Input System The heart of the SteamVR Unity Plugin is actions. Virtual Reality is evolving at a rapid rate and we need our software to be able to evolve with the hardware. SteamVR Input abstracts away the device specific parts of your code so you can focus on the intent of the user - their actions. Instead of writing the code to recognize \"pulling the trigger button down 75% of the way to grab the block\" you can now just focus on the last bit of that, \"grab the block\". You still configure the default for what \"grab\" means but the user can rebind it to their preference in a standard interface. And when a new input device comes out your users can publish bindings to share for that device with no code changes on your end. This style of abstracting input is similar to how many other companies are thinking about it. Members from most of the major Virtual Reality hardware companies have joined Khronos to create the OpenXR standard which is still under development. For more information in participating in this organization and contributing to industry standards like this see: ​ https://www.khronos.org/openxr SteamVR has separated actions out into 6 different types of input and one output type. Boolean - true or false Single - an analog value Vector2 - two analog values Vector3 - three analog values Pose - position, rotation, velocity, and angular velocity Skeleton - Orientations for each bone in a hand Vibration - Actuating haptic motors Boolean ​Boolean actions are values that are either true or false. For example, Grab is a common action that is either true or false. You’re either intending to hold something or you aren’t, there is no in between. With a Vive Wand this may mean pulling the trigger 75%, with an Oculus Touch this may mean pulling the grip trigger 25%, with Knuckles this may be some combination of capacitive sensing and force sensing. But in the end it breaks down to a true or false value. Single ​Single actions are analog values from 0 to 1. These are scenarios where you need more data than just a true or false. There are fewer of these than you’d expect. If previously you were reading a 0 to 1 value and then waiting for it to get to a certain point, a threshold, then you can accomplish the same thing with a boolean action, making it easier for your end user to customize. A good example of a Single action is the Throttle for the RC car in the SteamVR Interaction System. The action your taking as a user can vary depending on how fast you want the car to travel. Vector2 Vector2​ actions are a combination of two analog values. An X and a Y. Generally in VR so far these sort of actions are best represented by the radial menus or 2D positioning. In the SteamVR Interaction System we have an example of steering an RC car as well as a platformer type character. On the Vive Wand this is mapped to the touchpad but on Oculus Touch and Knuckles this is mapped to the joystick. With the RC car we’re using the y axis to determine forward or backward direction and the x axis to determine turning. With the platformer we’re mapping the x/y input onto the direction and magnitude of the character's movement. Vector3 Vector3​ actions are pretty uncommon. In SteamVR Home this is used for scrolling, x, y, and z is the number of pages to scroll. Pose ​Pose actions are a representation of a position and rotation in 3d space. This is used to track your VR controllers. The user can customize these bindings by setting the point on the controller that the pose represents. Some users may find a slightly different tracked position or rotation feels better for them. Skeleton Skeleton​ actions use SteamVR Skeleton Input to get our best estimation of the orientation of your fingers while holding your VR controllers. This provides one standard to get joint positions and rotations for every controller regardless of tracking fidelity. Controllers with the capacity for higher fidelity finger tracking will be more accurate than those without. Vibration Vibration actions are used to trigger haptic feedback on VR devices. This could be a controller, a vest, or even a chair. Using actions Once you've created your actions you can use them in your own scripts or you can use the unity components we've created that handle some common tasks. These are named SteamVR_Behaviour_Boolean, SteamVR_Behaviour_Single, SteamVR_Behaviour_Vector2, SteamVR_Behaviour_Vector3, SteamVR_Behaviour_Pose, and SteamVR_Behaviour_Skeleton. Drag those onto a GameObject to see what they can do."
  },
  "tutorials/SteamVR-Input.html": {
    "href": "tutorials/SteamVR-Input.html",
    "title": "Overview | SteamVR Unity Plugin",
    "keywords": "Overview The VR ecosystem is growing every day and with Knuckles we're adding quite a bit of potential to the space. SteamVR now needs to handle finger tracking and force sensors. This requires we take another look at how we're handling input now, and how we'll handle it in the future. Joe Ludwig posted about the new SteamVR Input System a bit here . Now we're going to dive into how you as a Unity developer can use this system to stop worrying about each new input device and focus on creating your virtual reality. We'll start from the beginning with downloading the unity plugin, go through adding new actions, binding them, using them in the editor and code, and finally creating a build. We have not removed access to the old input functions, but both can't be used at the same time. We strongly encourage you to move to the new input system. All of the scenes, prefabs, the default camera rig, and the interaction system in the SteamVR Unity plugin now use this new system. But if you prefer, the old system is on the releases page of our github . Downloading the Plugin This is an significantly different iteration of the Unity plugin. We've made a lot of changes to how input works and we want to make sure we continue to get your feedback. We welcome you to post about issues on our github issues page here . You can download the SteamVR Unity Plugin from the Unity Asset Store here or on the releases page of the SteamVR Unity Plugin on github . If you'd like to suggest specific code changes please do that with an Issue or Pull Request on our github page. To start off, go ahead and download this package and extract it into a new Unity project. We recognize that many of our developers are still on older versions of Unity and we are committed to continuing to support them. Currently the plugin will work as far back as Unity version 5.4 and up to 2019.1. SteamVR Interaction System The SteamVR Interaction System has been updated to support the new SteamVR Input System as well as the Knuckles EV2 and EV3. You can find the main scene in your project under Assets/SteamVR/InteractionSystem/Samples/Scenes/Interactions_Example.unity In this scene you'll find a number of new things. We've extended throwing examples, added a platformer controller, an RC car, a simple push button, grenades, and lots of hand samples. In the throwing section there's now a basic example of item interaction with velocity based movement similar to NewtonVR. This makes it so your items no longer pass through solid colliders unimpeded. Instead they slide more smoothly around obstructions. A more hearty velocity estimation algorithm has been added to not just average existing controller velocity but to match throwing intent even if the actual release point was a bit too early or late. And we've separated out the existing styles of interacting with items so you can assess those as well. All of these interactable bits are settings on the existing Throwable component. The platformer and rc car section has some fun samples for you to discover. They're relatively simple controllers but show a more indirect form of interacting with your world. The controllers hold the actions and get queried with the hand that is holding them. Knuckles brings finger tracking to SteamVR. This is accessed through the new SteamVR Skeletal Input system. Knuckles estimate finger positions and then passes that data off to the driver which interprets that into 31 bone transforms. This can be used to much more deeply engage the user with their reality. But this isn't a feature exclusive to Knuckles. The plugin also includes finger estimations for Vive wands and Oculus Touch, and we'll be working with Microsoft to add support for Windows MR controllers as well. By default in the scene you'll now see hands as well as controllers. You can teleport over to the Skeleton section of the scene to Show and Hide the controller models as well as switch between a hand animation gripping the current controller and a hand animation that opens and closes freely. To learn more about the SteamVR Skeletal Input system, view this blog post. The SteamVR Input window If you select your Window menu you'll see a new item here called SteamVR Input . Click on that and you'll likely get a dialog explaining that you're missing an actions JSON and asking if you'd like to use the default. Select Yes and it'll copy the default actions.json file, as well as the related bindings files for a few popular controllers into the root of your project directory. This is where SteamVR will read them from when you go into Play Mode and where it'll copy them from when you make a build. Once those are copied the window will populate a list of actions sets and actions that are used in the Interaction System scene. We'll get into adding and modifying actions later for now we're going to skip down to the bottom of this window to Save and Generate. Clicking this button will start a bunch of behind the scenes work to plumb your actions into generated properties for you to directly to access them without magic strings. When the progress bar completes it will have created a folder in your project called SteamVR_Input with all those code files in it. This path can be configured through the settings button at the top of this window. Testing Alright, lets see these actions in... action! Now that you've imported the plugin and generated your actions you should be able to just hit play to go in world and check out the interaction system example scene. Once you've looked around a little bit let's take a look at the state of the actions themselves. We have an easy ways to visualize the state of actions at runtime. In the window menu you'll see a new option: SteamVR Input Live View. This is a live view of all your actions separated by action set and controller. Open up your scene view and your game view so they're both viewable at the same time and make sure the \"Maximize on Play\" button is unchecked. This button provides significant in editor performance increases but we want to see the rest of the editor right now. When an action's value changes it will highlight green and then fade away to give you a strong visual indication of state change. A yellow background for an action means it hasn't been accessed by your code yet. We only start updating actions once you access them somehow. If you're not seeing any changes when you press buttons make sure that your controllers are being recognized by SteamVR and that you don't have any errors in the console. Adding an action SteamVR Input abstracts away the device specific parts of your code so you can focus on the intent of the user - their actions. Instead of writing the code to recognize \"pulling the trigger button down 75% of the way to grab the block\" you can now just focus on the last bit of that, \"grab the block\". You still configure the default for what \"grab\" means but the user can rebind it to their preference in a standard interface. And when a new input device comes out your users can publish bindings to share for that device with no code changes on your end. Back in the SteamVR Input window you'll find your list of actions. Selecting an action will populate its details and allow them to be modified. Boolean, vector1, vector2, and vector3 types should be pretty straight forward. The skeleton type controls the hand bone position/rotations. Pose is the position/location of the controller itself. At the bottom you'll see the localized string for an action, this is what users will see in the binding UI, so try and give your actions short but descriptive names. We've included a sample script and model for a planting example, so lets go ahead and implement an action for that. In the default action set at the bottom of the In actions hit the plus icon to create a new action. Go over to name and name this action \"Plant\". We want to keep it boolean since the idea is we're either planting or not, and we don't want to require this action to be bound since it's not critical to our application so leave it as suggested. Under localization lets duplicate the name for English, just put in \"Plant\" there as well. Now lets save and generate. This will save out a new actions.json file (which you're welcome to look at, it's just text) and then generate a scriptable object and property for our new action. Binding actions Once we've created our new action we now need to bind it to a button for testing. So after it's done generating click the \"Open Binding UI\" button. This will open your default browser to the SteamVR binding UI with the selected application being Unity. If you're presented with a list of games instead of a list of bindings you may have renamed your Unity executable and you'll need to go into play mode and click the open binding UI button again to get Unity to register correctly. Select the current binding by clicking the Edit button next to it. You should now see a list of buttons for your currently tracked controllers and actions that are bound to them. Near the top your default action set should be highlighted red, if you mouse over that it will let you know that your suggested action \"Plant\" has not yet been bound. I'm going to scroll down to my A button since it doesn't have any bindings yet and hit the plus icon next to that. That will give me a list of options on what sort of mode I want to bind for this action. I want something simple so I'm going to select Button. Next to the text \"Click\" under Button you'll see a box that says None, click on that and it will prompt you to bind the button click to an action. Select Plant. We want the same response on both controllers so under the A button on the other hand repeat the same steps. Now you can go to the bottom of the window and click the Replace Default Binding button. This will automatically replace the associated binding file in the root folder of your project with these new changes. To solidify this change hit the back button on the binding UI to go to your bindings for Unity. Now you should have an existing \"Current Binding\" but now also one under \"Official Bindings\" that you just created. Select View here and then \"Select this Binding\" at the bottom left to attach this binding file that you've exported as your current binding. If it prompts you about your local changes you can freely discard them since we explicitly exported those changes. Assigning actions in the editor We've created, generated, and bound an action now let's assign it to do something. In the project you'll find a script at Assets/SteamVR/InteractionSystem/Samples/Scripts called Planting. Drag this component onto your hands in the hierarchy at Player/SteamVRObjects/Hand1 and Player/SteamVRObjects/Hand2. In the inspector for these two components you'll see a dropdown for the \"Plant Action\" click on the dropdown and select \\actions\\default\\in\\Plant. It's that easy to use actions in the editor. Go into play mode and hit the A button (or whatever you bound) and check out your fancy planted flower! Working with actions in the code Double click on the Planting script to open it in your IDE and let's take a look at how our script interacts with this action. At the top you'll see an OnEnable method that has a reference to our action in it. It's calling the AddOnChangeListener method and passing in a method we want called when the action changes. We're also passing in the type of hand that the script is currently on so we only get change events when the action has changed for that hand. In OnPlantActionChange we've gotten a notification that the action's state has changed but that could be to true or to false. We only care about when the button has been pressed down so we call GetStateDown and again pass in the hand type that we're working with. If the button was pressed down then we execute our planting coroutine. You're not restricted to calling GetStateDown from inside an event, you can call it from anywhere, inside Update, coroutines, etc. If you'd prefer, you can reference actions explicitly in code by named property in the SteamVR_Actions class: Working with actions in the Editor We've also got some helper components if you're more comfortable with the editor than code. Let's go back to Hand1 and Hand2 and add SteamVR_Input_Boolean components to them. Select our plant action on that component. Here you'll see a lot of unity events for different button state changes. Planting one flower at a time is okay, but I want more, like a lot more. Let's hit the add button in the OnPress section of the SteamVR_Input_Boolean component. Then drag our planting component into the object section. Under function select the Plant method. Now when you go into Play mode you'll plant a flower on press down but also whenever the button is pressed at all. By default this will execute once per frame. Lots of flowers! Troubleshooting actions If you're having trouble with your actions and want a different interface for viewing the states at runtime check out the Input Debugger. In the binding UI select your game, select your current binding then in the lower right hand corner click the Input Debugger button. On the left you'll see a list of actions and their current states. For a given action the first circle is if the action is active, the middle is if it's currently true, and the last is when that action has changed. On the right you'll see the currently tracked controllers and the states of their individual buttons. Creating a build When you go to create a build nothing has changed as far as your workflow goes but one new thing will happen. Your action and bindings files will be copied to the build directory alongside your executable. By default they will overwrite what's there to ensure you have the most up to date bindings for your build. If you don't want this to happen there's an option to disable that in the SteamVR Input window."
  },
  "articles/Skeleton-Input.html": {
    "href": "articles/Skeleton-Input.html",
    "title": "Skeleton Input | SteamVR Unity Plugin",
    "keywords": "Skeleton Input Seeing your physical controllers in VR is nice but what people really want is to be able to see their hands. As VR controllers advance we're seeing wildly different capabilities. Some controllers only get button presses (no touch), some give good finger estimates even mid-air, and we're starting to see gloves and cameras that have full per joint position/rotation tracking. SteamVR Skeleton Input gives you one API to get per joint data for all of these different types of devices. For devices with less data we estimate finger positions based on what buttons are being pressed while with more advanced controllers the data is just passed through. Range Of Motion We have two ranges of motion that you can get bone data for. If you're looking for accurate-to-real-world data you can use the WithController range of motion. This means we try and estimate where your fingers are in the real world as best as the controller will allow. WithoutController gives you a full range from a flat hand with fingers spread out to a balled fist. Skeletal Transform Space Depending on what your use case is for this data you may want to get the positions and rotations relative to different things. By default we get positions and rotations relative to their Parent . But you can also get them relative to the Model . Finger Curls For some things it may be more useful to access a summary of how curled the finger is as opposed to the position and rotation for 4 joints on each finger. These values range from 0 to 1, with 1 being fully curled. You can access curl information at skeletonAction.fingerCurls[] as an array, or individually named at skeletonAction.indexCurl , skeletonAction.middleCurl , skeletonAction.RingCurl , skeletonAction.pinkyCurl , and skeletonAction.thumbCurl . Finger Splays Knowing the gaps between fingers can also be a commonly used piece of information. For this we provide data in a similar fashion to the curls. A range from 0 to 1 representing the size of the gap between fingers. skeletonAction.fingerSplays[] as an array, or individually named as skeletonAction.thumbIndexSplay , indexMiddleSplay , middleRingSplay , and ringPinkySplay . Skeletal Tracking Level Different controllers have different abilities to track the individual joints of your fingers. Here we provide an overview value that should give you a general idea what level of fidelity your current controller has. Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. SteamVR_Behaviour_Skeleton The skeleton behaviour is a component to make common Skeleton Input tasks easier in unity. By setting the skeletonAction and inputSource you can then let the behaviour do a lot of work for you. updatePose - Setting this to true will orient the GameObject in your playspace every time the skeleton is updated. mirroring - If this bone data should be mirrored across the x axis. SetRangeOfMotion(EVRSkeletalMotionRange newRangeOfMotion, float blendOverSeconds = 0.1f) - Gives you an easy way to blend to a new range of motion. BlendToSkeleton(float overTime = 0.1f) - Fully blend to using the skeleton data to animate the bones. BlendToPoser(SteamVR_Skeleton_Poser poser, float overTime = 0.1f) - Fully blend to using the Poser to animate the bones. BlendToAnimation(float overTime = 0.1f) - Fully blend to a predefined Unity animation. BlendTo(float blendToAmount, float overTime) - Lets you specify how much to blend between poser/animation data and skeleton input data. Transform GetBone(int joint) - Returns a specific bone's Transform by the joint index (SteamVR_Skeleton_JointIndexes). ForceToReferencePose(EVRSkeletalReferencePose referencePose) - Forced the bones to a specific reference pose as defined by SteamVR. Generally used for debugging purposes. Vector3[] GetBonePositions() - Gives you an array of all the bone positions in the space you requested. Quaternion[] GetBoneRotations() Gives you an array of all the bone rotations in the space you requested. SteamVR_Behaviour_Skeleton Events There's five helpful events on the skeleton behaviour that have two forms. You can subscribe to the unity event or the more traditional C# event. The benefit of the C# events is most IDEs will automatically create a function with named parameters for you based on the event type. onBoneTransformsUpdated - After the bone transforms have been updated this will fire. onTransformUpdated - After the root transform has been updated this will fire. onTransformChanged - After the root transform has been changed this will fire (moved / rotated). onConnectedChanged - Whenever a device is connected or disconnected from this action onTrackingChanged - Executes whenever the state of the tracking for this device changes."
  },
  "articles/Interaction-System.html": {
    "href": "articles/Interaction-System.html",
    "title": "Interaction System from The Lab | SteamVR Unity Plugin",
    "keywords": "Interaction System from The Lab The Interaction System is a series of scripts, prefabs and other assets that were the basis of all the minigames and other scenes in The Lab. This system was initially designed to be lightweight and flexible so that it could support all the experiments that we were working on at the time. Since then it has been updated to be an example of the new features we've added to SteamVR. Including SteamVR Input (actions / action sets) and Skeleton Input (hands). Hopefully it can serve as a good starting point for your own experiments and help you in developing your projects. Getting started Create a new scene Delete the “Main Camera” object Drag in the “Player” prefab from Core/Prefabs into your scene. This prefab sets up the main Player component and the hands. It also hooks into all the relevant SteamVR Input actions needed. You should be able to see the scene in the headset now along with your controllers being tracked in the scene. If you have controllers that support Skeleton Input you'll also see hands that touch and press the buttons on your controllers. Add the “Interactable” component to any object in the scene. All the other components on this object will then start receiving relevant messages from the player’s hands. (Look at Samples/Scripts/InteractableExample.cs for example usage) We have included a few commonly used interactable classes such as the Throwable. Adding this component to your object will allow it to be picked up and thrown by the player. You can then add the Skeleton Poser component to a GameObject with an Interactable and pose how you want the hand to look when interacting with it. To add teleporting to your scene drag in the Teleporting prefab from Teleport/Prefabs into your scene. This will set up all the teleport logic. Drag in some TeleportPoint prefabs from Teleport/Prefabs to add locations that the player can teleport to. You can also add the TeleportArea component to any object in your scene. This will allow the player to teleport anywhere along the collider for that object. With these basic building blocks you can then go on and create some fairly complex objects. For some examples take a look at the Interactions_Example scene in Assets/SteamVR/InteractionSystem/Samples/Scenes. Sample scene The sample scene Interactions_Example in the Samples/Scenes folder includes all of the major components and is a good place to familiarize yourself with the system. The scene contains the following elements: Player : The Player prefab is at the core of the entire system. Most of the other components depend on the player to be present in the scene. Teleporting : The Teleporting prefab handles all the teleporting logic for the system. InteractableExample : This shows a very simple interactable that shows the basic aspects of receiving messages from the hands and reacting to them. Throwables : These show how to use the interaction system to create a variety of different types of throwable objects. Read the descriptions next to each table for more information. Skeleton : There's a few different examples of hand models along with options for what extents the skeleton goes to. Proximity Button : A common task is needing to hit a button. Physical buttons are more satisfying to use than flat interfaces but physical interaction systems can get complex fast. Without going too deep into that we've included a button that can be depressed just by being close to a controller. Interesting Interactables : These are slightly more complex examples of using the Skeleton Poser system along with Throwables. With the grenades you get two different poses depending on how you pick them up. The Happy Ball moves in your hand with a squeeze and the Squeezable, well, squeezes. UI & Hints : This shows how hints are handled in the interaction system and how it can be used to interact with Unity UI widgets like buttons. LinearDrive : This is a slightly more complex interactable that combines a few different pieces to create an animated object that can be controlled by simple interactions. CircularDrive : This shows how interactions can be constrained and mapped differently to cause more complex motions. Longbow : This was the actual Longbow used in The Lab. It's now been updated with the Input System and Skeleton Poser. It is one of the more complex objects that we've created using this system and shows how simple pieces can be combined to create an entire game mechanic. Going over the different objects in this sample scene should give you a good idea of the breadth of the interaction system and how to combine its different parts to create complex game objects. Documentation Now we'll go a little more in depth into some of the basic components included in the interaction system. The system is broken up into a few different parts: Core: At the core of the interaction system are the Player, Hand and Interactable classes. The provided Player prefab sets up the player object and the SteamVR camera for the scene. The interaction system works by sending messages to any object that the hands interact with. These objects then react to the messages and can attach themselves to the hands if wanted. To make any object receive messages from the hands just add the Interactable component to that object. This object will then be considered when the hand does its hovering checks. We have also included a few commonly used interactables such as the Throwable or the LinearDrive. The Player prefab also creates an InputModule which allows the hands to mimic mouse events to easily work with Unity UI widgets. The interaction system also includes a fallback mode which allows for typical first-person camera controls using the keyboard and mouse. This also allows the mouse to act like one of the player's hands. This mode is particularly useful when not everyone on the team has access to VR headset. Player The Player class acts like a singleton which means there should only be one Player object in the scene. The player itself doesn't do much except for keep track of the hands and the hmd. It can be accessed globally throughout the project and many aspects of the interaction system assume that the Player object always exists in the scene. It also keeps track of whether you are in VR mode or 2D fallback mode. Using the accessors through the Player class allows the other components to function similarly without knowing if the VR headset or mouse/keyboard is being used. The 2D fallback mode is useful but has its limitations. We mainly used this mode for testing out very simple interactions that only required 1 hand and the trigger button. It was mainly useful during development when not everyone on the team had a VR headset on controllers with them at all times. The Player also includes a few useful properties: hmdTransform: This will always return the transform of the current camera. This could be the VR headset or the 2D fallback camera. feetPositionGuess: This guesses the position of the player's feet based on the where the hmd is. Since we don't actually know the position of their feet, this can be pretty inaccurate depending on how the player is standing. bodyDirectionGuess: This is similar to the feetPositionGuess in that it can be inaccurate depending on how the player is standing. Note: The player class is set up to use icons to show the feet and hands in the editor scene view but due to the way Unity works these icons have to be located in a specific folder to work. These icons are provided under Core/Icons. Move them to a folder named \"Gizmos\" in the root of your projects Asset tree and they should work. The 2D fallback mode can be useful during testing but it’s probably not something that you want to ship with your finished game. There are 2 ways to disable it: Uncheck the \"Allow Toggle To 2D\" bool on the player object in your scene before making your build. Add \"HIDE_DEBUG_UI\" to the list of Scripting Define Symbols in your project's PlayerSettings. This will only disable the 2D debug view in builds of your game while allowing you to keep using it in the editor. Hand The Hand class does most of the heavy lifting for the interaction system. The Hand checks for objects (Interactables) that it is hovering over and sends them messages based on the current hover state. The hand can only hover on 1 object at a time and only 1 hand can hover on an object at the same time. Objects can be attached to and detached from the Hand. Only one object can be the object in focus of the hand but multiple objects can be attached to the hand at the same time. Once an object is detached from the hand then the previous object attached to the hand (if it is still attached) becomes the object in focus on the hand When nothing is attached to the hand it will always show the controller. The attached object can set AttachmentFlags that determine the behavior of the hand and the object once it has been attached. The hand can be locked from hovering over other objects or any object depending on the situation. These are the messages the hand sends to objects that it is interacting with: OnHandHoverBegin: Sent when the hand first starts hovering over the object HandHoverUpdate: Sent every frame that the hand is hovering over the object OnHandHoverEnd: Sent when the hand stops hovering over the object OnAttachedToHand: Sent when the object gets attached to the hand HandAttachedUpdate: Sent every frame while the object is attached to the hand OnDetachedFromHand: Sent when the object gets detached from the hand OnHandFocusLost: Sent when an attached object loses focus because something else has been attached to the hand OnHandFocusAcquired: Sent when an attached object gains focus because the previous focus object has been detached from the hand These are the messages that the hand sends to its child objects: OnHandInitialized: Sent when the hand first gets initialized by associating itself with the device ID of a SteamVR tracked controller OnParentHandHoverBegin: Sent when the hand starts hovering over something OnParentHandHoverEnd: Sent when the hand stops hovering over something OnParentHandInputFocusAcquired: Sent when the game window gains input focus OnParentHandInputFocusLost: Sent when the game window loses input focus These members deal with attaching and detaching: AttachObject: Attaches the object from the hand using the passed in AttachmentFlags DetachObject: Detaches the object from the hand and optionally restores it to its original parent currentAttachedObject: This returns the in-focus attached object on the hand, if any The Hand also has a few useful properties and functions that can be used to customize its behavior: OtherHand: This is the other hand on the player. This can be useful for objects that need to interact with both hands such as the longbow. HoverSphereTransform and Radius: This can be used to customize the hover range of the hand. HoverLayerMask: This can be changed so that the hand only hovers over objects in certain layers. HoverUpdateInterval: The hovering check can be done more or less frequently depending on the requirements of your game. HoverLock/Unlock: This is used to make the hand only hover over a certain object. Passing in null will make the hand not hover over anything while it is hover locked. This technique is used to make the hand not hover over objects while the teleport arc is active. GetGrabStarting/GetGrabEnding: These are used to determine if the boolean grab actions are being triggered at that time. There are two types of grabs - grip grab and pinch grab. These are generally associated with grip buttons and trigger buttons but serve special functions on the Knuckles controllers. GetAttachmentTransform: Objects can use \"attachment transforms\" on the hand to figure out how to snap on to the hand. These are just named children of the Hand object. The Player prefab contains \"Attach_ControllerTip\" as an example. Interactable The Interactable class is more of an identifier. It identifies to the Hand that this object is interactable. Any object with this component will receive the relevant messages from the Hand. Using just these 3 components you should be able to create many different and complex interactive objects. A few commonly used interactable system components that show how the system can combine these basic mechanics to create more complicated objects have been provided: Throwable This is one of the most basic interactive objects. The player can pick up this object when a hand hovers over it and presses one of the grab buttons (usually trigger or grip). The object gets attached to the hand and is held there while the button is pressed. When the button is released then any velocity that was in the hand is given to thrown object. This lets you create basic objects that can be picked up and thrown. LinearDrive This allows an object to be moved by the hand between a starting and ending position. The object's current position is used to set a LinearMapping. CircularDrive This allows an object to be moved by the hand in a circular motion. The object's current position is used to set a LinearMapping. LinearMapping This is a number that is set by a LinearDrive or CircularDrive. The mapping can be used to map simple hand interactions into more complex behaviors. An example of this is string in the Longbow which uses a LinearMapping to map the pulling of the bow string to the longbow pull-back animation. The mapping is used by several other classes to interpolate their properties LinearAnimation LinearAnimator LinearBlendShape LinearDisplacement HapticRack VelocityEstimator This class is useful for estimating the velocity and acceleration of an object based on a change in its position. In most cases you would get more accurate results if you get the velocity and acceleration from the actual controller but sometimes that isn't possible such as when using the 2D fallback hand. IgnoreHovering This can be added to an object or specific collider if you want it to be ignored by the hand when doing its hovering checks. UIElement Adding this component to an existing UI widget will make it so that the hands can interact with it. This will generate mouse hover and click events based on hand interactions and send them through the Unity event system to work with existing UI widgets. In addition it will also generate an OnHandClick event which will also pass in the hand that clicked the element. Another big part of the interaction system is the concept of an ItemPackage ItemPackage An ItemPackage is collection of objects that are meant to temporarily override the functionality of the hand. An example of this is the Longbow. While the Longbow is attached to the hand it sort of takes over the base functionality of the hand. ItemPackages have the concept of being able to be picked up and put back where they were picked up from. Once picked up they remain attached to the hand until they are put back. No button needs to be held for them to remain attached to the hand. The hand still passes along messages like normal but these objects usually disable some of the base functionality of the hand, such as hovering while they are attached. Other examples of an ItemPackage from The Lab would be the balloon tool or the Xortex drone controller. Both these objects take over the hand's base functionality while they are attached. An ItemPackage can be 1 or 2 handed. ItemPackageSpawner This handles the logic for when to spawn and put away the ItemPackage and how to attach the items to the hand once spawned. It also handles showing the preview of the item or the outline of the item when it is picked up. ItemPackageReference This component can be added to item to indicate that it is a part of an item package. There are a few other helper classes included as a core part of the interaction system. PlaySound This class allows AudioClips to be played back with many more parameters It can take in many AudioClips and play back 1 at random each time It can also randomize how the clip is played back SoundPlayOneShot This class is specifically for sounds that only play once and don't loop or need to be paused while playing Util This is a class full of small utility functions that are used throughout the interaction system. InteractableHoverEvents This class generates UnityEvents when it receives messages from the hand. InteractableButtonEvents This class translates controller button input into UnityEvents. ComplexThrowable This class attaches objects to the hand using a physics joint instead of simple parenting. This allows for more physics based interactions with the object once it is attached. Note: This class is a little experimental. Since we didn't actually use it in The Lab it might not be feature complete and may be buggy. DistanceHaptics Triggers haptic pulses based on a distance between 2 transforms. Player (Prefab) This is the single piece of the interaction system that combines all its basic parts. This prefab arranges the player and hands in a way to make them all accessible easily. It also contains all the setup for SteamVR and the 2D fallback system Most of the other components of the interaction system depend on the player and some of them assume that the player and hands are set up in this way. There should only be 1 of these in a scene. BlankController (Prefab) This is used by the Hand when it has nothing else attached. The render model for the controller is loaded through SteamVR and all its parts are articulated. Teleport The teleport system from The Lab supports teleporting to specific teleport points or a more general teleport area. The important classes are Teleport, TeleportPoint and TeleportArea. All the functionality is wrapped up in the Teleporting prefab in Teleport/Prefabs. This prefab includes all the logic for the teleport system to function. Add TeleportPoints or TeleportAreas to the scene to add spots where the player can teleport to. Teleport This class handles most of the logic of teleporting. When the touchpad is pressed, the teleport pointer shows up. If the pointer is pointing at a valid spot when the touchpad is released then the player teleports. You can also press 'T' on the keyboard while in 2D fallback mode to bring up the teleport pointer. There is a slight fade to black when the player teleports and then the game fades back in. This class keeps track of all the teleport markers in the scene and informs them to fade in/out depending on the state of the teleport pointer. In certain situations it can be useful to have a separate mesh for the floor the scene that is different from the teleport mesh. In these situations the teleport system will trace down from where it hit the teleport mesh and try to place the player on the floor mesh. The point of this is to try to match the visual floor in the scene with the physical floor in the player's play area. There are a few properties that will probably need to be tweaked: tracerLayerMask: This is all the layers that the teleport pointer will try to hit floorFixupMask: The layer that the floor is on. floorFixupMaximumTraceDistance: The maximum distance to trace to try to look for the floor. ShowPlayAreaMarker: This toggles whether to show the rectangle of the player's play area while teleporting. This can help in orienting the players in their physical space. arcDistance: How far the teleport arc should go. Increasing this number will allow the player to teleport further in the scene. This value will probably need to be tweaked for each scene. TeleportMarkerBase This is the base class for all the teleport markers. It contains methods that the Teleport class expects to be present in all the teleport markers. You can use this as your base class to create a new type of teleport marker. A teleport marker can be locked or unlocked. The player cannot teleport to locked markers. TeleportArea This is a teleport area that is made up of a mesh. When teleporting onto these, the player will teleport exactly where they are pointing (plus the floor fixup) Add this component to any object with a collider and a mesh renderer to allow the player to teleport on it. TeleportPoint This is a teleport point that the player can teleport to. When teleporting onto these, the player will teleport at the origin of the point regardless of where on the point they were pointing. These points can be named The points also have the ability to teleport players to new scenes. (This isn't fully functional since you will have to hook it up to your scene loading system.) TeleportArc This draws the arc for the teleport pointer and does the physics trace for the teleport system. AllowTeleportWhileAttachedToHand By default you can't teleport using a hand that has something attached to it. Adding this component to an attached object bypasses that rule. This is used by the BlankController and longbow Arrow objects so that the player can teleport even while they are attached to the hand. IgnoreTeleportTrace Adding this to an object with a collider will allow the teleport trace to pass through it. A different way of dealing with this would be to put that object on a different layer that the TeleportArc doesn't check against. This is used on the longbow Arrow to allow the teleport trace to pass through the arrow tip. Teleporting (Prefab) This prefab sets up the entire teleport system. Dragging this into your scene will give you the ability to bring up the teleport pointer in your game. All of the visuals and sounds of the teleport system can be changed by modifying the properties of this prefab. TeleportPoint (Prefab) Add these to your scene to add locations that the player can teleport to. Note: The names of some of the objects in this scene are hard-coded and some of the code will need to be modified if you want to change the models. Render Model Unlike the SteamVR_Render_Model component this Render_Model component inside the Interaction System handles both controller models as well as hand models and enabling/disabling them individually. Hints The hint system shows hints on the controllers. The hints are set up in a way where each button on the controller can be called out separately. There is also the ability to show text hints associated with each button. ControllerButtonHints The hints are set up based on the render model of the controller. SteamVR provides a mapping from render model components to button IDs. This mapping is used to figure out what part of the controller corresponds to which button. Once a hint for a button is activated, that button will keep flashing on the controller model until the hint is turned off. Hints can be for buttons only or with an optional text hint associated with the button. There are a few static methods that are used to interface with the hint system: ShowButtonHint: Flashes the specified button on the specified hand. HideButtonHint: Stops flashing the specified button on the specified hand. HideAllButtonHints: Stops flashing all the buttons on the specified hand. IsButtonHintActive: Checked if a specified button is flashing on the specified hand. ShowTextHint: Shows a text hint with the passed in string associated with the specified button on the specified hand. HideTextHint: Hides the text hint for the specified hand on the specified button. HideAllTextHints: Hides all the text hints that are currently active on the specified hand. GetActiveHintText: Gets the active hint text for a specified button. Longbow The Longbow is an example of a complex game mechanic created using the interaction system. The version included here is exactly the same one that we shipped in The Lab, including all the models, materials and sounds. The Longbow is built using the ItemPackage system. It is comprised of the LongbowItemPackage prefab which spawns the Longbow prefab in the main hand and the ArrowHand prefab in the other hand. The ArrowHand prefab then spawns a new arrow in the hand every time one is fired. All of the bow and arrow logic is present in the following scripts: Longbow It handles the logic of how the bow controls in nocked and un-nocked modes It also keeps track of how far the bow string is pulled ArrowHand Handles nocking and firing the arrow based on its position and the controller buttons Handles spawning an arrow in the hand when needed Arrow The actual arrow that gets fired This script handles all the in-flight logic for the arrow including collision detection and deciding when to stick in to targets ArrowheadRotation Rotates the arrowhead randomly every time a new arrow is spawned SoundBowClick Plays the sounds of the bow string being pulled. The other scripts in the Longbow folder handle the logic for the longbow targets ArcheryTarget This is the script for a generic archery target. It invokes a UnityEvent when hit by an arrow. FireSource Indicates an object that can be set on fire. Once on fire this object can then spread fire when it comes in contact with another FireSource. ExplosionWobble Used to make the archery target wobble. Balloon BalloonColliders BalloonHapticBump BalloonSpawner These scripts handle the logic for the balloons that spawn when the weeble is hit with an arrow. Samples There are a few classes that were created specifically to show some examples in the sample scene. ControllerHintsExample This class shows how to use the hint system. InteractableExample This class shows a very simple example of receiving and responding to messages from the hand."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "SteamVR Unity Plugin | SteamVR Unity Plugin",
    "keywords": "SteamVR Unity Plugin This is the class by class, member by member documentation for the SteamVR Unity Plugin. It is not complete. If you would like summary or example information for a specific class or member please post a request in the Issues section of the github repo. SteamVR_Settings Located in Assets/SteamVR/Resources you will find a SteamVR_Settings asset that has a couple setting on it you may find useful. Namely when the input system updates the actions. It also contains a boolean that decides whether to automatically enable VR for the project. If you have this plugin installed and are trying to disable VR you will need to uncheck this box first. SteamVR_Actions The Actions class will be generated for you when you hit \"Save and Generate\" in the SteamVR Input window. It gives you named access to all your actions. For example, if you have an action named Plant in the action set Farming you can access it through the actionset at SteamVR_Actions.Farming.Plant or just at the root of the class at SteamVR_Actions.Farming_Plant. SteamVR_Input Here is where most of the helper functions live to access your actions in code. You can get a reference to a specific action by name through a generic function GetAction<SteamVR_Action_Boolean>(\"Plant\") or through a type-named function GetBooleanAction(\"Plant\") . You can also pass in the full path to the action: GetActionByPath<SteamVR_Action_Boolean>(\"/Farming/in/Plant\") if you have a lot of actions or want the best performance. These classes are nice because they give you access to common events and faster data access. But if you'd rather just access the data directly instead of going through the action class you can use more familiar calls GetStateDown(\"Plant\", SteamVR_Input_Sources.LeftHand) . Different than normal Unity input you'll need to pass in the Input Source you want to get the data from. That can be Any, or quite a number of more specific sources (LeftHand, RightHand, etc). Any will combine all sources (OR'd) in to one set of data. SteamVR_Behaviour This is the component that manages most of the input system in relation to unity events. You shouldn't generally need to interact with it besides making sure it's in your scenes and doesn't get accidentally deleted. It should be automatically added to a scene at runtime when one isn't found. SteamVR_Behaviour_Pose The pose behaviour component is what orients tracked objects. Add this to a GameObject to automatically set the position and rotation of the transform to match your tracked object (usually controllers). It also contains velocity data and a variety of helper functions for common orientation functions. SteamVR_Behaviour_Skeleton Uses SteamVR Skeleton Input to give you a hand that is our best guess of where each joint is at that time. Varies in accuracy depending on the controller and tracking system currently being used. This can also orient the GameObject inline with the controller. So you don't need a pose and a skeleton behaviour on the same object. SteamVR_Behaviour_Boolean / Single / Vector2 / Vector3 These are components designed to give you easy access to an action by the same name and a place to use UnityEvents if that is your preference. They also have some helpful functions designed around common scenarios for those actions. If you find yourself running into things you wish these helper components had, feel free to create an Issue on the github."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "SteamVR Unity Plugin | SteamVR Unity Plugin",
    "keywords": "SteamVR Unity Plugin Quickstart There's a quickstart guide here that will lead you through the process of getting setup with the SteamVR Unity Plugin and into a scene. Render Models SteamVR works with a wide array of headsets and controllers. When you have a tracked device in VR it’s nice to have an accurate visualization of that device. Instead of shipping each individual model and texture for each controller with each application, SteamVR can manage this for you. We include a SteamVR_RenderModel ​component that you can put on a gameobject that will auto load whatever device SteamVR detects for a given Pose. Put a SteamVR_Behaviour_Pose​ on a gameobject to get the position and rotation of a controller and then a SteamVR_RenderModel to show the 3d model for that controller that will animate with button presses. See the simple sample scene or the SteamVR/Prefabs/CameraRig​ prefab for an example. SteamVR Input Since SteamVR works with so many different input devices we’ve simplified the process of accommodating all these devices. Instead of referencing the individual buttons on one controller, with SteamVR Input you reference an action. Instead of writing the code to recognize \"pulling the trigger button down 75% of the way to grab the block\" you can now just focus on the last bit of that, \"grab the block\". You still configure the default for what \"grab\" means but the user can rebind it to their preference in a standard interface. And when a new input device comes out your users can publish bindings to share for that device with no code changes on your end. Skeleton Input Inline with the Knuckles Valve has released a system to get skeletal hand data independent from the controller you’re using. Some controllers have a high fidelity for hand tracking data with individual joints, some controllers only have buttons that we use to approximate joint data. We use whatever is available and give you two major sets of data: With Controller: Our best approximation of where the joints in your hand are wrapped around your controller in the real world. Without Controller: Based on the With Controller data we estimate how open or closed your hand is as if you were trying to hold your hand flat or make a fist. Included in this plugin are example models of gloves that you can freely use in your products. In addition we have a helper component that takes the data from SteamVR and applies it to these gloves: ​SteamVR_Behaviour_Skeleton. For an example of this in action see the Interaction System sample scene. Interaction System After Valve released The Lab we took the learnings from that project and created an Interaction System that others could use in their own projects. This system has been updated since then to use SteamVR Input and the new SteamVR Skeleton Input systems. This system can serve as an example of how to use the these new systems. It includes the following examples: Interaction with Unity UI elements Pickup, Drop, and Throw Multiple variations on throwing velocities Bow and Arrow Wheel interactions Proximity button Variety of Skeleton Input examples Teleporting Using held objects Using Skeleton Input to form a hand around a held object."
  },
  "articles/Skeleton-Poser.html": {
    "href": "articles/Skeleton-Poser.html",
    "title": "Skeleton Poser | SteamVR Unity Plugin",
    "keywords": "Skeleton Poser The Basics The SteamVR_Skeleton_Poser script is designed to function independently from the SteamVR Interaction System and can be added to your own systems, but the SteamVR Interaction system works with it right out of the box and is a great way to quickly try it out. SteamVR_Skeleton_Poses are ScriptableObjects that contain a particular hand pose and some per-finger animation info. Multiple poses can be added to and modified via the SteamVR_Skeleton_Poser script with its handy UI. You can add any number of poses to one Poser, but you will likely only need a few at most. Using the buttons in the pose editor, new poses can be created, pose data can be copied between poses, pose data can be mirrored, poses can be reset to a variety of bases, and changes to skeletons in the scene view can be saved as changes to a pose. You can also add per-finger additive animation via the finger movement dropdowns. This lets the fingers move based on the skeleton input while remaining constrained to the pose. There are several types of finger movement: Static – no finger movement. Only use pose. Free – free finger movement. Ignore pose. Extend – fingers can lift up to a fully extended position, but not curl any farther down than where the pose has them Contract – fingers can curl to a fully contracted position, but cannot open any further than where the pose has them. Using the Poser’s Blending Editor tab, you can set up blending behaviours to mix and stack multiple poses in complex ways. Think of the blending editor as an animator controller, and the poses as animations. There are three types of blending behaviours you can add: Manual, analog action, or boolean action. Manual behaviours will have to be driven by code, with an easy call of: Poser.SetBlendingBehaviourValue(string behaviourName, float value) Analog and boolean action behaviours, on the other hand, are automatically driven by a chosen action. The smoothing value will be the speed of smoothing applied to them, with 0 for none. Smoothing is not required for analog actions, but is recommended for Boolean-driven behaviours as they will look much… smoother. Using the Skeleton Poser with the SteamVR Interaction system The Poser component will work automatically with the SteamVR Interaction system. All you need to do is add the SteamVR_Skeleton_Poser script to an interactable GameObject. There are a couple settings on the interactable you should make sure to change though: Disable Interactable.HideHandOnAttach . This would hide your beautiful poses if you left it on! Enable Interactable.HideControllerOnAttach . This will make sure your controller doesn't get in the way of your hand poses. If you're creating an interactable that you want to be able to pick up, add the Throwable script to it. If you want that throwable to not pass through the environment, set only these attachment flags: SnapOnAttach, DetachFromOtherHand, VelocityMovement, TurnOffGravity . That is all that is needed to get a simple interactable with poser support. Using the Skeleton Poser with Your Own Framework As also mentioned before, the SteamVR_Skeleton_Poser script is designed to function independently from the SteamVR Interaction System. If you are using the SteamVR_Behaviour_Skeleton script to animate your hand, you can tell it to blend to the output of a particular poser with a call of BlendToPoser() . If you are using a different solution to animate your skeleton, the Poser can generate poses on command in the format of the SteamVR_Skeleton_PoseSnapshot dataclass, which holds object offset and position/rotation for all the bones. Call poser.GetBlendedPose , passing either a SteamVR_Behaviour_Skeleton or a SteamVR_Action_Skeleton and SteamVR_Input_Sources hand identifier. This will give you a fully composited pose according to the various behaviours and options on that particular poser, which you can apply freely to your skeleton. Check out this video for another overview of the system and a step-by-step demonstration of setting up poses!"
  },
  "api/Valve.VR.SteamVR_Utils.html": {
    "href": "api/Valve.VR.SteamVR_Utils.html",
    "title": "Class SteamVR_Utils | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Utils Inheritance System.Object SteamVR_Utils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public static class SteamVR_Utils Methods Abs(Single) Declaration public static float Abs(float A) Parameters Type Name Description System.Single A Returns Type Description System.Single Abs(Vector2) Declaration public static Vector2 Abs(Vector2 A) Parameters Type Name Description UnityEngine.Vector2 A Returns Type Description UnityEngine.Vector2 Abs(Vector3) Declaration public static Vector3 Abs(Vector3 A) Parameters Type Name Description UnityEngine.Vector3 A Returns Type Description UnityEngine.Vector3 CallSystemFn(SteamVR_Utils.SystemFn, Object[]) Declaration public static object CallSystemFn(SteamVR_Utils.SystemFn fn, params object[] args) Parameters Type Name Description SteamVR_Utils.SystemFn fn System.Object [] args Returns Type Description System.Object ConvertToForwardSlashes(String) Declaration public static string ConvertToForwardSlashes(string fromString) Parameters Type Name Description System.String fromString Returns Type Description System.String DrawVelocity(Int32, Vector3, Vector3, Single) Declaration public static void DrawVelocity(int key, Vector3 position, Vector3 velocity, float destroyAfterSeconds = 5F) Parameters Type Name Description System.Int32 key UnityEngine.Vector3 position UnityEngine.Vector3 velocity System.Single destroyAfterSeconds DrawVelocity(Int32, Vector3, Vector3, Color, Single) Declaration public static void DrawVelocity(int key, Vector3 position, Vector3 velocity, Color color, float destroyAfterSeconds = 5F) Parameters Type Name Description System.Int32 key UnityEngine.Vector3 position UnityEngine.Vector3 velocity UnityEngine.Color color System.Single destroyAfterSeconds GetBadMD5Hash(Byte[]) Declaration public static string GetBadMD5Hash(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.String GetBadMD5Hash(String) Bad because the secret key is here in plain text Declaration public static string GetBadMD5Hash(string usedString) Parameters Type Name Description System.String usedString Returns Type Description System.String GetBadMD5HashFromFile(String) Declaration public static string GetBadMD5HashFromFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.String GetLossyScale(Transform) Declaration public static float GetLossyScale(Transform forTransform) Parameters Type Name Description UnityEngine.Transform forTransform Returns Type Description System.Single GetPosition(Matrix4x4) Declaration public static Vector3 GetPosition(this Matrix4x4 matrix) Parameters Type Name Description UnityEngine.Matrix4x4 matrix Returns Type Description UnityEngine.Vector3 GetPosition(HmdMatrix34_t) Declaration public static Vector3 GetPosition(HmdMatrix34_t matrix) Parameters Type Name Description HmdMatrix34_t matrix Returns Type Description UnityEngine.Vector3 GetRotation(Matrix4x4) Declaration public static Quaternion GetRotation(this Matrix4x4 matrix) Parameters Type Name Description UnityEngine.Matrix4x4 matrix Returns Type Description UnityEngine.Quaternion GetRotation(HmdMatrix34_t) Declaration public static Quaternion GetRotation(HmdMatrix34_t matrix) Parameters Type Name Description HmdMatrix34_t matrix Returns Type Description UnityEngine.Quaternion GetScale(Matrix4x4) Declaration public static Vector3 GetScale(this Matrix4x4 m) Parameters Type Name Description UnityEngine.Matrix4x4 m Returns Type Description UnityEngine.Vector3 InverseLerp(Double, Double, Double) Declaration public static double InverseLerp(double from, double to, double result) Parameters Type Name Description System.Double from System.Double to System.Double result Returns Type Description System.Double InverseLerp(Single, Single, Single) Declaration public static float InverseLerp(float from, float to, float result) Parameters Type Name Description System.Single from System.Single to System.Single result Returns Type Description System.Single InverseLerp(Vector3, Vector3, Vector3) Declaration public static float InverseLerp(Vector3 from, Vector3 to, Vector3 result) Parameters Type Name Description UnityEngine.Vector3 from UnityEngine.Vector3 to UnityEngine.Vector3 result Returns Type Description System.Single IsValid(Quaternion) Declaration public static bool IsValid(Quaternion rotation) Parameters Type Name Description UnityEngine.Quaternion rotation Returns Type Description System.Boolean IsValid(Vector3) Declaration public static bool IsValid(Vector3 vector) Parameters Type Name Description UnityEngine.Vector3 vector Returns Type Description System.Boolean Lerp(Double, Double, Double) Declaration public static double Lerp(double from, double to, double amount) Parameters Type Name Description System.Double from System.Double to System.Double amount Returns Type Description System.Double Lerp(Single, Single, Single) Declaration public static float Lerp(float from, float to, float amount) Parameters Type Name Description System.Single from System.Single to System.Single amount Returns Type Description System.Single Lerp(Vector3, Vector3, Single) Declaration public static Vector3 Lerp(Vector3 from, Vector3 to, float amount) Parameters Type Name Description UnityEngine.Vector3 from UnityEngine.Vector3 to System.Single amount Returns Type Description UnityEngine.Vector3 Saturate(Single) Declaration public static float Saturate(float A) Parameters Type Name Description System.Single A Returns Type Description System.Single Saturate(Vector2) Declaration public static Vector2 Saturate(Vector2 A) Parameters Type Name Description UnityEngine.Vector2 A Returns Type Description UnityEngine.Vector2 Saturate(Vector3) Declaration public static Vector3 Saturate(Vector3 A) Parameters Type Name Description UnityEngine.Vector3 A Returns Type Description UnityEngine.Vector3 Slerp(Quaternion, Quaternion, Single) Declaration public static Quaternion Slerp(Quaternion A, Quaternion B, float time) Parameters Type Name Description UnityEngine.Quaternion A UnityEngine.Quaternion B System.Single time Returns Type Description UnityEngine.Quaternion TakeStereoScreenshot(UInt32, GameObject, Int32, Single, ref String, ref String) Declaration public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename) Parameters Type Name Description System.UInt32 screenshotHandle UnityEngine.GameObject target System.Int32 cellSize System.Single ipd System.String previewFilename System.String VRFilename"
  },
  "api/Valve.VR.SteamVR_Utils.SystemFn.html": {
    "href": "api/Valve.VR.SteamVR_Utils.SystemFn.html",
    "title": "Delegate SteamVR_Utils.SystemFn | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Utils.SystemFn Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate object SystemFn(CVRSystem system, params object[] args); Parameters Type Name Description CVRSystem system System.Object [] args Returns Type Description System.Object"
  },
  "api/Valve.VR.SteamVR_PlayArea.Size.html": {
    "href": "api/Valve.VR.SteamVR_PlayArea.Size.html",
    "title": "Enum SteamVR_PlayArea.Size | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_PlayArea.Size Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum Size Fields Name Description _200x150 _300x225 _400x300 Calibrated"
  },
  "api/Valve.VR.SteamVR_Overlay.html": {
    "href": "api/Valve.VR.SteamVR_Overlay.html",
    "title": "Class SteamVR_Overlay | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Overlay Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Overlay Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Overlay : MonoBehaviour Fields alpha Declaration [Tooltip(\"Opacity\")] [Range(0F, 1F)] public float alpha Field Value Type Description System.Single antialias Declaration public bool antialias Field Value Type Description System.Boolean curved Declaration public bool curved Field Value Type Description System.Boolean curvedRange Declaration public Vector2 curvedRange Field Value Type Description UnityEngine.Vector2 distance Declaration [Tooltip(\"Distance from surface.\")] public float distance Field Value Type Description System.Single highquality Declaration public bool highquality Field Value Type Description System.Boolean inputMethod Declaration public VROverlayInputMethod inputMethod Field Value Type Description VROverlayInputMethod mouseScale Declaration public Vector2 mouseScale Field Value Type Description UnityEngine.Vector2 scale Declaration [Tooltip(\"Size of overlay view.\")] public float scale Field Value Type Description System.Single texture Declaration public Texture texture Field Value Type Description UnityEngine.Texture uvOffset Declaration public Vector4 uvOffset Field Value Type Description UnityEngine.Vector4 Properties instance Declaration public static SteamVR_Overlay instance { get; } Property Value Type Description SteamVR_Overlay key Declaration public static string key { get; } Property Value Type Description System.String Methods ComputeIntersection(Vector3, Vector3, ref SteamVR_Overlay.IntersectionResults) Declaration public bool ComputeIntersection(Vector3 source, Vector3 direction, ref SteamVR_Overlay.IntersectionResults results) Parameters Type Name Description UnityEngine.Vector3 source UnityEngine.Vector3 direction SteamVR_Overlay.IntersectionResults results Returns Type Description System.Boolean PollNextEvent(ref VREvent_t) Declaration public bool PollNextEvent(ref VREvent_t pEvent) Parameters Type Name Description VREvent_t pEvent Returns Type Description System.Boolean UpdateOverlay() Declaration public void UpdateOverlay()"
  },
  "api/Valve.VR.SteamVR_Overlay.IntersectionResults.html": {
    "href": "api/Valve.VR.SteamVR_Overlay.IntersectionResults.html",
    "title": "Struct SteamVR_Overlay.IntersectionResults | SteamVR Unity Plugin",
    "keywords": "Struct SteamVR_Overlay.IntersectionResults Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct IntersectionResults Fields distance Declaration public float distance Field Value Type Description System.Single normal Declaration public Vector3 normal Field Value Type Description UnityEngine.Vector3 point Declaration public Vector3 point Field Value Type Description UnityEngine.Vector3 UVs Declaration public Vector2 UVs Field Value Type Description UnityEngine.Vector2"
  },
  "api/Valve.VR.SteamVR_Menu.html": {
    "href": "api/Valve.VR.SteamVR_Menu.html",
    "title": "Class SteamVR_Menu | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Menu Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Menu Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Menu : MonoBehaviour Fields background Declaration public Texture background Field Value Type Description UnityEngine.Texture cursor Declaration public Texture cursor Field Value Type Description UnityEngine.Texture logo Declaration public Texture logo Field Value Type Description UnityEngine.Texture logoHeight Declaration public float logoHeight Field Value Type Description System.Single menuOffset Declaration public float menuOffset Field Value Type Description System.Single scaleLimits Declaration public Vector2 scaleLimits Field Value Type Description UnityEngine.Vector2 scaleRate Declaration public float scaleRate Field Value Type Description System.Single Properties scale Declaration public float scale { get; } Property Value Type Description System.Single texture Declaration public RenderTexture texture { get; } Property Value Type Description UnityEngine.RenderTexture Methods HideMenu() Declaration public void HideMenu() ShowMenu() Declaration public void ShowMenu()"
  },
  "api/Valve.VR.SteamVR_Behaviour_Vector3Event.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Vector3Event.html",
    "title": "Class SteamVR_Behaviour_Vector3Event | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Behaviour_Vector3Event Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < SteamVR_Behaviour_Vector3 , SteamVR_Input_Sources , UnityEngine.Vector3 , UnityEngine.Vector3 > SteamVR_Behaviour_Vector3Event Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>.AddListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>.RemoveListener(UnityEngine.Events.UnityAction<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3>.Invoke(Valve.VR.SteamVR_Behaviour_Vector3, Valve.VR.SteamVR_Input_Sources, UnityEngine.Vector3, UnityEngine.Vector3) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Behaviour_Vector3Event : UnityEvent<SteamVR_Behaviour_Vector3, SteamVR_Input_Sources, Vector3, Vector3>, ISerializationCallbackReceiver Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.Compositor_FrameTiming.html": {
    "href": "api/Valve.VR.Compositor_FrameTiming.html",
    "title": "Struct Compositor_FrameTiming | SteamVR Unity Plugin",
    "keywords": "Struct Compositor_FrameTiming Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct Compositor_FrameTiming Fields m_flClientFrameIntervalMs Declaration public float m_flClientFrameIntervalMs Field Value Type Description System.Single m_flCompositorIdleCpuMs Declaration public float m_flCompositorIdleCpuMs Field Value Type Description System.Single m_flCompositorRenderCpuMs Declaration public float m_flCompositorRenderCpuMs Field Value Type Description System.Single m_flCompositorRenderGpuMs Declaration public float m_flCompositorRenderGpuMs Field Value Type Description System.Single m_flCompositorRenderStartMs Declaration public float m_flCompositorRenderStartMs Field Value Type Description System.Single m_flCompositorUpdateEndMs Declaration public float m_flCompositorUpdateEndMs Field Value Type Description System.Single m_flCompositorUpdateStartMs Declaration public float m_flCompositorUpdateStartMs Field Value Type Description System.Single m_flNewFrameReadyMs Declaration public float m_flNewFrameReadyMs Field Value Type Description System.Single m_flNewPosesReadyMs Declaration public float m_flNewPosesReadyMs Field Value Type Description System.Single m_flPostSubmitGpuMs Declaration public float m_flPostSubmitGpuMs Field Value Type Description System.Single m_flPresentCallCpuMs Declaration public float m_flPresentCallCpuMs Field Value Type Description System.Single m_flPreSubmitGpuMs Declaration public float m_flPreSubmitGpuMs Field Value Type Description System.Single m_flSubmitFrameMs Declaration public float m_flSubmitFrameMs Field Value Type Description System.Single m_flSystemTimeInSeconds Declaration public double m_flSystemTimeInSeconds Field Value Type Description System.Double m_flTotalRenderGpuMs Declaration public float m_flTotalRenderGpuMs Field Value Type Description System.Single m_flWaitForPresentCpuMs Declaration public float m_flWaitForPresentCpuMs Field Value Type Description System.Single m_flWaitGetPosesCalledMs Declaration public float m_flWaitGetPosesCalledMs Field Value Type Description System.Single m_HmdPose Declaration public TrackedDevicePose_t m_HmdPose Field Value Type Description TrackedDevicePose_t m_nFrameIndex Declaration public uint m_nFrameIndex Field Value Type Description System.UInt32 m_nNumDroppedFrames Declaration public uint m_nNumDroppedFrames Field Value Type Description System.UInt32 m_nNumFramePresents Declaration public uint m_nNumFramePresents Field Value Type Description System.UInt32 m_nNumMisPresented Declaration public uint m_nNumMisPresented Field Value Type Description System.UInt32 m_nNumVSyncsReadyForUse Declaration public uint m_nNumVSyncsReadyForUse Field Value Type Description System.UInt32 m_nNumVSyncsToFirstView Declaration public uint m_nNumVSyncsToFirstView Field Value Type Description System.UInt32 m_nReprojectionFlags Declaration public uint m_nReprojectionFlags Field Value Type Description System.UInt32 m_nSize Declaration public uint m_nSize Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VRControllerState_t.html": {
    "href": "api/Valve.VR.VRControllerState_t.html",
    "title": "Struct VRControllerState_t | SteamVR Unity Plugin",
    "keywords": "Struct VRControllerState_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRControllerState_t Fields rAxis0 Declaration public VRControllerAxis_t rAxis0 Field Value Type Description VRControllerAxis_t rAxis1 Declaration public VRControllerAxis_t rAxis1 Field Value Type Description VRControllerAxis_t rAxis2 Declaration public VRControllerAxis_t rAxis2 Field Value Type Description VRControllerAxis_t rAxis3 Declaration public VRControllerAxis_t rAxis3 Field Value Type Description VRControllerAxis_t rAxis4 Declaration public VRControllerAxis_t rAxis4 Field Value Type Description VRControllerAxis_t ulButtonPressed Declaration public ulong ulButtonPressed Field Value Type Description System.UInt64 ulButtonTouched Declaration public ulong ulButtonTouched Field Value Type Description System.UInt64 unPacketNum Declaration public uint unPacketNum Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VRControllerAxis_t.html": {
    "href": "api/Valve.VR.VRControllerAxis_t.html",
    "title": "Struct VRControllerAxis_t | SteamVR Unity Plugin",
    "keywords": "Struct VRControllerAxis_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRControllerAxis_t Fields x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single"
  },
  "api/Valve.VR.VRBoneTransform_t.html": {
    "href": "api/Valve.VR.VRBoneTransform_t.html",
    "title": "Struct VRBoneTransform_t | SteamVR Unity Plugin",
    "keywords": "Struct VRBoneTransform_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRBoneTransform_t Fields orientation Declaration public HmdQuaternionf_t orientation Field Value Type Description HmdQuaternionf_t position Declaration public HmdVector4_t position Field Value Type Description HmdVector4_t"
  },
  "api/Valve.VR.VRActiveActionSet_t.html": {
    "href": "api/Valve.VR.VRActiveActionSet_t.html",
    "title": "Struct VRActiveActionSet_t | SteamVR Unity Plugin",
    "keywords": "Struct VRActiveActionSet_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VRActiveActionSet_t Fields nPriority Declaration public int nPriority Field Value Type Description System.Int32 ulActionSet Declaration public ulong ulActionSet Field Value Type Description System.UInt64 ulRestrictedToDevice Declaration public ulong ulRestrictedToDevice Field Value Type Description System.UInt64 ulSecondaryActionSet Declaration public ulong ulSecondaryActionSet Field Value Type Description System.UInt64 unPadding Declaration public uint unPadding Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.SteamVR_Ears.html": {
    "href": "api/Valve.VR.SteamVR_Ears.html",
    "title": "Class SteamVR_Ears | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Ears Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_Ears Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [RequireComponent(typeof(AudioListener))] public class SteamVR_Ears : MonoBehaviour Fields vrcam Declaration public SteamVR_Camera vrcam Field Value Type Description SteamVR_Camera"
  },
  "api/Valve.VR.SteamVR_CameraMask.html": {
    "href": "api/Valve.VR.SteamVR_CameraMask.html",
    "title": "Class SteamVR_CameraMask | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_CameraMask Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_CameraMask Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] public class SteamVR_CameraMask : MonoBehaviour"
  },
  "api/Valve.VR.InteractionSystem.BalloonColliders.html": {
    "href": "api/Valve.VR.InteractionSystem.BalloonColliders.html",
    "title": "Class BalloonColliders | SteamVR Unity Plugin",
    "keywords": "Class BalloonColliders Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour BalloonColliders Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class BalloonColliders : MonoBehaviour Fields colliders Declaration public GameObject[] colliders Field Value Type Description UnityEngine.GameObject []"
  },
  "api/Valve.VR.InteractionSystem.Balloon.html": {
    "href": "api/Valve.VR.InteractionSystem.Balloon.html",
    "title": "Class Balloon | SteamVR Unity Plugin",
    "keywords": "Class Balloon Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Balloon Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Balloon : MonoBehaviour Fields burstOnLifetimeEnd Declaration public bool burstOnLifetimeEnd Field Value Type Description System.Boolean collisionSound Declaration public SoundPlayOneshot collisionSound Field Value Type Description SoundPlayOneshot lifetime Declaration public float lifetime Field Value Type Description System.Single lifetimeEndParticlePrefab Declaration public GameObject lifetimeEndParticlePrefab Field Value Type Description UnityEngine.GameObject lifetimeEndSound Declaration public SoundPlayOneshot lifetimeEndSound Field Value Type Description SoundPlayOneshot maxVelocity Declaration public float maxVelocity Field Value Type Description System.Single popPrefab Declaration public GameObject popPrefab Field Value Type Description UnityEngine.GameObject Methods SetColor(Balloon.BalloonColor) Declaration public void SetColor(Balloon.BalloonColor color) Parameters Type Name Description Balloon.BalloonColor color"
  },
  "api/Valve.VR.HmdVector4_t.html": {
    "href": "api/Valve.VR.HmdVector4_t.html",
    "title": "Struct HmdVector4_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdVector4_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdVector4_t Fields v0 Declaration public float v0 Field Value Type Description System.Single v1 Declaration public float v1 Field Value Type Description System.Single v2 Declaration public float v2 Field Value Type Description System.Single v3 Declaration public float v3 Field Value Type Description System.Single"
  },
  "api/Valve.VR.HmdVector3_t.html": {
    "href": "api/Valve.VR.HmdVector3_t.html",
    "title": "Struct HmdVector3_t | SteamVR Unity Plugin",
    "keywords": "Struct HmdVector3_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct HmdVector3_t Fields v0 Declaration public float v0 Field Value Type Description System.Single v1 Declaration public float v1 Field Value Type Description System.Single v2 Declaration public float v2 Field Value Type Description System.Single"
  },
  "api/Valve.VR.EVSync.html": {
    "href": "api/Valve.VR.EVSync.html",
    "title": "Enum EVSync | SteamVR Unity Plugin",
    "keywords": "Enum EVSync Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVSync Fields Name Description None NoWaitRender WaitRender"
  },
  "api/Valve.VR.EVRTrackedCameraFrameType.html": {
    "href": "api/Valve.VR.EVRTrackedCameraFrameType.html",
    "title": "Enum EVRTrackedCameraFrameType | SteamVR Unity Plugin",
    "keywords": "Enum EVRTrackedCameraFrameType Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRTrackedCameraFrameType Fields Name Description Distorted MAX_CAMERA_FRAME_TYPES MaximumUndistorted Undistorted"
  },
  "api/Valve.VR.EVRScreenshotError.html": {
    "href": "api/Valve.VR.EVRScreenshotError.html",
    "title": "Enum EVRScreenshotError | SteamVR Unity Plugin",
    "keywords": "Enum EVRScreenshotError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRScreenshotError Fields Name Description BufferTooSmall IncompatibleVersion None NotFound RequestFailed ScreenshotAlreadyInProgress"
  },
  "api/Valve.VR.EVRRenderModelError.html": {
    "href": "api/Valve.VR.EVRRenderModelError.html",
    "title": "Enum EVRRenderModelError | SteamVR Unity Plugin",
    "keywords": "Enum EVRRenderModelError Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRRenderModelError Fields Name Description BufferTooSmall InvalidArg InvalidModel InvalidTexture Loading MultipleShapes MultipleTextures None NoShapes NotEnoughNormals NotEnoughTexCoords NotSupported TooManyVertices"
  },
  "api/Valve.VR.SteamVR_Skeleton_HandMask.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_HandMask.html",
    "title": "Class SteamVR_Skeleton_HandMask | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_HandMask Simple mask for fingers Inheritance System.Object SteamVR_Skeleton_HandMask Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SteamVR_Skeleton_HandMask Constructors SteamVR_Skeleton_HandMask() Declaration public SteamVR_Skeleton_HandMask() Fields fullMask Declaration public static readonly SteamVR_Skeleton_HandMask fullMask Field Value Type Description SteamVR_Skeleton_HandMask index Declaration public bool index Field Value Type Description System.Boolean middle Declaration public bool middle Field Value Type Description System.Boolean palm Declaration public bool palm Field Value Type Description System.Boolean pinky Declaration public bool pinky Field Value Type Description System.Boolean ring Declaration public bool ring Field Value Type Description System.Boolean thumb Declaration public bool thumb Field Value Type Description System.Boolean values Declaration public bool[] values Field Value Type Description System.Boolean [] Methods Apply() Declaration protected void Apply() GetFinger(Int32) Declaration public bool GetFinger(int i) Parameters Type Name Description System.Int32 i Returns Type Description System.Boolean Reset() All elements on Declaration public void Reset() SetFinger(Int32, Boolean) Declaration public void SetFinger(int i, bool value) Parameters Type Name Description System.Int32 i System.Boolean value"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerSplayIndexes.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerSplayIndexes.html",
    "title": "Class SteamVR_Skeleton_FingerSplayIndexes | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_FingerSplayIndexes The order of the fingerSplays that SteamVR Skeleton Input outputs Inheritance System.Object SteamVR_Skeleton_FingerSplayIndexes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_FingerSplayIndexes Fields enumArray Declaration public static SteamVR_Skeleton_FingerSplayIndexEnum[] enumArray Field Value Type Description SteamVR_Skeleton_FingerSplayIndexEnum [] indexMiddle Declaration public const int indexMiddle = 1 Field Value Type Description System.Int32 middleRing Declaration public const int middleRing = 2 Field Value Type Description System.Int32 ringPinky Declaration public const int ringPinky = 3 Field Value Type Description System.Int32 thumbIndex Declaration public const int thumbIndex = 0 Field Value Type Description System.Int32"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum.html",
    "title": "Enum SteamVR_Skeleton_FingerSplayIndexEnum | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skeleton_FingerSplayIndexEnum Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_Skeleton_FingerSplayIndexEnum Fields Name Description indexMiddle middleRing ringPinky thumbIndex"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerIndexes.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerIndexes.html",
    "title": "Class SteamVR_Skeleton_FingerIndexes | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Skeleton_FingerIndexes The order of the fingers that SteamVR Skeleton Input outputs Inheritance System.Object SteamVR_Skeleton_FingerIndexes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_Skeleton_FingerIndexes Fields enumArray Declaration public static SteamVR_Skeleton_FingerIndexEnum[] enumArray Field Value Type Description SteamVR_Skeleton_FingerIndexEnum [] index Declaration public const int index = 1 Field Value Type Description System.Int32 middle Declaration public const int middle = 2 Field Value Type Description System.Int32 pinky Declaration public const int pinky = 4 Field Value Type Description System.Int32 ring Declaration public const int ring = 3 Field Value Type Description System.Int32 thumb Declaration public const int thumb = 0 Field Value Type Description System.Int32"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerIndexEnum.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerIndexEnum.html",
    "title": "Enum SteamVR_Skeleton_FingerIndexEnum | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skeleton_FingerIndexEnum Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_Skeleton_FingerIndexEnum Fields Name Description index middle pinky ring thumb"
  },
  "api/Valve.VR.SteamVR_Skeleton_FingerExtensionTypes.html": {
    "href": "api/Valve.VR.SteamVR_Skeleton_FingerExtensionTypes.html",
    "title": "Enum SteamVR_Skeleton_FingerExtensionTypes | SteamVR Unity Plugin",
    "keywords": "Enum SteamVR_Skeleton_FingerExtensionTypes Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum SteamVR_Skeleton_FingerExtensionTypes Fields Name Description Contract Extend Free Static"
  },
  "api/Valve.VR.SteamVR_HistoryStep.html": {
    "href": "api/Valve.VR.SteamVR_HistoryStep.html",
    "title": "Class SteamVR_HistoryStep | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_HistoryStep Inheritance System.Object SteamVR_HistoryStep Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_HistoryStep Fields angularVelocity Declaration public Vector3 angularVelocity Field Value Type Description UnityEngine.Vector3 position Declaration public Vector3 position Field Value Type Description UnityEngine.Vector3 rotation Declaration public Quaternion rotation Field Value Type Description UnityEngine.Quaternion timeInTicks Declaration public long timeInTicks Field Value Type Description System.Int64 velocity Declaration public Vector3 velocity Field Value Type Description UnityEngine.Vector3"
  },
  "api/Valve.VR.SteamVR_HistoryBuffer.html": {
    "href": "api/Valve.VR.SteamVR_HistoryBuffer.html",
    "title": "Class SteamVR_HistoryBuffer | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_HistoryBuffer Inheritance System.Object SteamVR_RingBuffer < SteamVR_HistoryStep > SteamVR_HistoryBuffer Inherited Members SteamVR_RingBuffer<SteamVR_HistoryStep>.buffer SteamVR_RingBuffer<SteamVR_HistoryStep>.currentIndex SteamVR_RingBuffer<SteamVR_HistoryStep>.lastElement SteamVR_RingBuffer<SteamVR_HistoryStep>.Add(SteamVR_HistoryStep) SteamVR_RingBuffer<SteamVR_HistoryStep>.StepForward() SteamVR_RingBuffer<SteamVR_HistoryStep>.GetAtIndex(Int32) SteamVR_RingBuffer<SteamVR_HistoryStep>.GetLast() SteamVR_RingBuffer<SteamVR_HistoryStep>.GetLastIndex() SteamVR_RingBuffer<SteamVR_HistoryStep>.Clear() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_HistoryBuffer : SteamVR_RingBuffer<SteamVR_HistoryStep> Constructors SteamVR_HistoryBuffer(Int32) Declaration public SteamVR_HistoryBuffer(int size) Parameters Type Name Description System.Int32 size Methods GetAverageVelocities(out Vector3, out Vector3, Int32, Int32) Declaration public void GetAverageVelocities(out Vector3 velocity, out Vector3 angularVelocity, int forFrames, int startFrame = -1) Parameters Type Name Description UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity System.Int32 forFrames System.Int32 startFrame GetTopVelocity(Int32, Int32) Declaration public int GetTopVelocity(int forFrames, int addFrames = 0) Parameters Type Name Description System.Int32 forFrames System.Int32 addFrames Returns Type Description System.Int32 GetVelocityMagnitudeTrend(Int32, Int32) Declaration public float GetVelocityMagnitudeTrend(int toIndex = -1, int fromIndex = -1) Parameters Type Name Description System.Int32 toIndex System.Int32 fromIndex Returns Type Description System.Single IsValid(SteamVR_HistoryStep) Declaration public bool IsValid(SteamVR_HistoryStep step) Parameters Type Name Description SteamVR_HistoryStep step Returns Type Description System.Boolean Update(Vector3, Quaternion, Vector3, Vector3) Declaration public void Update(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity) Parameters Type Name Description UnityEngine.Vector3 position UnityEngine.Quaternion rotation UnityEngine.Vector3 velocity UnityEngine.Vector3 angularVelocity"
  },
  "api/Valve.VR.SteamVR_RingBuffer-1.html": {
    "href": "api/Valve.VR.SteamVR_RingBuffer-1.html",
    "title": "Class SteamVR_RingBuffer<T> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_RingBuffer<T> Inheritance System.Object SteamVR_RingBuffer<T> SteamVR_HistoryBuffer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class SteamVR_RingBuffer<T> Type Parameters Name Description T Constructors SteamVR_RingBuffer(Int32) Declaration public SteamVR_RingBuffer(int size) Parameters Type Name Description System.Int32 size Fields buffer Declaration protected T[] buffer Field Value Type Description T[] currentIndex Declaration protected int currentIndex Field Value Type Description System.Int32 lastElement Declaration protected T lastElement Field Value Type Description T Methods Add(T) Declaration public void Add(T newElement) Parameters Type Name Description T newElement Clear() Declaration public void Clear() GetAtIndex(Int32) Declaration public virtual T GetAtIndex(int atIndex) Parameters Type Name Description System.Int32 atIndex Returns Type Description T GetLast() Declaration public virtual T GetLast() Returns Type Description T GetLastIndex() Declaration public virtual int GetLastIndex() Returns Type Description System.Int32 StepForward() Declaration public virtual void StepForward()"
  },
  "api/Valve.VR.SteamVR_RenderModel.html": {
    "href": "api/Valve.VR.SteamVR_RenderModel.html",
    "title": "Class SteamVR_RenderModel | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_RenderModel Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SteamVR_RenderModel Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [ExecuteInEditMode] public class SteamVR_RenderModel : MonoBehaviour Fields controllerModeState Declaration public RenderModel_ControllerMode_State_t controllerModeState Field Value Type Description RenderModel_ControllerMode_State_t createComponents Declaration [Tooltip(\"If available, break down into separate components instead of loading as a single mesh.\")] public bool createComponents Field Value Type Description System.Boolean index Declaration public SteamVR_TrackedObject.EIndex index Field Value Type Description SteamVR_TrackedObject.EIndex inputSource Declaration protected SteamVR_Input_Sources inputSource Field Value Type Description SteamVR_Input_Sources k_localTransformName Declaration public const string k_localTransformName = \"attach\" Field Value Type Description System.String materials Declaration public static Hashtable materials Field Value Type Description System.Collections.Hashtable modelOverride Declaration [Tooltip(\"Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged. Use tracked device index instead to ensure the correct model is displayed for all users.\")] public string modelOverride Field Value Type Description System.String modelOverrideWarning Declaration public const string modelOverrideWarning = \"Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged. Use tracked device index instead to ensure the correct model is displayed for all users.\" Field Value Type Description System.String models Declaration public static Hashtable models Field Value Type Description System.Collections.Hashtable shader Declaration [Tooltip(\"Shader to apply to model.\")] public Shader shader Field Value Type Description UnityEngine.Shader updateDynamically Declaration [Tooltip(\"Update transforms of components at runtime to reflect user action.\")] public bool updateDynamically Field Value Type Description System.Boolean verbose Declaration [Tooltip(\"Enable to print out when render models are loaded.\")] public bool verbose Field Value Type Description System.Boolean Properties initializedAttachPoints Declaration public bool initializedAttachPoints { get; set; } Property Value Type Description System.Boolean renderModelName Declaration public string renderModelName { get; } Property Value Type Description System.String Methods FindTransformByName(String, Transform) Declaration public Transform FindTransformByName(string componentName, Transform inTransform = null) Parameters Type Name Description System.String componentName UnityEngine.Transform inTransform Returns Type Description UnityEngine.Transform GetComponentTransform(String) Declaration public Transform GetComponentTransform(string componentName) Parameters Type Name Description System.String componentName Returns Type Description UnityEngine.Transform SetDeviceIndex(Int32) Declaration public void SetDeviceIndex(int newIndex) Parameters Type Name Description System.Int32 newIndex SetInputSource(SteamVR_Input_Sources) Declaration public void SetInputSource(SteamVR_Input_Sources newInputSource) Parameters Type Name Description SteamVR_Input_Sources newInputSource SetMeshRendererState(Boolean) Declaration public void SetMeshRendererState(bool state) Parameters Type Name Description System.Boolean state UpdateComponents(CVRRenderModels) Declaration public void UpdateComponents(CVRRenderModels renderModels) Parameters Type Name Description CVRRenderModels renderModels UpdateModel() Declaration public void UpdateModel()"
  },
  "api/Valve.VR.SteamVR_Events.Event-3.html": {
    "href": "api/Valve.VR.SteamVR_Events.Event-3.html",
    "title": "Class SteamVR_Events.Event<T0, T1, T2> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Event<T0, T1, T2> Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <T0, T1, T2> SteamVR_Events.Event<T0, T1, T2> Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<T0, T1, T2>.AddListener(UnityEngine.Events.UnityAction<T0, T1, T2>) UnityEngine.Events.UnityEvent<T0, T1, T2>.RemoveListener(UnityEngine.Events.UnityAction<T0, T1, T2>) UnityEngine.Events.UnityEvent<T0, T1, T2>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<T0, T1, T2>.Invoke(T0, T1, T2) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>, ISerializationCallbackReceiver Type Parameters Name Description T0 T1 T2 Methods Listen(UnityAction<T0, T1, T2>) Declaration public void Listen(UnityAction<T0, T1, T2> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T0, T1, T2> action Remove(UnityAction<T0, T1, T2>) Declaration public void Remove(UnityAction<T0, T1, T2> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T0, T1, T2> action Send(T0, T1, T2) Declaration public void Send(T0 arg0, T1 arg1, T2 arg2) Parameters Type Name Description T0 arg0 T1 arg1 T2 arg2 Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Events.Event-2.html": {
    "href": "api/Valve.VR.SteamVR_Events.Event-2.html",
    "title": "Class SteamVR_Events.Event<T0, T1> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Event<T0, T1> Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <T0, T1> SteamVR_Events.Event<T0, T1> Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<T0, T1>.AddListener(UnityEngine.Events.UnityAction<T0, T1>) UnityEngine.Events.UnityEvent<T0, T1>.RemoveListener(UnityEngine.Events.UnityAction<T0, T1>) UnityEngine.Events.UnityEvent<T0, T1>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<T0, T1>.Invoke(T0, T1) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class Event<T0, T1> : UnityEvent<T0, T1>, ISerializationCallbackReceiver Type Parameters Name Description T0 T1 Methods Listen(UnityAction<T0, T1>) Declaration public void Listen(UnityAction<T0, T1> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T0, T1> action Remove(UnityAction<T0, T1>) Declaration public void Remove(UnityAction<T0, T1> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T0, T1> action Send(T0, T1) Declaration public void Send(T0 arg0, T1 arg1) Parameters Type Name Description T0 arg0 T1 arg1 Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Events.Event-1.html": {
    "href": "api/Valve.VR.SteamVR_Events.Event-1.html",
    "title": "Class SteamVR_Events.Event<T> | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.Event<T> Inheritance System.Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <T> SteamVR_Events.Event<T> Implements UnityEngine.ISerializationCallbackReceiver Inherited Members UnityEngine.Events.UnityEvent<T>.AddListener(UnityEngine.Events.UnityAction<T>) UnityEngine.Events.UnityEvent<T>.RemoveListener(UnityEngine.Events.UnityAction<T>) UnityEngine.Events.UnityEvent<T>.FindMethod_Impl(System.String, System.Object) UnityEngine.Events.UnityEvent<T>.Invoke(T) UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() UnityEngine.Events.UnityEventBase.GetPersistentEventCount() UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32) UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32) UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32, UnityEngine.Events.UnityEventCallState) UnityEngine.Events.UnityEventBase.AddListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveListener(System.Object, System.Reflection.MethodInfo) UnityEngine.Events.UnityEventBase.RemoveAllListeners() UnityEngine.Events.UnityEventBase.Invoke(System.Object[]) UnityEngine.Events.UnityEventBase.ToString() UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object, System.String, System.Type[]) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode) UnityEngine.Events.UnityEventBase.ValidateRegistration(System.Reflection.MethodInfo, System.Object, UnityEngine.Events.PersistentListenerMode, System.Type) UnityEngine.Events.UnityEventBase.RegisterPersistentListener(System.Int32, System.Object, System.Reflection.MethodInfo) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class Event<T> : UnityEvent<T>, ISerializationCallbackReceiver Type Parameters Name Description T Methods Listen(UnityAction<T>) Declaration public void Listen(UnityAction<T> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T> action Remove(UnityAction<T>) Declaration public void Remove(UnityAction<T> action) Parameters Type Name Description UnityEngine.Events.UnityAction <T> action Send(T) Declaration public void Send(T arg0) Parameters Type Name Description T arg0 Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/Valve.VR.SteamVR_Events.ActionNoArgs.html": {
    "href": "api/Valve.VR.SteamVR_Events.ActionNoArgs.html",
    "title": "Class SteamVR_Events.ActionNoArgs | SteamVR Unity Plugin",
    "keywords": "Class SteamVR_Events.ActionNoArgs Inheritance System.Object SteamVR_Events.Action SteamVR_Events.ActionNoArgs Inherited Members SteamVR_Events.Action.enabled System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax [Serializable] public class ActionNoArgs : SteamVR_Events.Action Constructors ActionNoArgs(SteamVR_Events.Event, UnityAction) Declaration public ActionNoArgs(SteamVR_Events.Event _event, UnityAction action) Parameters Type Name Description SteamVR_Events.Event _event UnityEngine.Events.UnityAction action Methods Enable(Boolean) Declaration public override void Enable(bool enabled) Parameters Type Name Description System.Boolean enabled Overrides SteamVR_Events.Action.Enable(Boolean)"
  },
  "api/Valve.VR.SteamVR_Behaviour_Single.UpdateHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Single.UpdateHandler.html",
    "title": "Delegate SteamVR_Behaviour_Single.UpdateHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Single.UpdateHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void UpdateHandler(SteamVR_Behaviour_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Behaviour_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.SteamVR_Behaviour_Single.ChangeHandler.html": {
    "href": "api/Valve.VR.SteamVR_Behaviour_Single.ChangeHandler.html",
    "title": "Delegate SteamVR_Behaviour_Single.ChangeHandler | SteamVR Unity Plugin",
    "keywords": "Delegate SteamVR_Behaviour_Single.ChangeHandler Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public delegate void ChangeHandler(SteamVR_Behaviour_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta); Parameters Type Name Description SteamVR_Behaviour_Single fromAction SteamVR_Input_Sources fromSource System.Single newAxis System.Single newDelta"
  },
  "api/Valve.VR.RenderModel_Vertex_t.html": {
    "href": "api/Valve.VR.RenderModel_Vertex_t.html",
    "title": "Struct RenderModel_Vertex_t | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_Vertex_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_Vertex_t Fields rfTextureCoord0 Declaration public float rfTextureCoord0 Field Value Type Description System.Single rfTextureCoord1 Declaration public float rfTextureCoord1 Field Value Type Description System.Single vNormal Declaration public HmdVector3_t vNormal Field Value Type Description HmdVector3_t vPosition Declaration public HmdVector3_t vPosition Field Value Type Description HmdVector3_t"
  },
  "api/Valve.VR.RenderModel_t_Packed.html": {
    "href": "api/Valve.VR.RenderModel_t_Packed.html",
    "title": "Struct RenderModel_t_Packed | SteamVR Unity Plugin",
    "keywords": "Struct RenderModel_t_Packed Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct RenderModel_t_Packed Constructors RenderModel_t_Packed(RenderModel_t) Declaration public RenderModel_t_Packed(RenderModel_t unpacked) Parameters Type Name Description RenderModel_t unpacked Fields diffuseTextureId Declaration public int diffuseTextureId Field Value Type Description System.Int32 rIndexData Declaration public IntPtr rIndexData Field Value Type Description System.IntPtr rVertexData Declaration public IntPtr rVertexData Field Value Type Description System.IntPtr unTriangleCount Declaration public uint unTriangleCount Field Value Type Description System.UInt32 unVertexCount Declaration public uint unVertexCount Field Value Type Description System.UInt32 Methods Unpack(ref RenderModel_t) Declaration public void Unpack(ref RenderModel_t unpacked) Parameters Type Name Description RenderModel_t unpacked"
  },
  "api/Valve.VR.ISteamVR_Action_Vector3.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Vector3.html",
    "title": "Interface ISteamVR_Action_Vector3 | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Vector3 Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge. Inherited Members ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Vector3 : ISteamVR_Action_In_Source, ISteamVR_Action_Source Properties axis The current float value of the action. Note: Will only return non-zero if the action is also active. Declaration Vector3 axis { get; } Property Value Type Description UnityEngine.Vector3 delta The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration Vector3 delta { get; } Property Value Type Description UnityEngine.Vector3 lastAxis The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration Vector3 lastAxis { get; } Property Value Type Description UnityEngine.Vector3 lastDelta The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration Vector3 lastDelta { get; } Property Value Type Description UnityEngine.Vector3"
  },
  "api/Valve.VR.ISteamVR_Action_Vector2.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Vector2.html",
    "title": "Interface ISteamVR_Action_Vector2 | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Vector2 Inherited Members ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Vector2 : ISteamVR_Action_In_Source, ISteamVR_Action_Source Properties axis The current float value of the action. Note: Will only return non-zero if the action is also active. Declaration Vector2 axis { get; } Property Value Type Description UnityEngine.Vector2 delta The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. Declaration Vector2 delta { get; } Property Value Type Description UnityEngine.Vector2 lastAxis The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. Declaration Vector2 lastAxis { get; } Property Value Type Description UnityEngine.Vector2 lastDelta The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. Declaration Vector2 lastDelta { get; } Property Value Type Description UnityEngine.Vector2"
  },
  "api/Valve.VR.EDeviceActivityLevel.html": {
    "href": "api/Valve.VR.EDeviceActivityLevel.html",
    "title": "Enum EDeviceActivityLevel | SteamVR Unity Plugin",
    "keywords": "Enum EDeviceActivityLevel Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EDeviceActivityLevel Fields Name Description k_EDeviceActivityLevel_Idle k_EDeviceActivityLevel_Standby k_EDeviceActivityLevel_Unknown k_EDeviceActivityLevel_UserInteraction k_EDeviceActivityLevel_UserInteraction_Timeout"
  },
  "api/Valve.VR.EAdditionalRadioFeatures.html": {
    "href": "api/Valve.VR.EAdditionalRadioFeatures.html",
    "title": "Enum EAdditionalRadioFeatures | SteamVR Unity Plugin",
    "keywords": "Enum EAdditionalRadioFeatures Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EAdditionalRadioFeatures Fields Name Description ExternalDongle HTCLinkBox InternalDongle None"
  },
  "api/Valve.VR.CVRSettings.html": {
    "href": "api/Valve.VR.CVRSettings.html",
    "title": "Class CVRSettings | SteamVR Unity Plugin",
    "keywords": "Class CVRSettings Inheritance System.Object CVRSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRSettings Methods GetBool(String, String, ref EVRSettingsError) Declaration public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey EVRSettingsError peError Returns Type Description System.Boolean GetFloat(String, String, ref EVRSettingsError) Declaration public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey EVRSettingsError peError Returns Type Description System.Single GetInt32(String, String, ref EVRSettingsError) Declaration public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey EVRSettingsError peError Returns Type Description System.Int32 GetSettingsErrorNameFromEnum(EVRSettingsError) Declaration public string GetSettingsErrorNameFromEnum(EVRSettingsError eError) Parameters Type Name Description EVRSettingsError eError Returns Type Description System.String GetString(String, String, StringBuilder, UInt32, ref EVRSettingsError) Declaration public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey System.Text.StringBuilder pchValue System.UInt32 unValueLen EVRSettingsError peError RemoveKeyInSection(String, String, ref EVRSettingsError) Declaration public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey EVRSettingsError peError RemoveSection(String, ref EVRSettingsError) Declaration public void RemoveSection(string pchSection, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection EVRSettingsError peError SetBool(String, String, Boolean, ref EVRSettingsError) Declaration public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey System.Boolean bValue EVRSettingsError peError SetFloat(String, String, Single, ref EVRSettingsError) Declaration public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey System.Single flValue EVRSettingsError peError SetInt32(String, String, Int32, ref EVRSettingsError) Declaration public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey System.Int32 nValue EVRSettingsError peError SetString(String, String, String, ref EVRSettingsError) Declaration public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError) Parameters Type Name Description System.String pchSection System.String pchSettingsKey System.String pchValue EVRSettingsError peError Sync(Boolean, ref EVRSettingsError) Declaration public bool Sync(bool bForce, ref EVRSettingsError peError) Parameters Type Name Description System.Boolean bForce EVRSettingsError peError Returns Type Description System.Boolean"
  },
  "api/Valve.VR.CVRInput.html": {
    "href": "api/Valve.VR.CVRInput.html",
    "title": "Class CVRInput | SteamVR Unity Plugin",
    "keywords": "Class CVRInput Inheritance System.Object CVRInput Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRInput Methods DecompressSkeletalBoneData(IntPtr, UInt32, EVRSkeletalTransformSpace, VRBoneTransform_t[]) Declaration public EVRInputError DecompressSkeletalBoneData(IntPtr pvCompressedBuffer, uint unCompressedBufferSize, EVRSkeletalTransformSpace eTransformSpace, VRBoneTransform_t[] pTransformArray) Parameters Type Name Description System.IntPtr pvCompressedBuffer System.UInt32 unCompressedBufferSize EVRSkeletalTransformSpace eTransformSpace VRBoneTransform_t [] pTransformArray Returns Type Description EVRInputError GetActionHandle(String, ref UInt64) Declaration public EVRInputError GetActionHandle(string pchActionName, ref ulong pHandle) Parameters Type Name Description System.String pchActionName System.UInt64 pHandle Returns Type Description EVRInputError GetActionOrigins(UInt64, UInt64, UInt64[]) Declaration public EVRInputError GetActionOrigins(ulong actionSetHandle, ulong digitalActionHandle, ulong[] originsOut) Parameters Type Name Description System.UInt64 actionSetHandle System.UInt64 digitalActionHandle System.UInt64 [] originsOut Returns Type Description EVRInputError GetActionSetHandle(String, ref UInt64) Declaration public EVRInputError GetActionSetHandle(string pchActionSetName, ref ulong pHandle) Parameters Type Name Description System.String pchActionSetName System.UInt64 pHandle Returns Type Description EVRInputError GetAnalogActionData(UInt64, ref InputAnalogActionData_t, UInt32, UInt64) Declaration public EVRInputError GetAnalogActionData(ulong action, ref InputAnalogActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice) Parameters Type Name Description System.UInt64 action InputAnalogActionData_t pActionData System.UInt32 unActionDataSize System.UInt64 ulRestrictToDevice Returns Type Description EVRInputError GetBoneCount(UInt64, ref UInt32) Declaration public EVRInputError GetBoneCount(ulong action, ref uint pBoneCount) Parameters Type Name Description System.UInt64 action System.UInt32 pBoneCount Returns Type Description EVRInputError GetBoneHierarchy(UInt64, Int32[]) Declaration public EVRInputError GetBoneHierarchy(ulong action, int[] pParentIndices) Parameters Type Name Description System.UInt64 action System.Int32 [] pParentIndices Returns Type Description EVRInputError GetBoneName(UInt64, Int32, StringBuilder, UInt32) Declaration public EVRInputError GetBoneName(ulong action, int nBoneIndex, StringBuilder pchBoneName, uint unNameBufferSize) Parameters Type Name Description System.UInt64 action System.Int32 nBoneIndex System.Text.StringBuilder pchBoneName System.UInt32 unNameBufferSize Returns Type Description EVRInputError GetDigitalActionData(UInt64, ref InputDigitalActionData_t, UInt32, UInt64) Declaration public EVRInputError GetDigitalActionData(ulong action, ref InputDigitalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice) Parameters Type Name Description System.UInt64 action InputDigitalActionData_t pActionData System.UInt32 unActionDataSize System.UInt64 ulRestrictToDevice Returns Type Description EVRInputError GetInputSourceHandle(String, ref UInt64) Declaration public EVRInputError GetInputSourceHandle(string pchInputSourcePath, ref ulong pHandle) Parameters Type Name Description System.String pchInputSourcePath System.UInt64 pHandle Returns Type Description EVRInputError GetOriginLocalizedName(UInt64, StringBuilder, UInt32, Int32) Declaration public EVRInputError GetOriginLocalizedName(ulong origin, StringBuilder pchNameArray, uint unNameArraySize, int unStringSectionsToInclude) Parameters Type Name Description System.UInt64 origin System.Text.StringBuilder pchNameArray System.UInt32 unNameArraySize System.Int32 unStringSectionsToInclude Returns Type Description EVRInputError GetOriginTrackedDeviceInfo(UInt64, ref InputOriginInfo_t, UInt32) Declaration public EVRInputError GetOriginTrackedDeviceInfo(ulong origin, ref InputOriginInfo_t pOriginInfo, uint unOriginInfoSize) Parameters Type Name Description System.UInt64 origin InputOriginInfo_t pOriginInfo System.UInt32 unOriginInfoSize Returns Type Description EVRInputError GetPoseActionData(UInt64, ETrackingUniverseOrigin, Single, ref InputPoseActionData_t, UInt32, UInt64) Declaration public EVRInputError GetPoseActionData(ulong action, ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice) Parameters Type Name Description System.UInt64 action ETrackingUniverseOrigin eOrigin System.Single fPredictedSecondsFromNow InputPoseActionData_t pActionData System.UInt32 unActionDataSize System.UInt64 ulRestrictToDevice Returns Type Description EVRInputError GetSkeletalActionData(UInt64, ref InputSkeletalActionData_t, UInt32) Declaration public EVRInputError GetSkeletalActionData(ulong action, ref InputSkeletalActionData_t pActionData, uint unActionDataSize) Parameters Type Name Description System.UInt64 action InputSkeletalActionData_t pActionData System.UInt32 unActionDataSize Returns Type Description EVRInputError GetSkeletalBoneData(UInt64, EVRSkeletalTransformSpace, EVRSkeletalMotionRange, VRBoneTransform_t[]) Declaration public EVRInputError GetSkeletalBoneData(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, VRBoneTransform_t[] pTransformArray) Parameters Type Name Description System.UInt64 action EVRSkeletalTransformSpace eTransformSpace EVRSkeletalMotionRange eMotionRange VRBoneTransform_t [] pTransformArray Returns Type Description EVRInputError GetSkeletalBoneDataCompressed(UInt64, EVRSkeletalMotionRange, IntPtr, UInt32, ref UInt32) Declaration public EVRInputError GetSkeletalBoneDataCompressed(ulong action, EVRSkeletalMotionRange eMotionRange, IntPtr pvCompressedData, uint unCompressedSize, ref uint punRequiredCompressedSize) Parameters Type Name Description System.UInt64 action EVRSkeletalMotionRange eMotionRange System.IntPtr pvCompressedData System.UInt32 unCompressedSize System.UInt32 punRequiredCompressedSize Returns Type Description EVRInputError GetSkeletalReferenceTransforms(UInt64, EVRSkeletalTransformSpace, EVRSkeletalReferencePose, VRBoneTransform_t[]) Declaration public EVRInputError GetSkeletalReferenceTransforms(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalReferencePose eReferencePose, VRBoneTransform_t[] pTransformArray) Parameters Type Name Description System.UInt64 action EVRSkeletalTransformSpace eTransformSpace EVRSkeletalReferencePose eReferencePose VRBoneTransform_t [] pTransformArray Returns Type Description EVRInputError GetSkeletalSummaryData(UInt64, ref VRSkeletalSummaryData_t) Declaration public EVRInputError GetSkeletalSummaryData(ulong action, ref VRSkeletalSummaryData_t pSkeletalSummaryData) Parameters Type Name Description System.UInt64 action VRSkeletalSummaryData_t pSkeletalSummaryData Returns Type Description EVRInputError GetSkeletalTrackingLevel(UInt64, ref EVRSkeletalTrackingLevel) Declaration public EVRInputError GetSkeletalTrackingLevel(ulong action, ref EVRSkeletalTrackingLevel pSkeletalTrackingLevel) Parameters Type Name Description System.UInt64 action EVRSkeletalTrackingLevel pSkeletalTrackingLevel Returns Type Description EVRInputError SetActionManifestPath(String) Declaration public EVRInputError SetActionManifestPath(string pchActionManifestPath) Parameters Type Name Description System.String pchActionManifestPath Returns Type Description EVRInputError ShowActionOrigins(UInt64, UInt64) Declaration public EVRInputError ShowActionOrigins(ulong actionSetHandle, ulong ulActionHandle) Parameters Type Name Description System.UInt64 actionSetHandle System.UInt64 ulActionHandle Returns Type Description EVRInputError ShowBindingsForActionSet(VRActiveActionSet_t[], UInt32, UInt64) Declaration public EVRInputError ShowBindingsForActionSet(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, ulong originToHighlight) Parameters Type Name Description VRActiveActionSet_t [] pSets System.UInt32 unSizeOfVRSelectedActionSet_t System.UInt64 originToHighlight Returns Type Description EVRInputError TriggerHapticVibrationAction(UInt64, Single, Single, Single, Single, UInt64) Declaration public EVRInputError TriggerHapticVibrationAction(ulong action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, ulong ulRestrictToDevice) Parameters Type Name Description System.UInt64 action System.Single fStartSecondsFromNow System.Single fDurationSeconds System.Single fFrequency System.Single fAmplitude System.UInt64 ulRestrictToDevice Returns Type Description EVRInputError UpdateActionState(VRActiveActionSet_t[], UInt32) Declaration public EVRInputError UpdateActionState(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t) Parameters Type Name Description VRActiveActionSet_t [] pSets System.UInt32 unSizeOfVRSelectedActionSet_t Returns Type Description EVRInputError"
  },
  "api/Valve.VR.ISteamVR_Action_Vibration.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Vibration.html",
    "title": "Interface ISteamVR_Action_Vibration | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Vibration Vibration actions are used to trigger haptic feedback in vr controllers. Inherited Members ISteamVR_Action.GetActive(SteamVR_Input_Sources) ISteamVR_Action.GetShortName() ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Vibration : ISteamVR_Action_Out, ISteamVR_Action, ISteamVR_Action_Out_Source, ISteamVR_Action_Source Methods Execute(Single, Single, Single, Single, SteamVR_Input_Sources) Trigger the haptics at a certain time for a certain length Declaration void Execute(float secondsFromNow, float durationSeconds, float frequency, float amplitude, SteamVR_Input_Sources inputSource) Parameters Type Name Description System.Single secondsFromNow How long from the current time to execute the action (in seconds - can be 0) System.Single durationSeconds How long the haptic action should last (in seconds) System.Single frequency How often the haptic motor should bounce (0 - 320 in hz. The lower end being more useful) System.Single amplitude How intense the haptic action should be (0 - 1) SteamVR_Input_Sources inputSource The device you would like to execute the haptic action. Any if the action is not device specific."
  },
  "api/Valve.VR.ISteamVR_Action_Boolean.html": {
    "href": "api/Valve.VR.ISteamVR_Action_Boolean.html",
    "title": "Interface ISteamVR_Action_Boolean | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_Action_Boolean Inherited Members ISteamVR_Action_In_Source.changed ISteamVR_Action_In_Source.lastChanged ISteamVR_Action_In_Source.changedTime ISteamVR_Action_In_Source.updateTime ISteamVR_Action_In_Source.activeOrigin ISteamVR_Action_In_Source.lastActiveOrigin ISteamVR_Action_In_Source.activeDevice ISteamVR_Action_In_Source.trackedDeviceIndex ISteamVR_Action_In_Source.renderModelComponentName ISteamVR_Action_In_Source.localizedOriginName ISteamVR_Action_Source.active ISteamVR_Action_Source.activeBinding ISteamVR_Action_Source.lastActive ISteamVR_Action_Source.lastActiveBinding ISteamVR_Action_Source.fullPath ISteamVR_Action_Source.handle ISteamVR_Action_Source.actionSet ISteamVR_Action_Source.direction Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_Action_Boolean : ISteamVR_Action_In_Source, ISteamVR_Action_Source Properties lastState The value of the action's 'state' during the previous update Declaration bool lastState { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state lastStateDown The value of the action's 'stateDown' during the previous update Declaration bool lastStateDown { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state lastStateUp The value of the action's 'stateUp' during the previous update Declaration bool lastStateUp { get; } Property Value Type Description System.Boolean Remarks Always returns the previous update state state The current value of the boolean action. Note: Will only return true if the action is also active. Declaration bool state { get; } Property Value Type Description System.Boolean stateDown True when the action's state changes from false to true. Note: Will only return true if the action is also active. Declaration bool stateDown { get; } Property Value Type Description System.Boolean stateUp True when the action's state changes from true to false. Note: Will only return true if the action is also active. Declaration bool stateUp { get; } Property Value Type Description System.Boolean"
  },
  "api/Valve.VR.ISteamVR_ActionSet.html": {
    "href": "api/Valve.VR.ISteamVR_ActionSet.html",
    "title": "Interface ISteamVR_ActionSet | SteamVR Unity Plugin",
    "keywords": "Interface ISteamVR_ActionSet Action sets are logical groupings of actions. Multiple sets can be active at one time. Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public interface ISteamVR_ActionSet Properties allActions All actions within this set (including out actions) Declaration SteamVR_Action[] allActions { get; } Property Value Type Description SteamVR_Action [] fullPath The full path to this action set (ex: /actions/in/default) Declaration string fullPath { get; } Property Value Type Description System.String handle Declaration ulong handle { get; } Property Value Type Description System.UInt64 nonVisualInActions All IN actions within this set that are NOT pose or skeleton actions Declaration ISteamVR_Action_In[] nonVisualInActions { get; } Property Value Type Description ISteamVR_Action_In [] outActionArray All out actions within this set Declaration ISteamVR_Action_Out[] outActionArray { get; } Property Value Type Description ISteamVR_Action_Out [] poseActions All pose actions within this set Declaration SteamVR_Action_Pose[] poseActions { get; } Property Value Type Description SteamVR_Action_Pose [] skeletonActions All skeleton actions within this set Declaration SteamVR_Action_Skeleton[] skeletonActions { get; } Property Value Type Description SteamVR_Action_Skeleton [] usage How the binding UI should display this set Declaration string usage { get; } Property Value Type Description System.String visualActions All pose and skeleton actions within this set Declaration ISteamVR_Action_In[] visualActions { get; } Property Value Type Description ISteamVR_Action_In [] Methods Activate(SteamVR_Input_Sources, Int32, Boolean) Activate this set so its actions can be called Declaration void Activate(SteamVR_Input_Sources activateForSource = SteamVR_Input_Sources.Any, int priority = 0, bool disableAllOtherActionSets = false) Parameters Type Name Description SteamVR_Input_Sources activateForSource Will activate this action set only for the specified source. Any if you want to activate for everything System.Int32 priority The priority of this action set. If you have two actions bound to the same input (button) the higher priority set will override the lower priority. If they are the same priority both will execute. System.Boolean disableAllOtherActionSets Disable all other action sets at the same time Deactivate(SteamVR_Input_Sources) Deactivate the action set so its actions can no longer be called Declaration void Deactivate(SteamVR_Input_Sources forSource = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources forSource GetShortName() Gets the last part of the path for this action. Removes \"actions\" and direction. Declaration string GetShortName() Returns Type Description System.String GetTimeLastChanged(SteamVR_Input_Sources) Returns the last time this action set was changed (set to active or inactive) Declaration float GetTimeLastChanged(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Single IsActive(SteamVR_Input_Sources) Returns whether the set is currently active or not. Declaration bool IsActive(SteamVR_Input_Sources source = SteamVR_Input_Sources.Any) Parameters Type Name Description SteamVR_Input_Sources source The device to check. Any means all devices here (not left or right, but all) Returns Type Description System.Boolean ReadRawSetActive(SteamVR_Input_Sources) Declaration bool ReadRawSetActive(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Boolean ReadRawSetLastChanged(SteamVR_Input_Sources) Declaration float ReadRawSetLastChanged(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Single ReadRawSetPriority(SteamVR_Input_Sources) Declaration int ReadRawSetPriority(SteamVR_Input_Sources inputSource) Parameters Type Name Description SteamVR_Input_Sources inputSource Returns Type Description System.Int32"
  },
  "api/Valve.VR.InteractionSystem.Teleport.html": {
    "href": "api/Valve.VR.InteractionSystem.Teleport.html",
    "title": "Class Teleport | SteamVR Unity Plugin",
    "keywords": "Class Teleport Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Teleport Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class Teleport : MonoBehaviour Fields activateObjectTime Declaration public float activateObjectTime Field Value Type Description System.Single arcDistance Declaration public float arcDistance Field Value Type Description System.Single areaHighlightedMaterial Declaration public Material areaHighlightedMaterial Field Value Type Description UnityEngine.Material areaLockedMaterial Declaration public Material areaLockedMaterial Field Value Type Description UnityEngine.Material areaVisibleMaterial Declaration public Material areaVisibleMaterial Field Value Type Description UnityEngine.Material badHighlightSound Declaration public AudioClip badHighlightSound Field Value Type Description UnityEngine.AudioClip ChangeScene Declaration public static SteamVR_Events.Event<float> ChangeScene Field Value Type Description SteamVR_Events.Event < System.Single > deactivateObjectTime Declaration public float deactivateObjectTime Field Value Type Description System.Single debugFloor Declaration [Header(\"Debug\")] public bool debugFloor Field Value Type Description System.Boolean destinationReticleTransform Declaration public Transform destinationReticleTransform Field Value Type Description UnityEngine.Transform floorDebugLine Declaration public LineRenderer floorDebugLine Field Value Type Description UnityEngine.LineRenderer floorDebugSphere Declaration public MeshRenderer floorDebugSphere Field Value Type Description UnityEngine.MeshRenderer floorFixupMaximumTraceDistance Declaration public float floorFixupMaximumTraceDistance Field Value Type Description System.Single floorFixupTraceLayerMask Declaration public LayerMask floorFixupTraceLayerMask Field Value Type Description UnityEngine.LayerMask goodHighlightSound Declaration public AudioClip goodHighlightSound Field Value Type Description UnityEngine.AudioClip headAudioSource Declaration public AudioSource headAudioSource Field Value Type Description UnityEngine.AudioSource invalidReticleTransform Declaration public Transform invalidReticleTransform Field Value Type Description UnityEngine.Transform loopingAudioSource Declaration public AudioSource loopingAudioSource Field Value Type Description UnityEngine.AudioSource meshFadeTime Declaration public float meshFadeTime Field Value Type Description System.Single offsetReticleTransform Declaration public Transform offsetReticleTransform Field Value Type Description UnityEngine.Transform onActivateObjectTransform Declaration [Header(\"Effects\")] public Transform onActivateObjectTransform Field Value Type Description UnityEngine.Transform onDeactivateObjectTransform Declaration public Transform onDeactivateObjectTransform Field Value Type Description UnityEngine.Transform playAreaPreviewCorner Declaration public GameObject playAreaPreviewCorner Field Value Type Description UnityEngine.GameObject playAreaPreviewSide Declaration public GameObject playAreaPreviewSide Field Value Type Description UnityEngine.GameObject Player Declaration public static SteamVR_Events.Event<TeleportMarkerBase> Player Field Value Type Description SteamVR_Events.Event < TeleportMarkerBase > PlayerPre Declaration public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre Field Value Type Description SteamVR_Events.Event < TeleportMarkerBase > pointerAudioSource Declaration [Header(\"Audio Sources\")] public AudioSource pointerAudioSource Field Value Type Description UnityEngine.AudioSource pointerInvalidColor Declaration public Color pointerInvalidColor Field Value Type Description UnityEngine.Color pointerLockedColor Declaration public Color pointerLockedColor Field Value Type Description UnityEngine.Color pointerLoopSound Declaration public AudioClip pointerLoopSound Field Value Type Description UnityEngine.AudioClip pointerStartSound Declaration public AudioClip pointerStartSound Field Value Type Description UnityEngine.AudioClip pointerStopSound Declaration public AudioClip pointerStopSound Field Value Type Description UnityEngine.AudioClip pointerValidColor Declaration public Color pointerValidColor Field Value Type Description UnityEngine.Color pointHighlightedMaterial Declaration public Material pointHighlightedMaterial Field Value Type Description UnityEngine.Material pointLockedMaterial Declaration public Material pointLockedMaterial Field Value Type Description UnityEngine.Material pointVisibleMaterial Declaration public Material pointVisibleMaterial Field Value Type Description UnityEngine.Material reticleAudioSource Declaration public AudioSource reticleAudioSource Field Value Type Description UnityEngine.AudioSource showOffsetReticle Declaration public bool showOffsetReticle Field Value Type Description System.Boolean showPlayAreaMarker Declaration public bool showPlayAreaMarker Field Value Type Description System.Boolean teleportAction Declaration public SteamVR_Action_Boolean teleportAction Field Value Type Description SteamVR_Action_Boolean teleportFadeTime Declaration public float teleportFadeTime Field Value Type Description System.Single teleportSound Declaration [Header(\"Sounds\")] public AudioClip teleportSound Field Value Type Description UnityEngine.AudioClip traceLayerMask Declaration public LayerMask traceLayerMask Field Value Type Description UnityEngine.LayerMask Properties instance Declaration public static Teleport instance { get; } Property Value Type Description Teleport Methods CancelTeleportHint() Declaration public void CancelTeleportHint() ChangeSceneAction(UnityAction<Single>) Declaration public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action) Parameters Type Name Description UnityEngine.Events.UnityAction < System.Single > action Returns Type Description SteamVR_Events.Action < System.Single > HideTeleportPointer() Declaration public void HideTeleportPointer() IsEligibleForTeleport(Hand) Declaration public bool IsEligibleForTeleport(Hand hand) Parameters Type Name Description Hand hand Returns Type Description System.Boolean PlayerAction(UnityAction<TeleportMarkerBase>) Declaration public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action) Parameters Type Name Description UnityEngine.Events.UnityAction < TeleportMarkerBase > action Returns Type Description SteamVR_Events.Action < TeleportMarkerBase > PlayerPreAction(UnityAction<TeleportMarkerBase>) Declaration public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action) Parameters Type Name Description UnityEngine.Events.UnityAction < TeleportMarkerBase > action Returns Type Description SteamVR_Events.Action < TeleportMarkerBase > ShowTeleportHint() Declaration public void ShowTeleportHint()"
  },
  "api/Valve.VR.ImuSample_t.html": {
    "href": "api/Valve.VR.ImuSample_t.html",
    "title": "Struct ImuSample_t | SteamVR Unity Plugin",
    "keywords": "Struct ImuSample_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct ImuSample_t Fields fSampleTime Declaration public double fSampleTime Field Value Type Description System.Double unOffScaleFlags Declaration public uint unOffScaleFlags Field Value Type Description System.UInt32 vAccel Declaration public HmdVector3d_t vAccel Field Value Type Description HmdVector3d_t vGyro Declaration public HmdVector3d_t vGyro Field Value Type Description HmdVector3d_t"
  },
  "api/Valve.VR.CVRExtendedDisplay.html": {
    "href": "api/Valve.VR.CVRExtendedDisplay.html",
    "title": "Class CVRExtendedDisplay | SteamVR Unity Plugin",
    "keywords": "Class CVRExtendedDisplay Inheritance System.Object CVRExtendedDisplay Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public class CVRExtendedDisplay Methods GetDXGIOutputInfo(ref Int32, ref Int32) Declaration public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex) Parameters Type Name Description System.Int32 pnAdapterIndex System.Int32 pnAdapterOutputIndex GetEyeOutputViewport(EVREye, ref UInt32, ref UInt32, ref UInt32, ref UInt32) Declaration public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight) Parameters Type Name Description EVREye eEye System.UInt32 pnX System.UInt32 pnY System.UInt32 pnWidth System.UInt32 pnHeight GetWindowBounds(ref Int32, ref Int32, ref UInt32, ref UInt32) Declaration public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight) Parameters Type Name Description System.Int32 pnX System.Int32 pnY System.UInt32 pnWidth System.UInt32 pnHeight"
  },
  "api/Valve.VR.AppOverrideKeys_t.html": {
    "href": "api/Valve.VR.AppOverrideKeys_t.html",
    "title": "Struct AppOverrideKeys_t | SteamVR Unity Plugin",
    "keywords": "Struct AppOverrideKeys_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct AppOverrideKeys_t Fields pchKey Declaration public IntPtr pchKey Field Value Type Description System.IntPtr pchValue Declaration public IntPtr pchValue Field Value Type Description System.IntPtr"
  },
  "api/Valve.VR.VREvent_HapticVibration_t.html": {
    "href": "api/Valve.VR.VREvent_HapticVibration_t.html",
    "title": "Struct VREvent_HapticVibration_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_HapticVibration_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_HapticVibration_t Fields componentHandle Declaration public ulong componentHandle Field Value Type Description System.UInt64 containerHandle Declaration public ulong containerHandle Field Value Type Description System.UInt64 fAmplitude Declaration public float fAmplitude Field Value Type Description System.Single fDurationSeconds Declaration public float fDurationSeconds Field Value Type Description System.Single fFrequency Declaration public float fFrequency Field Value Type Description System.Single"
  },
  "api/Valve.VR.VREvent_EditingCameraSurface_t.html": {
    "href": "api/Valve.VR.VREvent_EditingCameraSurface_t.html",
    "title": "Struct VREvent_EditingCameraSurface_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_EditingCameraSurface_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_EditingCameraSurface_t Fields nVisualMode Declaration public uint nVisualMode Field Value Type Description System.UInt32 overlayHandle Declaration public ulong overlayHandle Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.EVRApplicationTransitionState.html": {
    "href": "api/Valve.VR.EVRApplicationTransitionState.html",
    "title": "Enum EVRApplicationTransitionState | SteamVR Unity Plugin",
    "keywords": "Enum EVRApplicationTransitionState Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRApplicationTransitionState Fields Name Description VRApplicationTransition_NewAppLaunched VRApplicationTransition_None VRApplicationTransition_OldAppQuitSent VRApplicationTransition_WaitingForExternalLaunch"
  },
  "api/Valve.VR.EVRApplicationProperty.html": {
    "href": "api/Valve.VR.EVRApplicationProperty.html",
    "title": "Enum EVRApplicationProperty | SteamVR Unity Plugin",
    "keywords": "Enum EVRApplicationProperty Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EVRApplicationProperty Fields Name Description ActionManifestURL_String Arguments_String BinaryPath_String Description_String ImagePath_String IsDashboardOverlay_Bool IsInstanced_Bool IsInternal_Bool IsTemplate_Bool LastLaunchTime_Uint64 LaunchType_String Name_String NewsURL_String Source_String URL_String WantsCompositorPauseInStandby_Bool WorkingDirectory_String"
  },
  "api/Valve.VR.ETrackedDeviceProperty.html": {
    "href": "api/Valve.VR.ETrackedDeviceProperty.html",
    "title": "Enum ETrackedDeviceProperty | SteamVR Unity Plugin",
    "keywords": "Enum ETrackedDeviceProperty Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum ETrackedDeviceProperty Fields Name Description Prop_AdditionalDeviceSettingsPath_String Prop_AdditionalRadioFeatures_Uint64 Prop_AdditionalSystemReportData_String Prop_AllWirelessDongleDescriptions_String Prop_AttachedDeviceId_String Prop_AudioBridgeFirmwareVersion_Uint64 Prop_AudioFirmwareVersion_Uint64 Prop_Axis0Type_Int32 Prop_Axis1Type_Int32 Prop_Axis2Type_Int32 Prop_Axis3Type_Int32 Prop_Axis4Type_Int32 Prop_BlockServerShutdown_Bool Prop_BootloaderVersion_Uint64 Prop_CameraCompatibilityMode_Int32 Prop_CameraDistortionCoefficients_Float_Array Prop_CameraDistortionFunction_Int32_Array Prop_CameraFirmwareDescription_String Prop_CameraFirmwareVersion_Uint64 Prop_CameraFrameLayout_Int32 Prop_CameraStreamFormat_Int32 Prop_CameraToHeadTransform_Matrix34 Prop_CameraToHeadTransforms_Matrix34_Array Prop_CameraWhiteBalance_Vector4_Array Prop_CanUnifyCoordinateSystemWithHmd_Bool Prop_CanWirelessIdentify_Bool Prop_CompositeFirmwareVersion_String Prop_ConfigurationIncludesLighthouse20Features_Bool Prop_ConnectedWirelessDongle_String Prop_ContainsProximitySensor_Bool Prop_ControllerHandSelectionPriority_Int32 Prop_ControllerRoleHint_Int32 Prop_ControllerType_String Prop_CurrentUniverseId_Uint64 Prop_DeviceBatteryPercentage_Float Prop_DeviceCanPowerOff_Bool Prop_DeviceClass_Int32 Prop_DeviceIsCharging_Bool Prop_DeviceIsWireless_Bool Prop_DeviceProvidesBatteryStatus_Bool Prop_DisplayAllowNightMode_Bool Prop_DisplayBootloaderVersion_Uint64 Prop_DisplayDebugMode_Bool Prop_DisplayFirmwareVersion_Uint64 Prop_DisplayFPGAVersion_Uint64 Prop_DisplayFrequency_Float Prop_DisplayGCBlackClamp_Float Prop_DisplayGCImage_String Prop_DisplayGCOffset_Float Prop_DisplayGCPrescale_Float Prop_DisplayGCScale_Float Prop_DisplayGCType_Int32 Prop_DisplayHardwareVersion_Uint64 Prop_DisplayHiddenArea_Binary_End Prop_DisplayHiddenArea_Binary_Start Prop_DisplayMCImageData_Binary Prop_DisplayMCImageHeight_Int32 Prop_DisplayMCImageLeft_String Prop_DisplayMCImageNumChannels_Int32 Prop_DisplayMCImageRight_String Prop_DisplayMCImageWidth_Int32 Prop_DisplayMCOffset_Float Prop_DisplayMCScale_Float Prop_DisplayMCType_Int32 Prop_DisplaySuppressed_Bool Prop_DistortionMeshResolution_Int32 Prop_DongleVersion_Uint64 Prop_DoNotApplyPrediction_Bool Prop_DriverDirectModeSendsVsyncEvents_Bool Prop_DriverIsDrawingControllers_Bool Prop_DriverProvidedChaperonePath_String Prop_DriverRequestedMuraCorrectionMode_Int32 Prop_DriverRequestedMuraFeather_InnerBottom_Int32 Prop_DriverRequestedMuraFeather_InnerLeft_Int32 Prop_DriverRequestedMuraFeather_InnerRight_Int32 Prop_DriverRequestedMuraFeather_InnerTop_Int32 Prop_DriverRequestedMuraFeather_OuterBottom_Int32 Prop_DriverRequestedMuraFeather_OuterLeft_Int32 Prop_DriverRequestedMuraFeather_OuterRight_Int32 Prop_DriverRequestedMuraFeather_OuterTop_Int32 Prop_DriverRequestsApplicationPause_Bool Prop_DriverRequestsReducedRendering_Bool Prop_DriverVersion_String Prop_EdidProductID_Int32 Prop_EdidVendorID_Int32 Prop_ExpectedControllerCount_Int32 Prop_ExpectedControllerType_String Prop_ExpectedTrackingReferenceCount_Int32 Prop_FieldOfViewBottomDegrees_Float Prop_FieldOfViewLeftDegrees_Float Prop_FieldOfViewRightDegrees_Float Prop_FieldOfViewTopDegrees_Float Prop_Firmware_ForceUpdateRequired_Bool Prop_Firmware_ManualUpdate_Bool Prop_Firmware_ManualUpdateURL_String Prop_Firmware_ProgrammingTarget_String Prop_Firmware_UpdateAvailable_Bool Prop_FirmwareVersion_Uint64 Prop_FPGAVersion_Uint64 Prop_GraphicsAdapterLuid_Uint64 Prop_HardwareRevision_String Prop_HardwareRevision_Uint64 Prop_HasCamera_Bool Prop_HasCameraComponent_Bool Prop_HasControllerComponent_Bool Prop_HasDisplayComponent_Bool Prop_HasDriverDirectModeComponent_Bool Prop_HasSpatialAnchorsSupport_Bool Prop_HasVirtualDisplayComponent_Bool Prop_IconPathName_String Prop_Identifiable_Bool Prop_ImageBridgeFirmwareVersion_Uint64 Prop_ImuFactoryAccelerometerBias_Vector3 Prop_ImuFactoryAccelerometerScale_Vector3 Prop_ImuFactoryGyroBias_Vector3 Prop_ImuFactoryGyroScale_Vector3 Prop_ImuToHeadTransform_Matrix34 Prop_InputProfilePath_String Prop_InstallPath_String Prop_Invalid Prop_IsOnDesktop_Bool Prop_LegacyInputProfile_String Prop_LensCenterLeftU_Float Prop_LensCenterLeftV_Float Prop_LensCenterRightU_Float Prop_LensCenterRightV_Float Prop_ManufacturerName_String Prop_MinimumIpdStepMeters_Float Prop_ModeLabel_String Prop_ModelNumber_String Prop_NamedIconPathControllerLeftDeviceOff_String Prop_NamedIconPathControllerRightDeviceOff_String Prop_NamedIconPathDeviceAlertLow_String Prop_NamedIconPathDeviceNotReady_String Prop_NamedIconPathDeviceOff_String Prop_NamedIconPathDeviceReady_String Prop_NamedIconPathDeviceReadyAlert_String Prop_NamedIconPathDeviceSearching_String Prop_NamedIconPathDeviceSearchingAlert_String Prop_NamedIconPathDeviceStandby_String Prop_NamedIconPathTrackingReferenceDeviceOff_String Prop_NeverTracked_Bool Prop_Nonce_Int32 Prop_NumCameras_Int32 Prop_ParentContainer Prop_ParentDriver_Uint64 Prop_PreviousUniverseId_Uint64 Prop_RadioVersion_Uint64 Prop_RegisteredDeviceType_String Prop_RenderModelName_String Prop_ReportsTimeSinceVSync_Bool Prop_ResourceRoot_String Prop_ScreenshotHorizontalFieldOfViewDegrees_Float Prop_ScreenshotVerticalFieldOfViewDegrees_Float Prop_SecondsFromPhotonsToVblank_Float Prop_SecondsFromVsyncToPhotons_Float Prop_SerialNumber_String Prop_StatusDisplayTransform_Matrix34 Prop_SupportedButtons_Uint64 Prop_TrackedDeviceProperty_Max Prop_TrackingFirmwareVersion_String Prop_TrackingRangeMaximumMeters_Float Prop_TrackingRangeMinimumMeters_Float Prop_TrackingSystemName_String Prop_UserConfigPath_String Prop_UserHeadToEyeDepthMeters_Float Prop_UserIpdMeters_Float Prop_VendorSpecific_Reserved_End Prop_VendorSpecific_Reserved_Start Prop_ViveSystemButtonFixRequired_Bool Prop_VRCVersion_Uint64 Prop_WillDriftInYaw_Bool"
  },
  "api/Valve.VR.EIOBufferMode.html": {
    "href": "api/Valve.VR.EIOBufferMode.html",
    "title": "Enum EIOBufferMode | SteamVR Unity Plugin",
    "keywords": "Enum EIOBufferMode Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum EIOBufferMode Fields Name Description Create Read Write"
  },
  "api/Valve.VR.InteractionSystem.HideOnHandFocusLost.html": {
    "href": "api/Valve.VR.InteractionSystem.HideOnHandFocusLost.html",
    "title": "Class HideOnHandFocusLost | SteamVR Unity Plugin",
    "keywords": "Class HideOnHandFocusLost Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour HideOnHandFocusLost Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class HideOnHandFocusLost : MonoBehaviour"
  },
  "api/Valve.VR.InteractionSystem.EnumFlags.html": {
    "href": "api/Valve.VR.InteractionSystem.EnumFlags.html",
    "title": "Class EnumFlags | SteamVR Unity Plugin",
    "keywords": "Class EnumFlags Inheritance System.Object System.Attribute UnityEngine.PropertyAttribute EnumFlags Implements System.Runtime.InteropServices._Attribute Inherited Members UnityEngine.PropertyAttribute.order System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.Equals(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class EnumFlags : PropertyAttribute, _Attribute Constructors EnumFlags() Declaration public EnumFlags() Implements System.Runtime.InteropServices._Attribute"
  },
  "api/Valve.VR.InteractionSystem.DontDestroyOnLoad.html": {
    "href": "api/Valve.VR.InteractionSystem.DontDestroyOnLoad.html",
    "title": "Class DontDestroyOnLoad | SteamVR Unity Plugin",
    "keywords": "Class DontDestroyOnLoad Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DontDestroyOnLoad Inherited Members UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Component.rigidbody UnityEngine.Component.rigidbody2D UnityEngine.Component.camera UnityEngine.Component.light UnityEngine.Component.animation UnityEngine.Component.constantForce UnityEngine.Component.renderer UnityEngine.Component.audio UnityEngine.Component.guiText UnityEngine.Component.networkView UnityEngine.Component.guiElement UnityEngine.Component.guiTexture UnityEngine.Component.collider UnityEngine.Component.collider2D UnityEngine.Component.hingeJoint UnityEngine.Component.particleEmitter UnityEngine.Component.particleSystem UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR.InteractionSystem Assembly : Assembly-CSharp.dll Syntax public class DontDestroyOnLoad : MonoBehaviour"
  },
  "api/Valve.VR.Imu_OffScaleFlags.html": {
    "href": "api/Valve.VR.Imu_OffScaleFlags.html",
    "title": "Enum Imu_OffScaleFlags | SteamVR Unity Plugin",
    "keywords": "Enum Imu_OffScaleFlags Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public enum Imu_OffScaleFlags Fields Name Description OffScale_AccelX OffScale_AccelY OffScale_AccelZ OffScale_GyroX OffScale_GyroY OffScale_GyroZ"
  },
  "api/Valve.VR.VREvent_PerformanceTest_t.html": {
    "href": "api/Valve.VR.VREvent_PerformanceTest_t.html",
    "title": "Struct VREvent_PerformanceTest_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_PerformanceTest_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_PerformanceTest_t Fields m_nFidelityLevel Declaration public uint m_nFidelityLevel Field Value Type Description System.UInt32"
  },
  "api/Valve.VR.VREvent_Overlay_t.html": {
    "href": "api/Valve.VR.VREvent_Overlay_t.html",
    "title": "Struct VREvent_Overlay_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Overlay_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Overlay_t Fields devicePath Declaration public ulong devicePath Field Value Type Description System.UInt64 overlayHandle Declaration public ulong overlayHandle Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_Notification_t.html": {
    "href": "api/Valve.VR.VREvent_Notification_t.html",
    "title": "Struct VREvent_Notification_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Notification_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Notification_t Fields notificationId Declaration public uint notificationId Field Value Type Description System.UInt32 ulUserValue Declaration public ulong ulUserValue Field Value Type Description System.UInt64"
  },
  "api/Valve.VR.VREvent_Mouse_t.html": {
    "href": "api/Valve.VR.VREvent_Mouse_t.html",
    "title": "Struct VREvent_Mouse_t | SteamVR Unity Plugin",
    "keywords": "Struct VREvent_Mouse_t Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Valve.VR Assembly : Assembly-CSharp.dll Syntax public struct VREvent_Mouse_t Fields button Declaration public uint button Field Value Type Description System.UInt32 x Declaration public float x Field Value Type Description System.Single y Declaration public float y Field Value Type Description System.Single"
  }
}